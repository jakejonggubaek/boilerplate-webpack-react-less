/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={886:(e,n,t)=>{"use strict";t.d(n,{Z:()=>c});var r=t(15),a=t.n(r),l=t(645),o=t.n(l),s=t(299),i=o()(a());i.i(s.Z),i.push([e.id,"@font-face {\n  font-family: 'Roboto Slab';\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/robotoslab/v13/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjo0oSWaA.ttf) format('truetype');\n}\nhtml {\n  line-height: 1.15;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\nbody {\n  margin: 0;\n}\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\n  display: block;\n}\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\nfigcaption,\nfigure,\nmain {\n  display: block;\n}\nfigure {\n  margin: 1em 40px;\n}\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\npre {\n  font-family: monospace,monospace;\n  font-size: 1em;\n}\na {\n  background-color: transparent;\n  -webkit-text-decoration-skip: objects;\n}\nabbr[title] {\n  border-bottom: none;\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\nb,\nstrong {\n  font-weight: inherit;\n}\nb,\nstrong {\n  font-weight: bolder;\n}\ncode,\nkbd,\nsamp {\n  font-family: monospace,monospace;\n  font-size: 1em;\n}\ndfn {\n  font-style: italic;\n}\nmark {\n  background-color: #ff0;\n  color: #000;\n}\nsmall {\n  font-size: 80%;\n}\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\naudio,\nvideo {\n  display: inline-block;\n}\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\nimg {\n  border-style: none;\n}\nsvg:not(:root) {\n  overflow: hidden;\n}\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: sans-serif;\n  font-size: 100%;\n  line-height: 1.15;\n  margin: 0;\n}\nbutton,\ninput {\n  overflow: visible;\n}\nbutton,\nselect {\n  text-transform: none;\n}\nbutton,\nhtml [type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\nlegend {\n  box-sizing: border-box;\n  color: inherit;\n  display: table;\n  max-width: 100%;\n  padding: 0;\n  white-space: normal;\n}\nprogress {\n  display: inline-block;\n  vertical-align: baseline;\n}\ntextarea {\n  overflow: auto;\n}\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  padding: 0;\n}\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n[type=search] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n[type=search]::-webkit-search-cancel-button,\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\ndetails,\nmenu {\n  display: block;\n}\nsummary {\n  display: list-item;\n}\ncanvas {\n  display: inline-block;\n}\ntemplate {\n  display: none;\n}\n[hidden] {\n  display: none;\n}\n.clearfix:after {\n  visibility: hidden;\n  display: block;\n  font-size: 0;\n  content: '';\n  clear: both;\n  height: 0;\n}\n* {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.visuallyHidden:not(:focus):not(:active) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0);\n  overflow: hidden;\n}\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n}\n.firefly {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  width: 0.4vw;\n  height: 0.4vw;\n  margin: -0.2vw 0 0 9.8vw;\n  animation: ease 200s alternate infinite;\n  pointer-events: none;\n}\n.firefly::before,\n.firefly::after {\n  content: \"\";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  transform-origin: -10vw;\n}\n.firefly::before {\n  background: black;\n  opacity: 0.4;\n  animation: drift ease alternate infinite;\n}\n.firefly::after {\n  background: white;\n  opacity: 0;\n  box-shadow: 0 0 0vw 0vw yellow;\n  animation: drift ease alternate infinite, flash ease infinite;\n}\n.firefly:nth-child(1) {\n  animation-name: move1;\n}\n.firefly:nth-child(1)::before {\n  animation-duration: 18s;\n}\n.firefly:nth-child(1)::after {\n  animation-duration: 18s, 8741ms;\n  animation-delay: 0ms, 2068ms;\n}\n@keyframes move1 {\n  0% {\n    transform: translateX(-14vw) translateY(18vh) scale(0.91);\n  }\n  5.2631578947% {\n    transform: translateX(-3vw) translateY(-20vh) scale(0.43);\n  }\n  10.5263157895% {\n    transform: translateX(17vw) translateY(24vh) scale(0.54);\n  }\n  15.7894736842% {\n    transform: translateX(45vw) translateY(36vh) scale(0.64);\n  }\n  21.0526315789% {\n    transform: translateX(-27vw) translateY(-46vh) scale(0.57);\n  }\n  26.3157894737% {\n    transform: translateX(31vw) translateY(-29vh) scale(0.63);\n  }\n  31.5789473684% {\n    transform: translateX(-41vw) translateY(35vh) scale(0.83);\n  }\n  36.8421052632% {\n    transform: translateX(36vw) translateY(-22vh) scale(0.67);\n  }\n  42.1052631579% {\n    transform: translateX(20vw) translateY(-40vh) scale(0.37);\n  }\n  47.3684210526% {\n    transform: translateX(22vw) translateY(10vh) scale(0.58);\n  }\n  52.6315789474% {\n    transform: translateX(-47vw) translateY(34vh) scale(0.91);\n  }\n  57.8947368421% {\n    transform: translateX(-46vw) translateY(-9vh) scale(0.97);\n  }\n  63.1578947368% {\n    transform: translateX(43vw) translateY(20vh) scale(0.4);\n  }\n  68.4210526316% {\n    transform: translateX(47vw) translateY(41vh) scale(0.75);\n  }\n  73.6842105263% {\n    transform: translateX(23vw) translateY(-7vh) scale(0.48);\n  }\n  78.9473684211% {\n    transform: translateX(32vw) translateY(36vh) scale(0.51);\n  }\n  84.2105263158% {\n    transform: translateX(22vw) translateY(33vh) scale(0.8);\n  }\n  89.4736842105% {\n    transform: translateX(7vw) translateY(-15vh) scale(0.78);\n  }\n  94.7368421053% {\n    transform: translateX(-41vw) translateY(-31vh) scale(0.7);\n  }\n  100% {\n    transform: translateX(0vw) translateY(22vh) scale(0.96);\n  }\n}\n.firefly:nth-child(2) {\n  animation-name: move2;\n}\n.firefly:nth-child(2)::before {\n  animation-duration: 14s;\n}\n.firefly:nth-child(2)::after {\n  animation-duration: 14s, 8044ms;\n  animation-delay: 0ms, 1808ms;\n}\n@keyframes move2 {\n  0% {\n    transform: translateX(0vw) translateY(46vh) scale(0.78);\n  }\n  5.2631578947% {\n    transform: translateX(-43vw) translateY(-10vh) scale(0.63);\n  }\n  10.5263157895% {\n    transform: translateX(18vw) translateY(-18vh) scale(0.85);\n  }\n  15.7894736842% {\n    transform: translateX(5vw) translateY(-11vh) scale(0.34);\n  }\n  21.0526315789% {\n    transform: translateX(0vw) translateY(-16vh) scale(0.71);\n  }\n  26.3157894737% {\n    transform: translateX(-45vw) translateY(14vh) scale(0.55);\n  }\n  31.5789473684% {\n    transform: translateX(28vw) translateY(10vh) scale(0.64);\n  }\n  36.8421052632% {\n    transform: translateX(-37vw) translateY(-10vh) scale(0.69);\n  }\n  42.1052631579% {\n    transform: translateX(-42vw) translateY(-36vh) scale(0.34);\n  }\n  47.3684210526% {\n    transform: translateX(35vw) translateY(-28vh) scale(0.41);\n  }\n  52.6315789474% {\n    transform: translateX(-36vw) translateY(27vh) scale(0.46);\n  }\n  57.8947368421% {\n    transform: translateX(11vw) translateY(11vh) scale(0.58);\n  }\n  63.1578947368% {\n    transform: translateX(-4vw) translateY(-5vh) scale(0.64);\n  }\n  68.4210526316% {\n    transform: translateX(-14vw) translateY(-19vh) scale(0.64);\n  }\n  73.6842105263% {\n    transform: translateX(32vw) translateY(-1vh) scale(0.77);\n  }\n  78.9473684211% {\n    transform: translateX(-46vw) translateY(3vh) scale(0.39);\n  }\n  84.2105263158% {\n    transform: translateX(16vw) translateY(-46vh) scale(0.62);\n  }\n  89.4736842105% {\n    transform: translateX(44vw) translateY(24vh) scale(0.89);\n  }\n  94.7368421053% {\n    transform: translateX(-38vw) translateY(34vh) scale(0.76);\n  }\n  100% {\n    transform: translateX(-16vw) translateY(-39vh) scale(0.86);\n  }\n}\n.firefly:nth-child(3) {\n  animation-name: move3;\n}\n.firefly:nth-child(3)::before {\n  animation-duration: 17s;\n}\n.firefly:nth-child(3)::after {\n  animation-duration: 17s, 10714ms;\n  animation-delay: 0ms, 1716ms;\n}\n@keyframes move3 {\n  0% {\n    transform: translateX(43vw) translateY(34vh) scale(0.53);\n  }\n  5.8823529412% {\n    transform: translateX(34vw) translateY(-10vh) scale(0.49);\n  }\n  11.7647058824% {\n    transform: translateX(6vw) translateY(-19vh) scale(0.45);\n  }\n  17.6470588235% {\n    transform: translateX(-26vw) translateY(-12vh) scale(0.53);\n  }\n  23.5294117647% {\n    transform: translateX(44vw) translateY(43vh) scale(0.64);\n  }\n  29.4117647059% {\n    transform: translateX(36vw) translateY(-32vh) scale(0.83);\n  }\n  35.2941176471% {\n    transform: translateX(45vw) translateY(-14vh) scale(0.93);\n  }\n  41.1764705882% {\n    transform: translateX(33vw) translateY(-43vh) scale(0.63);\n  }\n  47.0588235294% {\n    transform: translateX(-8vw) translateY(26vh) scale(0.66);\n  }\n  52.9411764706% {\n    transform: translateX(34vw) translateY(31vh) scale(0.72);\n  }\n  58.8235294118% {\n    transform: translateX(32vw) translateY(20vh) scale(0.56);\n  }\n  64.7058823529% {\n    transform: translateX(-25vw) translateY(20vh) scale(0.9);\n  }\n  70.5882352941% {\n    transform: translateX(-21vw) translateY(2vh) scale(0.73);\n  }\n  76.4705882353% {\n    transform: translateX(-22vw) translateY(10vh) scale(0.46);\n  }\n  82.3529411765% {\n    transform: translateX(10vw) translateY(13vh) scale(0.94);\n  }\n  88.2352941176% {\n    transform: translateX(8vw) translateY(-32vh) scale(0.45);\n  }\n  94.1176470588% {\n    transform: translateX(50vw) translateY(31vh) scale(0.51);\n  }\n  100% {\n    transform: translateX(38vw) translateY(-26vh) scale(0.64);\n  }\n}\n.firefly:nth-child(4) {\n  animation-name: move4;\n}\n.firefly:nth-child(4)::before {\n  animation-duration: 11s;\n}\n.firefly:nth-child(4)::after {\n  animation-duration: 11s, 6072ms;\n  animation-delay: 0ms, 1459ms;\n}\n@keyframes move4 {\n  0% {\n    transform: translateX(-43vw) translateY(10vh) scale(0.52);\n  }\n  5.5555555556% {\n    transform: translateX(7vw) translateY(8vh) scale(0.43);\n  }\n  11.1111111111% {\n    transform: translateX(32vw) translateY(-44vh) scale(0.72);\n  }\n  16.6666666667% {\n    transform: translateX(17vw) translateY(-21vh) scale(0.28);\n  }\n  22.2222222222% {\n    transform: translateX(14vw) translateY(42vh) scale(0.36);\n  }\n  27.7777777778% {\n    transform: translateX(-4vw) translateY(46vh) scale(0.51);\n  }\n  33.3333333333% {\n    transform: translateX(29vw) translateY(-31vh) scale(0.43);\n  }\n  38.8888888889% {\n    transform: translateX(3vw) translateY(-21vh) scale(0.6);\n  }\n  44.4444444444% {\n    transform: translateX(42vw) translateY(-15vh) scale(0.26);\n  }\n  50% {\n    transform: translateX(-14vw) translateY(24vh) scale(0.86);\n  }\n  55.5555555556% {\n    transform: translateX(-3vw) translateY(43vh) scale(0.49);\n  }\n  61.1111111111% {\n    transform: translateX(18vw) translateY(31vh) scale(0.58);\n  }\n  66.6666666667% {\n    transform: translateX(40vw) translateY(-15vh) scale(0.38);\n  }\n  72.2222222222% {\n    transform: translateX(-49vw) translateY(23vh) scale(0.48);\n  }\n  77.7777777778% {\n    transform: translateX(-24vw) translateY(9vh) scale(0.71);\n  }\n  83.3333333333% {\n    transform: translateX(-29vw) translateY(-41vh) scale(0.95);\n  }\n  88.8888888889% {\n    transform: translateX(15vw) translateY(-1vh) scale(0.3);\n  }\n  94.4444444444% {\n    transform: translateX(-16vw) translateY(20vh) scale(0.43);\n  }\n  100% {\n    transform: translateX(41vw) translateY(-16vh) scale(0.99);\n  }\n}\n.firefly:nth-child(5) {\n  animation-name: move5;\n}\n.firefly:nth-child(5)::before {\n  animation-duration: 15s;\n}\n.firefly:nth-child(5)::after {\n  animation-duration: 15s, 8884ms;\n  animation-delay: 0ms, 7732ms;\n}\n@keyframes move5 {\n  0% {\n    transform: translateX(3vw) translateY(47vh) scale(0.73);\n  }\n  4% {\n    transform: translateX(-10vw) translateY(-48vh) scale(0.85);\n  }\n  8% {\n    transform: translateX(-26vw) translateY(-34vh) scale(0.5);\n  }\n  12% {\n    transform: translateX(-37vw) translateY(-24vh) scale(0.7);\n  }\n  16% {\n    transform: translateX(14vw) translateY(1vh) scale(0.99);\n  }\n  20% {\n    transform: translateX(-11vw) translateY(-3vh) scale(0.8);\n  }\n  24% {\n    transform: translateX(-22vw) translateY(-46vh) scale(0.35);\n  }\n  28% {\n    transform: translateX(-49vw) translateY(41vh) scale(0.76);\n  }\n  32% {\n    transform: translateX(14vw) translateY(-19vh) scale(0.56);\n  }\n  36% {\n    transform: translateX(29vw) translateY(42vh) scale(0.4);\n  }\n  40% {\n    transform: translateX(17vw) translateY(19vh) scale(0.79);\n  }\n  44% {\n    transform: translateX(-49vw) translateY(40vh) scale(0.91);\n  }\n  48% {\n    transform: translateX(47vw) translateY(-46vh) scale(0.53);\n  }\n  52% {\n    transform: translateX(-14vw) translateY(18vh) scale(0.29);\n  }\n  56% {\n    transform: translateX(-4vw) translateY(-17vh) scale(0.58);\n  }\n  60% {\n    transform: translateX(-8vw) translateY(-7vh) scale(0.48);\n  }\n  64% {\n    transform: translateX(8vw) translateY(31vh) scale(0.48);\n  }\n  68% {\n    transform: translateX(-29vw) translateY(-46vh) scale(0.97);\n  }\n  72% {\n    transform: translateX(50vw) translateY(35vh) scale(0.29);\n  }\n  76% {\n    transform: translateX(4vw) translateY(43vh) scale(0.58);\n  }\n  80% {\n    transform: translateX(39vw) translateY(-38vh) scale(0.38);\n  }\n  84% {\n    transform: translateX(49vw) translateY(28vh) scale(0.65);\n  }\n  88% {\n    transform: translateX(-9vw) translateY(-35vh) scale(0.93);\n  }\n  92% {\n    transform: translateX(-19vw) translateY(38vh) scale(0.54);\n  }\n  96% {\n    transform: translateX(41vw) translateY(-11vh) scale(0.78);\n  }\n  100% {\n    transform: translateX(20vw) translateY(41vh) scale(0.4);\n  }\n}\n.firefly:nth-child(6) {\n  animation-name: move6;\n}\n.firefly:nth-child(6)::before {\n  animation-duration: 17s;\n}\n.firefly:nth-child(6)::after {\n  animation-duration: 17s, 6433ms;\n  animation-delay: 0ms, 2333ms;\n}\n@keyframes move6 {\n  0% {\n    transform: translateX(30vw) translateY(36vh) scale(0.48);\n  }\n  4.347826087% {\n    transform: translateX(7vw) translateY(15vh) scale(0.53);\n  }\n  8.6956521739% {\n    transform: translateX(37vw) translateY(2vh) scale(0.39);\n  }\n  13.0434782609% {\n    transform: translateX(-21vw) translateY(36vh) scale(0.84);\n  }\n  17.3913043478% {\n    transform: translateX(-41vw) translateY(25vh) scale(0.57);\n  }\n  21.7391304348% {\n    transform: translateX(4vw) translateY(-32vh) scale(0.36);\n  }\n  26.0869565217% {\n    transform: translateX(-14vw) translateY(2vh) scale(0.88);\n  }\n  30.4347826087% {\n    transform: translateX(-24vw) translateY(32vh) scale(0.29);\n  }\n  34.7826086957% {\n    transform: translateX(50vw) translateY(14vh) scale(0.57);\n  }\n  39.1304347826% {\n    transform: translateX(25vw) translateY(22vh) scale(0.5);\n  }\n  43.4782608696% {\n    transform: translateX(19vw) translateY(35vh) scale(0.3);\n  }\n  47.8260869565% {\n    transform: translateX(40vw) translateY(20vh) scale(0.53);\n  }\n  52.1739130435% {\n    transform: translateX(49vw) translateY(-30vh) scale(1);\n  }\n  56.5217391304% {\n    transform: translateX(16vw) translateY(14vh) scale(0.55);\n  }\n  60.8695652174% {\n    transform: translateX(42vw) translateY(-10vh) scale(0.51);\n  }\n  65.2173913043% {\n    transform: translateX(-24vw) translateY(-29vh) scale(0.33);\n  }\n  69.5652173913% {\n    transform: translateX(46vw) translateY(28vh) scale(0.55);\n  }\n  73.9130434783% {\n    transform: translateX(4vw) translateY(-14vh) scale(0.28);\n  }\n  78.2608695652% {\n    transform: translateX(-34vw) translateY(9vh) scale(0.54);\n  }\n  82.6086956522% {\n    transform: translateX(50vw) translateY(-49vh) scale(0.59);\n  }\n  86.9565217391% {\n    transform: translateX(-33vw) translateY(0vh) scale(0.65);\n  }\n  91.3043478261% {\n    transform: translateX(-16vw) translateY(0vh) scale(0.3);\n  }\n  95.652173913% {\n    transform: translateX(-27vw) translateY(-16vh) scale(0.92);\n  }\n  100% {\n    transform: translateX(34vw) translateY(0vh) scale(0.36);\n  }\n}\n.firefly:nth-child(7) {\n  animation-name: move7;\n}\n.firefly:nth-child(7)::before {\n  animation-duration: 15s;\n}\n.firefly:nth-child(7)::after {\n  animation-duration: 15s, 6664ms;\n  animation-delay: 0ms, 5587ms;\n}\n@keyframes move7 {\n  0% {\n    transform: translateX(1vw) translateY(17vh) scale(0.95);\n  }\n  4.347826087% {\n    transform: translateX(39vw) translateY(33vh) scale(0.92);\n  }\n  8.6956521739% {\n    transform: translateX(-15vw) translateY(-13vh) scale(0.5);\n  }\n  13.0434782609% {\n    transform: translateX(1vw) translateY(-43vh) scale(0.91);\n  }\n  17.3913043478% {\n    transform: translateX(-49vw) translateY(24vh) scale(0.33);\n  }\n  21.7391304348% {\n    transform: translateX(43vw) translateY(42vh) scale(0.98);\n  }\n  26.0869565217% {\n    transform: translateX(-25vw) translateY(44vh) scale(0.74);\n  }\n  30.4347826087% {\n    transform: translateX(-1vw) translateY(-38vh) scale(0.69);\n  }\n  34.7826086957% {\n    transform: translateX(-36vw) translateY(29vh) scale(0.56);\n  }\n  39.1304347826% {\n    transform: translateX(-31vw) translateY(-45vh) scale(0.27);\n  }\n  43.4782608696% {\n    transform: translateX(14vw) translateY(41vh) scale(0.72);\n  }\n  47.8260869565% {\n    transform: translateX(50vw) translateY(-44vh) scale(0.93);\n  }\n  52.1739130435% {\n    transform: translateX(21vw) translateY(-49vh) scale(0.26);\n  }\n  56.5217391304% {\n    transform: translateX(1vw) translateY(-48vh) scale(0.53);\n  }\n  60.8695652174% {\n    transform: translateX(-38vw) translateY(-42vh) scale(0.37);\n  }\n  65.2173913043% {\n    transform: translateX(-4vw) translateY(-44vh) scale(0.43);\n  }\n  69.5652173913% {\n    transform: translateX(-29vw) translateY(30vh) scale(0.9);\n  }\n  73.9130434783% {\n    transform: translateX(-5vw) translateY(0vh) scale(0.79);\n  }\n  78.2608695652% {\n    transform: translateX(10vw) translateY(18vh) scale(0.55);\n  }\n  82.6086956522% {\n    transform: translateX(-5vw) translateY(16vh) scale(0.67);\n  }\n  86.9565217391% {\n    transform: translateX(-15vw) translateY(-49vh) scale(0.96);\n  }\n  91.3043478261% {\n    transform: translateX(5vw) translateY(44vh) scale(0.81);\n  }\n  95.652173913% {\n    transform: translateX(22vw) translateY(1vh) scale(0.33);\n  }\n  100% {\n    transform: translateX(13vw) translateY(-30vh) scale(0.85);\n  }\n}\n.firefly:nth-child(8) {\n  animation-name: move8;\n}\n.firefly:nth-child(8)::before {\n  animation-duration: 14s;\n}\n.firefly:nth-child(8)::after {\n  animation-duration: 14s, 6742ms;\n  animation-delay: 0ms, 5479ms;\n}\n@keyframes move8 {\n  0% {\n    transform: translateX(-23vw) translateY(45vh) scale(0.8);\n  }\n  4% {\n    transform: translateX(-8vw) translateY(5vh) scale(0.43);\n  }\n  8% {\n    transform: translateX(5vw) translateY(12vh) scale(0.95);\n  }\n  12% {\n    transform: translateX(-33vw) translateY(-29vh) scale(0.8);\n  }\n  16% {\n    transform: translateX(42vw) translateY(8vh) scale(0.28);\n  }\n  20% {\n    transform: translateX(-3vw) translateY(21vh) scale(0.58);\n  }\n  24% {\n    transform: translateX(-44vw) translateY(-24vh) scale(0.88);\n  }\n  28% {\n    transform: translateX(49vw) translateY(-2vh) scale(0.59);\n  }\n  32% {\n    transform: translateX(5vw) translateY(29vh) scale(0.28);\n  }\n  36% {\n    transform: translateX(12vw) translateY(-25vh) scale(0.36);\n  }\n  40% {\n    transform: translateX(47vw) translateY(-13vh) scale(0.41);\n  }\n  44% {\n    transform: translateX(46vw) translateY(-23vh) scale(0.39);\n  }\n  48% {\n    transform: translateX(36vw) translateY(-22vh) scale(0.5);\n  }\n  52% {\n    transform: translateX(-28vw) translateY(-36vh) scale(0.44);\n  }\n  56% {\n    transform: translateX(41vw) translateY(-28vh) scale(0.41);\n  }\n  60% {\n    transform: translateX(-39vw) translateY(35vh) scale(0.59);\n  }\n  64% {\n    transform: translateX(20vw) translateY(-33vh) scale(0.9);\n  }\n  68% {\n    transform: translateX(-40vw) translateY(-15vh) scale(0.83);\n  }\n  72% {\n    transform: translateX(8vw) translateY(29vh) scale(0.37);\n  }\n  76% {\n    transform: translateX(-10vw) translateY(6vh) scale(0.34);\n  }\n  80% {\n    transform: translateX(36vw) translateY(43vh) scale(0.72);\n  }\n  84% {\n    transform: translateX(11vw) translateY(-28vh) scale(0.36);\n  }\n  88% {\n    transform: translateX(8vw) translateY(41vh) scale(0.46);\n  }\n  92% {\n    transform: translateX(50vw) translateY(-30vh) scale(0.97);\n  }\n  96% {\n    transform: translateX(-31vw) translateY(0vh) scale(0.28);\n  }\n  100% {\n    transform: translateX(-31vw) translateY(30vh) scale(0.7);\n  }\n}\n.firefly:nth-child(9) {\n  animation-name: move9;\n}\n.firefly:nth-child(9)::before {\n  animation-duration: 10s;\n}\n.firefly:nth-child(9)::after {\n  animation-duration: 10s, 6240ms;\n  animation-delay: 0ms, 7157ms;\n}\n@keyframes move9 {\n  0% {\n    transform: translateX(-20vw) translateY(-13vh) scale(0.27);\n  }\n  3.8461538462% {\n    transform: translateX(-6vw) translateY(-45vh) scale(0.92);\n  }\n  7.6923076923% {\n    transform: translateX(23vw) translateY(-21vh) scale(0.77);\n  }\n  11.5384615385% {\n    transform: translateX(-38vw) translateY(14vh) scale(0.93);\n  }\n  15.3846153846% {\n    transform: translateX(2vw) translateY(29vh) scale(0.83);\n  }\n  19.2307692308% {\n    transform: translateX(-15vw) translateY(17vh) scale(0.84);\n  }\n  23.0769230769% {\n    transform: translateX(45vw) translateY(28vh) scale(0.35);\n  }\n  26.9230769231% {\n    transform: translateX(-43vw) translateY(10vh) scale(0.31);\n  }\n  30.7692307692% {\n    transform: translateX(12vw) translateY(6vh) scale(0.94);\n  }\n  34.6153846154% {\n    transform: translateX(39vw) translateY(-23vh) scale(0.64);\n  }\n  38.4615384615% {\n    transform: translateX(-10vw) translateY(-12vh) scale(0.6);\n  }\n  42.3076923077% {\n    transform: translateX(-30vw) translateY(-7vh) scale(0.37);\n  }\n  46.1538461538% {\n    transform: translateX(-47vw) translateY(1vh) scale(0.88);\n  }\n  50% {\n    transform: translateX(14vw) translateY(-30vh) scale(0.44);\n  }\n  53.8461538462% {\n    transform: translateX(-33vw) translateY(15vh) scale(0.41);\n  }\n  57.6923076923% {\n    transform: translateX(-12vw) translateY(-37vh) scale(0.84);\n  }\n  61.5384615385% {\n    transform: translateX(-4vw) translateY(-44vh) scale(0.43);\n  }\n  65.3846153846% {\n    transform: translateX(-33vw) translateY(-10vh) scale(0.47);\n  }\n  69.2307692308% {\n    transform: translateX(-29vw) translateY(-8vh) scale(0.38);\n  }\n  73.0769230769% {\n    transform: translateX(-37vw) translateY(17vh) scale(0.74);\n  }\n  76.9230769231% {\n    transform: translateX(-26vw) translateY(-13vh) scale(0.42);\n  }\n  80.7692307692% {\n    transform: translateX(8vw) translateY(22vh) scale(0.76);\n  }\n  84.6153846154% {\n    transform: translateX(45vw) translateY(-35vh) scale(0.84);\n  }\n  88.4615384615% {\n    transform: translateX(-6vw) translateY(34vh) scale(0.56);\n  }\n  92.3076923077% {\n    transform: translateX(-23vw) translateY(-12vh) scale(0.87);\n  }\n  96.1538461538% {\n    transform: translateX(35vw) translateY(-49vh) scale(0.97);\n  }\n  100% {\n    transform: translateX(3vw) translateY(11vh) scale(0.7);\n  }\n}\n.firefly:nth-child(10) {\n  animation-name: move10;\n}\n.firefly:nth-child(10)::before {\n  animation-duration: 11s;\n}\n.firefly:nth-child(10)::after {\n  animation-duration: 11s, 10150ms;\n  animation-delay: 0ms, 6814ms;\n}\n@keyframes move10 {\n  0% {\n    transform: translateX(24vw) translateY(-47vh) scale(0.99);\n  }\n  4.7619047619% {\n    transform: translateX(-44vw) translateY(-24vh) scale(0.38);\n  }\n  9.5238095238% {\n    transform: translateX(48vw) translateY(17vh) scale(0.47);\n  }\n  14.2857142857% {\n    transform: translateX(-33vw) translateY(-12vh) scale(0.89);\n  }\n  19.0476190476% {\n    transform: translateX(-45vw) translateY(4vh) scale(0.26);\n  }\n  23.8095238095% {\n    transform: translateX(17vw) translateY(-29vh) scale(1);\n  }\n  28.5714285714% {\n    transform: translateX(38vw) translateY(17vh) scale(0.81);\n  }\n  33.3333333333% {\n    transform: translateX(17vw) translateY(48vh) scale(0.35);\n  }\n  38.0952380952% {\n    transform: translateX(27vw) translateY(24vh) scale(0.59);\n  }\n  42.8571428571% {\n    transform: translateX(-20vw) translateY(22vh) scale(0.91);\n  }\n  47.619047619% {\n    transform: translateX(-18vw) translateY(45vh) scale(0.59);\n  }\n  52.380952381% {\n    transform: translateX(30vw) translateY(-34vh) scale(0.62);\n  }\n  57.1428571429% {\n    transform: translateX(31vw) translateY(32vh) scale(0.95);\n  }\n  61.9047619048% {\n    transform: translateX(-12vw) translateY(-41vh) scale(0.37);\n  }\n  66.6666666667% {\n    transform: translateX(-2vw) translateY(-9vh) scale(0.74);\n  }\n  71.4285714286% {\n    transform: translateX(-48vw) translateY(-37vh) scale(0.79);\n  }\n  76.1904761905% {\n    transform: translateX(36vw) translateY(-43vh) scale(0.71);\n  }\n  80.9523809524% {\n    transform: translateX(11vw) translateY(-45vh) scale(0.42);\n  }\n  85.7142857143% {\n    transform: translateX(38vw) translateY(-19vh) scale(0.63);\n  }\n  90.4761904762% {\n    transform: translateX(-46vw) translateY(16vh) scale(0.37);\n  }\n  95.2380952381% {\n    transform: translateX(8vw) translateY(-41vh) scale(0.76);\n  }\n  100% {\n    transform: translateX(27vw) translateY(41vh) scale(0.97);\n  }\n}\n.firefly:nth-child(11) {\n  animation-name: move11;\n}\n.firefly:nth-child(11)::before {\n  animation-duration: 12s;\n}\n.firefly:nth-child(11)::after {\n  animation-duration: 12s, 6502ms;\n  animation-delay: 0ms, 4790ms;\n}\n@keyframes move11 {\n  0% {\n    transform: translateX(-31vw) translateY(26vh) scale(0.59);\n  }\n  4.5454545455% {\n    transform: translateX(-1vw) translateY(36vh) scale(0.65);\n  }\n  9.0909090909% {\n    transform: translateX(2vw) translateY(-19vh) scale(0.51);\n  }\n  13.6363636364% {\n    transform: translateX(45vw) translateY(-41vh) scale(1);\n  }\n  18.1818181818% {\n    transform: translateX(16vw) translateY(-22vh) scale(0.75);\n  }\n  22.7272727273% {\n    transform: translateX(17vw) translateY(20vh) scale(0.81);\n  }\n  27.2727272727% {\n    transform: translateX(34vw) translateY(19vh) scale(0.75);\n  }\n  31.8181818182% {\n    transform: translateX(8vw) translateY(5vh) scale(0.65);\n  }\n  36.3636363636% {\n    transform: translateX(8vw) translateY(43vh) scale(0.45);\n  }\n  40.9090909091% {\n    transform: translateX(-10vw) translateY(-24vh) scale(0.89);\n  }\n  45.4545454545% {\n    transform: translateX(48vw) translateY(-30vh) scale(0.48);\n  }\n  50% {\n    transform: translateX(23vw) translateY(42vh) scale(0.9);\n  }\n  54.5454545455% {\n    transform: translateX(24vw) translateY(3vh) scale(0.44);\n  }\n  59.0909090909% {\n    transform: translateX(9vw) translateY(-49vh) scale(0.45);\n  }\n  63.6363636364% {\n    transform: translateX(16vw) translateY(47vh) scale(0.77);\n  }\n  68.1818181818% {\n    transform: translateX(49vw) translateY(-20vh) scale(0.72);\n  }\n  72.7272727273% {\n    transform: translateX(-7vw) translateY(41vh) scale(0.68);\n  }\n  77.2727272727% {\n    transform: translateX(42vw) translateY(8vh) scale(0.48);\n  }\n  81.8181818182% {\n    transform: translateX(-38vw) translateY(-7vh) scale(0.97);\n  }\n  86.3636363636% {\n    transform: translateX(-10vw) translateY(47vh) scale(0.28);\n  }\n  90.9090909091% {\n    transform: translateX(-17vw) translateY(10vh) scale(0.78);\n  }\n  95.4545454545% {\n    transform: translateX(21vw) translateY(35vh) scale(1);\n  }\n  100% {\n    transform: translateX(46vw) translateY(50vh) scale(0.51);\n  }\n}\n.firefly:nth-child(12) {\n  animation-name: move12;\n}\n.firefly:nth-child(12)::before {\n  animation-duration: 16s;\n}\n.firefly:nth-child(12)::after {\n  animation-duration: 16s, 5660ms;\n  animation-delay: 0ms, 6115ms;\n}\n@keyframes move12 {\n  0% {\n    transform: translateX(37vw) translateY(-43vh) scale(0.28);\n  }\n  3.5714285714% {\n    transform: translateX(14vw) translateY(36vh) scale(0.79);\n  }\n  7.1428571429% {\n    transform: translateX(-12vw) translateY(-21vh) scale(0.78);\n  }\n  10.7142857143% {\n    transform: translateX(15vw) translateY(20vh) scale(0.83);\n  }\n  14.2857142857% {\n    transform: translateX(25vw) translateY(-35vh) scale(0.83);\n  }\n  17.8571428571% {\n    transform: translateX(-20vw) translateY(-21vh) scale(0.46);\n  }\n  21.4285714286% {\n    transform: translateX(-40vw) translateY(-31vh) scale(0.73);\n  }\n  25% {\n    transform: translateX(-4vw) translateY(-23vh) scale(0.98);\n  }\n  28.5714285714% {\n    transform: translateX(4vw) translateY(-31vh) scale(0.9);\n  }\n  32.1428571429% {\n    transform: translateX(24vw) translateY(18vh) scale(0.35);\n  }\n  35.7142857143% {\n    transform: translateX(-23vw) translateY(35vh) scale(0.76);\n  }\n  39.2857142857% {\n    transform: translateX(-9vw) translateY(-21vh) scale(0.73);\n  }\n  42.8571428571% {\n    transform: translateX(22vw) translateY(-23vh) scale(0.8);\n  }\n  46.4285714286% {\n    transform: translateX(-4vw) translateY(30vh) scale(0.39);\n  }\n  50% {\n    transform: translateX(20vw) translateY(-10vh) scale(0.95);\n  }\n  53.5714285714% {\n    transform: translateX(7vw) translateY(-21vh) scale(0.41);\n  }\n  57.1428571429% {\n    transform: translateX(-16vw) translateY(46vh) scale(0.95);\n  }\n  60.7142857143% {\n    transform: translateX(-21vw) translateY(39vh) scale(0.75);\n  }\n  64.2857142857% {\n    transform: translateX(-31vw) translateY(23vh) scale(0.84);\n  }\n  67.8571428571% {\n    transform: translateX(43vw) translateY(36vh) scale(0.98);\n  }\n  71.4285714286% {\n    transform: translateX(-4vw) translateY(0vh) scale(0.41);\n  }\n  75% {\n    transform: translateX(5vw) translateY(-33vh) scale(0.41);\n  }\n  78.5714285714% {\n    transform: translateX(0vw) translateY(21vh) scale(0.38);\n  }\n  82.1428571429% {\n    transform: translateX(43vw) translateY(-25vh) scale(0.47);\n  }\n  85.7142857143% {\n    transform: translateX(-32vw) translateY(21vh) scale(0.4);\n  }\n  89.2857142857% {\n    transform: translateX(-14vw) translateY(12vh) scale(0.38);\n  }\n  92.8571428571% {\n    transform: translateX(-42vw) translateY(4vh) scale(0.36);\n  }\n  96.4285714286% {\n    transform: translateX(17vw) translateY(-17vh) scale(0.34);\n  }\n  100% {\n    transform: translateX(19vw) translateY(-7vh) scale(0.73);\n  }\n}\n.firefly:nth-child(13) {\n  animation-name: move13;\n}\n.firefly:nth-child(13)::before {\n  animation-duration: 9s;\n}\n.firefly:nth-child(13)::after {\n  animation-duration: 9s, 8216ms;\n  animation-delay: 0ms, 2291ms;\n}\n@keyframes move13 {\n  0% {\n    transform: translateX(-46vw) translateY(34vh) scale(0.52);\n  }\n  5.8823529412% {\n    transform: translateX(-48vw) translateY(9vh) scale(0.57);\n  }\n  11.7647058824% {\n    transform: translateX(-8vw) translateY(18vh) scale(0.6);\n  }\n  17.6470588235% {\n    transform: translateX(-27vw) translateY(15vh) scale(0.76);\n  }\n  23.5294117647% {\n    transform: translateX(-29vw) translateY(39vh) scale(0.58);\n  }\n  29.4117647059% {\n    transform: translateX(44vw) translateY(18vh) scale(0.43);\n  }\n  35.2941176471% {\n    transform: translateX(36vw) translateY(-17vh) scale(0.32);\n  }\n  41.1764705882% {\n    transform: translateX(15vw) translateY(-25vh) scale(0.69);\n  }\n  47.0588235294% {\n    transform: translateX(-37vw) translateY(-30vh) scale(0.43);\n  }\n  52.9411764706% {\n    transform: translateX(14vw) translateY(45vh) scale(0.7);\n  }\n  58.8235294118% {\n    transform: translateX(-23vw) translateY(9vh) scale(0.95);\n  }\n  64.7058823529% {\n    transform: translateX(32vw) translateY(-26vh) scale(0.6);\n  }\n  70.5882352941% {\n    transform: translateX(-24vw) translateY(0vh) scale(0.51);\n  }\n  76.4705882353% {\n    transform: translateX(-12vw) translateY(-9vh) scale(0.56);\n  }\n  82.3529411765% {\n    transform: translateX(39vw) translateY(0vh) scale(0.88);\n  }\n  88.2352941176% {\n    transform: translateX(20vw) translateY(29vh) scale(0.36);\n  }\n  94.1176470588% {\n    transform: translateX(-30vw) translateY(-35vh) scale(0.35);\n  }\n  100% {\n    transform: translateX(22vw) translateY(32vh) scale(0.3);\n  }\n}\n.firefly:nth-child(14) {\n  animation-name: move14;\n}\n.firefly:nth-child(14)::before {\n  animation-duration: 17s;\n}\n.firefly:nth-child(14)::after {\n  animation-duration: 17s, 6508ms;\n  animation-delay: 0ms, 1492ms;\n}\n@keyframes move14 {\n  0% {\n    transform: translateX(9vw) translateY(-14vh) scale(0.41);\n  }\n  5.8823529412% {\n    transform: translateX(-38vw) translateY(40vh) scale(0.87);\n  }\n  11.7647058824% {\n    transform: translateX(-3vw) translateY(34vh) scale(0.56);\n  }\n  17.6470588235% {\n    transform: translateX(-49vw) translateY(-1vh) scale(0.52);\n  }\n  23.5294117647% {\n    transform: translateX(-9vw) translateY(38vh) scale(0.76);\n  }\n  29.4117647059% {\n    transform: translateX(-43vw) translateY(8vh) scale(0.52);\n  }\n  35.2941176471% {\n    transform: translateX(43vw) translateY(-19vh) scale(0.3);\n  }\n  41.1764705882% {\n    transform: translateX(15vw) translateY(15vh) scale(0.84);\n  }\n  47.0588235294% {\n    transform: translateX(-20vw) translateY(30vh) scale(0.56);\n  }\n  52.9411764706% {\n    transform: translateX(-36vw) translateY(-24vh) scale(0.91);\n  }\n  58.8235294118% {\n    transform: translateX(45vw) translateY(50vh) scale(0.62);\n  }\n  64.7058823529% {\n    transform: translateX(-44vw) translateY(41vh) scale(0.94);\n  }\n  70.5882352941% {\n    transform: translateX(25vw) translateY(12vh) scale(0.82);\n  }\n  76.4705882353% {\n    transform: translateX(-49vw) translateY(-9vh) scale(0.43);\n  }\n  82.3529411765% {\n    transform: translateX(29vw) translateY(22vh) scale(0.85);\n  }\n  88.2352941176% {\n    transform: translateX(-22vw) translateY(-39vh) scale(0.26);\n  }\n  94.1176470588% {\n    transform: translateX(-34vw) translateY(-42vh) scale(0.38);\n  }\n  100% {\n    transform: translateX(-30vw) translateY(-49vh) scale(0.73);\n  }\n}\n.firefly:nth-child(15) {\n  animation-name: move15;\n}\n.firefly:nth-child(15)::before {\n  animation-duration: 14s;\n}\n.firefly:nth-child(15)::after {\n  animation-duration: 14s, 5811ms;\n  animation-delay: 0ms, 5321ms;\n}\n@keyframes move15 {\n  0% {\n    transform: translateX(-35vw) translateY(6vh) scale(0.35);\n  }\n  4% {\n    transform: translateX(49vw) translateY(-36vh) scale(0.45);\n  }\n  8% {\n    transform: translateX(24vw) translateY(-7vh) scale(0.84);\n  }\n  12% {\n    transform: translateX(31vw) translateY(7vh) scale(0.82);\n  }\n  16% {\n    transform: translateX(-36vw) translateY(-9vh) scale(0.56);\n  }\n  20% {\n    transform: translateX(49vw) translateY(1vh) scale(0.51);\n  }\n  24% {\n    transform: translateX(-31vw) translateY(-43vh) scale(0.62);\n  }\n  28% {\n    transform: translateX(-33vw) translateY(43vh) scale(0.32);\n  }\n  32% {\n    transform: translateX(7vw) translateY(-23vh) scale(0.45);\n  }\n  36% {\n    transform: translateX(11vw) translateY(-22vh) scale(0.92);\n  }\n  40% {\n    transform: translateX(-4vw) translateY(12vh) scale(0.38);\n  }\n  44% {\n    transform: translateX(39vw) translateY(14vh) scale(0.96);\n  }\n  48% {\n    transform: translateX(-24vw) translateY(-14vh) scale(0.51);\n  }\n  52% {\n    transform: translateX(-25vw) translateY(-41vh) scale(0.54);\n  }\n  56% {\n    transform: translateX(14vw) translateY(-28vh) scale(0.5);\n  }\n  60% {\n    transform: translateX(8vw) translateY(23vh) scale(0.65);\n  }\n  64% {\n    transform: translateX(19vw) translateY(37vh) scale(0.83);\n  }\n  68% {\n    transform: translateX(7vw) translateY(-3vh) scale(0.34);\n  }\n  72% {\n    transform: translateX(-9vw) translateY(28vh) scale(0.8);\n  }\n  76% {\n    transform: translateX(19vw) translateY(12vh) scale(0.97);\n  }\n  80% {\n    transform: translateX(-26vw) translateY(0vh) scale(0.69);\n  }\n  84% {\n    transform: translateX(-48vw) translateY(33vh) scale(0.92);\n  }\n  88% {\n    transform: translateX(-47vw) translateY(-46vh) scale(0.97);\n  }\n  92% {\n    transform: translateX(-31vw) translateY(48vh) scale(0.58);\n  }\n  96% {\n    transform: translateX(-48vw) translateY(40vh) scale(0.97);\n  }\n  100% {\n    transform: translateX(14vw) translateY(-8vh) scale(0.99);\n  }\n}\n@keyframes drift {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes flash {\n  0%,\n  30%,\n  100% {\n    opacity: 0;\n    box-shadow: 0 0 0vw 0vw yellow;\n  }\n  5% {\n    opacity: 1;\n    box-shadow: 0 0 2vw 0.4vw yellow;\n  }\n}\nh1 {\n  background-color: #3d3d;\n}\nbody {\n  overflow-x: hidden;\n  overflow-y: hidden;\n  font-family: 'Roboto Slab', serif;\n  color: white;\n  width: 100vw;\n  height: 100vh;\n}\nh1,\nul {\n  margin: 0;\n}\nul {\n  list-style: none;\n}\na,\nbutton {\n  color: inherit;\n  transition: color 0.4s ease-out;\n  text-decoration: none;\n}\nheader {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  width: 100%;\n  height: 100px;\n}\nheader ul {\n  display: flex;\n  justify-content: end;\n  padding: 10px 30px;\n}\nheader ul li {\n  margin: 0 20px;\n  display: list-item;\n}\n.side-nav {\n  margin: 30px 10px;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  list-style: none;\n}\n.side-nav li {\n  display: flex;\n  justify-content: center;\n  opacity: 0.8;\n  background-color: #292318;\n  border: 2px solid #55331B;\n  font-size: 1rem;\n  margin: 20px 0;\n  padding: 15px;\n}\nmain {\n  width: 100%;\n  height: 100vh;\n  max-width: 1300px;\n}\nmain .background1,\nmain .background2,\nmain .background3,\nmain .background4 {\n  position: absolute;\n  width: 100vw;\n  height: auto;\n  min-height: 100vh;\n  z-index: -1;\n  filter: brightness(50%);\n  animation-name: cf3FadeInOut;\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 12s;\n  animation-direction: alternate;\n}\nmain .background1 {\n  animation-delay: 12s;\n}\nmain .background2 {\n  animation-delay: 8s;\n}\nmain .background3 {\n  animation-delay: 4s;\n}\nmain .background4 {\n  animation-delay: 0;\n}\n@keyframes cf3FadeInOut {\n  0% {\n    opacity: 1;\n  }\n  45% {\n    opacity: 1;\n  }\n  55% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n.main-section .logo {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 300px;\n  height: 300px;\n  margin-top: -150px;\n  /* Half the height */\n  margin-left: -150px;\n  z-index: 3;\n}\n.close {\n  position: absolute;\n  display: flex;\n  right: 10px;\n  justify-content: center;\n  align-items: center;\n  font-size: 2rem;\n  border: 2px solid black;\n  width: 30px;\n  height: 30px;\n  top: 10px;\n}\n.close:hover,\n.close:focus {\n  cursor: pointer;\n}\n.menu-container {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 1000px;\n  height: 600px;\n  margin: auto;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: -3000px;\n  border-radius: 20px;\n  color: black;\n  background-color: white;\n  font-family: 'Roboto Condensed', sans-serif;\n  transition: right 1s;\n  z-index: 4;\n}\n.menu-container h2 {\n  margin-top: 50px;\n  font-size: 1rem;\n  font-family: 'Noto Sans', sans-serif;\n}\n.menu-container h3,\n.menu-container p {\n  font-size: 0.75rem;\n}\n.menu-container p {\n  margin-bottom: 30px;\n}\n.menu-container .menu-footer {\n  margin-bottom: 40px;\n  margin-left: 50px;\n}\n.menu-container .menu {\n  position: relative;\n  display: flex;\n  justify-content: space-around;\n}\n.menu-container .menu img {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 200px;\n  height: 200px;\n  margin-top: -100px;\n  /* Half the height */\n  margin-left: -100px;\n  opacity: 0.1;\n}\n.menu-container .menu .menu1,\n.menu-container .menu .menu2 {\n  text-align: center;\n}\n.reservation {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 800px;\n  height: 550px;\n  margin: auto;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: -3000px;\n  color: black;\n  background-color: white;\n  font-family: 'Roboto Condensed', sans-serif;\n  transition: right 1s;\n  z-index: 4;\n  opacity: 0.9;\n}\n.reservation nav {\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  height: 80px;\n  margin: 20px;\n}\n.reservation nav > div {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 20%;\n  border: 2px solid black;\n}\n.reservation nav > div:hover {\n  cursor: pointer;\n  background-color: #55331B;\n  color: white;\n}\n.reservation .hidden {\n  display: none;\n}\n.reservation .reservation-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 400px;\n  padding: 5px 50px;\n  border-top: 2px solid black;\n  border-bottom: 2px solid black;\n}\n.reservation .reservation-container .reservation-sub-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 70%;\n  height: 90%;\n  padding: 10px;\n  background-color: white;\n}\n.reservation .reservation-container .reservation-sub-container ul {\n  display: flex;\n  margin-bottom: 20px;\n}\n.reservation .reservation-container .reservation-sub-container ul li {\n  border: 2px solid black;\n  padding: 10px;\n  margin: 10px;\n}\n.reservation .reservation-container .reservation-sub-container ul li:hover {\n  cursor: pointer;\n  background-color: #55331B;\n  color: white;\n}\n.reservation .confirm-container {\n  display: flex;\n  margin: 20px;\n}\n.reservation .confirm-container .reservation-botton {\n  background-color: gray;\n}\n.react-calendar {\n  width: 300px;\n}\n.react-calendar--doubleView {\n  width: 700px;\n}\n","",{version:3,sources:["https:/fonts.googleapis.com/css2?family=Roboto+Slab:wght@300&display=swap","webpack://./src/style/main.less","webpack://./src/style/setup.less","webpack://./src/style/animation.less","webpack://./src/style/header.less"],names:[],mappings:"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",sourcesContent:["@font-face {\n  font-family: 'Roboto Slab';\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/robotoslab/v13/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjo0oSWaA.ttf) format('truetype');\n}\n","@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@300&display=swap');\n@import 'setup.less';\n@import 'variables.less';\n@import 'animation.less';\n@import 'header.less';\n@import 'react-calendar/dist/Calendar.css';\n\nbody {\n    overflow-x: hidden;\n    overflow-y: hidden;\n    font-family: 'Roboto Slab', serif;\n    color: @white;\n    width: 100vw;\n    height: 100vh;\n}\n\nh1, ul {\n    margin: 0;\n}\n\nul {\n  list-style: none;\n}\n\na, button {\n    color: inherit;\n    transition: color 0.4s ease-out;\n    text-decoration: none;\n}\n\nheader {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n    width: 100%;\n    height: 100px;\n\n    ul {\n        display: flex;\n        justify-content: end;\n        padding: 10px 30px;\n        \n        li {\n            margin: 0 20px;\n            display: list-item;\n        }\n    }\n}\n\n.side-nav {\n    margin: 30px 10px;\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    left: 0;\n    list-style: none;\n\n    li {\n        display: flex;\n        justify-content: center;\n        opacity: 0.8;\n        background-color: @dark-brown;\n        border: 2px solid @brown;\n        font-size: @small;\n        margin: 20px 0;\n        padding: 15px;\n    }\n}\n\n//backgound image\nmain {\n    width: 100%;\n    height: 100vh;\n    max-width: 1300px;\n    //background:linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.5)), center / cover no-repeat url(./background1.jpg);\n\n    .background1, .background2, .background3, .background4 {\n        position: absolute;\n        width: 100vw;\n        height: auto;\n        min-height: 100vh;\n        z-index: -1;\n        filter: brightness(50%); \n        animation-name: cf3FadeInOut;\n        animation-timing-function: ease-in-out;\n        animation-iteration-count: infinite;\n        animation-duration: 12s;\n        animation-direction: alternate;\n        \n    }\n\n    .background1 {\n        animation-delay: 12s;\n    }\n    .background2 {\n        animation-delay: 8s;\n    }\n    .background3 {\n        animation-delay: 4s;\n    }\n    .background4 {\n        animation-delay: 0;\n    }\n\n    @keyframes cf3FadeInOut {\n        0% {\n            opacity:1;\n        }\n        45% {\n            opacity:1;\n        }\n        55% {\n            opacity:0;\n        }\n        100% {\n            opacity:0;\n        }\n    }\n}\n\n//main page\n.main-section {\n    .logo {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 300px;\n        height: 300px;\n        margin-top: -150px; /* Half the height */\n        margin-left: -150px;\n        z-index: 3;\n    }\n}\n\n//close button\n.close {\n        position: absolute;\n        display: flex;\n        right: 10px;\n        justify-content: center;\n        align-items: center;\n        font-size: @medium;\n        border: 2px solid black;\n        width: 30px;\n        height: 30px;\n        top: 10px;\n\n        &:hover, &:focus {\n          cursor: pointer;\n        }\n    }\n\n//menu component\n.menu-container {\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 1000px;\n    height: 600px;\n    margin: auto;\n    top: 0; left: 0; bottom: 0; right: -3000px;\n    border-radius: 20px;\n    color: black;\n    background-color: white;\n    font-family: 'Roboto Condensed', sans-serif;\n    transition: right 1s;\n    z-index: 4;\n    \n\n    h2 {\n        margin-top: 50px;\n        font-size: @small;\n        font-family: 'Noto Sans', sans-serif;\n    }\n\n    h3, p {\n        font-size: @x-small;\n    }\n\n    p {\n        margin-bottom: 30px;\n    }\n\n    .menu-footer {\n        margin-bottom: 40px;\n        margin-left: 50px;\n    }\n\n    .menu {\n        position: relative;\n        display: flex;\n        justify-content: space-around;\n\n        img {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            width: 200px;\n            height: 200px;\n            margin-top: -100px; /* Half the height */\n            margin-left: -100px;\n            opacity: 0.1;\n        }\n\n        .menu1, .menu2 {\n            text-align: center;\n        }\n    }\n}\n\n.reservation {\n    color: black;\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 800px;\n    height: 550px;\n    margin: auto;\n    top: 0; left: 0; bottom: 0; right: -3000px;\n    color: black;\n    background-color: white;\n    font-family: 'Roboto Condensed', sans-serif;\n    transition: right 1s;\n    z-index: 4;\n    opacity: 0.9;\n\n    nav {\n        display: flex;\n        justify-content: space-between;\n        width: 80%;\n        height: 80px;\n        margin: 20px;\n        \n        >div {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          width: 20%;\n          border: 2px solid black;\n\n          &:hover {\n              cursor: pointer;\n              background-color: @brown;\n              color: white;\n            }\n        }\n    }\n\n    .hidden {\n      display: none;\n    }\n\n    .reservation-container {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 400px;\n      padding: 5px 50px;\n      border-top: 2px solid black;\n      border-bottom: 2px solid black;\n\n      .reservation-sub-container {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        width: 70%;\n        height: 90%;\n        padding: 10px;\n        background-color:white;\n\n        ul {\n          display: flex;\n          margin-bottom: 20px;\n\n          li {\n            border: 2px solid black;\n            padding: 10px;\n            margin: 10px;\n\n            &:hover {\n              cursor: pointer;\n              background-color: @brown;\n              color: white;\n            }\n          }\n        }\n      }\n    }\n\n    .confirm-container {\n      display: flex;\n      margin: 20px;\n      \n      .reservation-botton {\n        background-color: gray;\n      }\n    }\n}\n\n//calendar styling\n.react-calendar {\n  width: 300px;\n}\n\n.react-calendar--doubleView {\n  width: 700px;\n}\n","html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}\n\n.clearfix:after {visibility: hidden; display: block; font-size: 0; content: ''; clear: both; height: 0; }\n\n* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }\n\n.visuallyHidden:not(:focus):not(:active) { position: absolute; width: 1px; height: 1px; margin: -1px;border: 0;padding: 0;white-space: nowrap;clip-path: inset(100%);clip: rect(00 0 0);overflow: hidden;}\n\n.sr-only { position: absolute; width: 1px; height: 1px; margin: -1px; border: 0; padding: 0; white-space: nowrap; clip-path: inset(100%); clip: rect(0 0 0 0); overflow: hidden;}",'.firefly {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  width: 0.4vw;\n  height: 0.4vw;\n  margin: -0.2vw 0 0 9.8vw;\n  animation: ease 200s alternate infinite;\n  pointer-events: none;\n}\n.firefly::before, .firefly::after {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  transform-origin: -10vw;\n}\n.firefly::before {\n  background: black;\n  opacity: 0.4;\n  animation: drift ease alternate infinite;\n}\n.firefly::after {\n  background: white;\n  opacity: 0;\n  box-shadow: 0 0 0vw 0vw yellow;\n  animation: drift ease alternate infinite, flash ease infinite;\n}\n\n.firefly:nth-child(1) {\n  animation-name: move1;\n}\n.firefly:nth-child(1)::before {\n  animation-duration: 18s;\n}\n.firefly:nth-child(1)::after {\n  animation-duration: 18s, 8741ms;\n  animation-delay: 0ms, 2068ms;\n}\n\n@keyframes move1 {\n  0% {\n    transform: translateX(-14vw) translateY(18vh) scale(0.91);\n  }\n  5.2631578947% {\n    transform: translateX(-3vw) translateY(-20vh) scale(0.43);\n  }\n  10.5263157895% {\n    transform: translateX(17vw) translateY(24vh) scale(0.54);\n  }\n  15.7894736842% {\n    transform: translateX(45vw) translateY(36vh) scale(0.64);\n  }\n  21.0526315789% {\n    transform: translateX(-27vw) translateY(-46vh) scale(0.57);\n  }\n  26.3157894737% {\n    transform: translateX(31vw) translateY(-29vh) scale(0.63);\n  }\n  31.5789473684% {\n    transform: translateX(-41vw) translateY(35vh) scale(0.83);\n  }\n  36.8421052632% {\n    transform: translateX(36vw) translateY(-22vh) scale(0.67);\n  }\n  42.1052631579% {\n    transform: translateX(20vw) translateY(-40vh) scale(0.37);\n  }\n  47.3684210526% {\n    transform: translateX(22vw) translateY(10vh) scale(0.58);\n  }\n  52.6315789474% {\n    transform: translateX(-47vw) translateY(34vh) scale(0.91);\n  }\n  57.8947368421% {\n    transform: translateX(-46vw) translateY(-9vh) scale(0.97);\n  }\n  63.1578947368% {\n    transform: translateX(43vw) translateY(20vh) scale(0.4);\n  }\n  68.4210526316% {\n    transform: translateX(47vw) translateY(41vh) scale(0.75);\n  }\n  73.6842105263% {\n    transform: translateX(23vw) translateY(-7vh) scale(0.48);\n  }\n  78.9473684211% {\n    transform: translateX(32vw) translateY(36vh) scale(0.51);\n  }\n  84.2105263158% {\n    transform: translateX(22vw) translateY(33vh) scale(0.8);\n  }\n  89.4736842105% {\n    transform: translateX(7vw) translateY(-15vh) scale(0.78);\n  }\n  94.7368421053% {\n    transform: translateX(-41vw) translateY(-31vh) scale(0.7);\n  }\n  100% {\n    transform: translateX(0vw) translateY(22vh) scale(0.96);\n  }\n}\n.firefly:nth-child(2) {\n  animation-name: move2;\n}\n.firefly:nth-child(2)::before {\n  animation-duration: 14s;\n}\n.firefly:nth-child(2)::after {\n  animation-duration: 14s, 8044ms;\n  animation-delay: 0ms, 1808ms;\n}\n\n@keyframes move2 {\n  0% {\n    transform: translateX(0vw) translateY(46vh) scale(0.78);\n  }\n  5.2631578947% {\n    transform: translateX(-43vw) translateY(-10vh) scale(0.63);\n  }\n  10.5263157895% {\n    transform: translateX(18vw) translateY(-18vh) scale(0.85);\n  }\n  15.7894736842% {\n    transform: translateX(5vw) translateY(-11vh) scale(0.34);\n  }\n  21.0526315789% {\n    transform: translateX(0vw) translateY(-16vh) scale(0.71);\n  }\n  26.3157894737% {\n    transform: translateX(-45vw) translateY(14vh) scale(0.55);\n  }\n  31.5789473684% {\n    transform: translateX(28vw) translateY(10vh) scale(0.64);\n  }\n  36.8421052632% {\n    transform: translateX(-37vw) translateY(-10vh) scale(0.69);\n  }\n  42.1052631579% {\n    transform: translateX(-42vw) translateY(-36vh) scale(0.34);\n  }\n  47.3684210526% {\n    transform: translateX(35vw) translateY(-28vh) scale(0.41);\n  }\n  52.6315789474% {\n    transform: translateX(-36vw) translateY(27vh) scale(0.46);\n  }\n  57.8947368421% {\n    transform: translateX(11vw) translateY(11vh) scale(0.58);\n  }\n  63.1578947368% {\n    transform: translateX(-4vw) translateY(-5vh) scale(0.64);\n  }\n  68.4210526316% {\n    transform: translateX(-14vw) translateY(-19vh) scale(0.64);\n  }\n  73.6842105263% {\n    transform: translateX(32vw) translateY(-1vh) scale(0.77);\n  }\n  78.9473684211% {\n    transform: translateX(-46vw) translateY(3vh) scale(0.39);\n  }\n  84.2105263158% {\n    transform: translateX(16vw) translateY(-46vh) scale(0.62);\n  }\n  89.4736842105% {\n    transform: translateX(44vw) translateY(24vh) scale(0.89);\n  }\n  94.7368421053% {\n    transform: translateX(-38vw) translateY(34vh) scale(0.76);\n  }\n  100% {\n    transform: translateX(-16vw) translateY(-39vh) scale(0.86);\n  }\n}\n.firefly:nth-child(3) {\n  animation-name: move3;\n}\n.firefly:nth-child(3)::before {\n  animation-duration: 17s;\n}\n.firefly:nth-child(3)::after {\n  animation-duration: 17s, 10714ms;\n  animation-delay: 0ms, 1716ms;\n}\n\n@keyframes move3 {\n  0% {\n    transform: translateX(43vw) translateY(34vh) scale(0.53);\n  }\n  5.8823529412% {\n    transform: translateX(34vw) translateY(-10vh) scale(0.49);\n  }\n  11.7647058824% {\n    transform: translateX(6vw) translateY(-19vh) scale(0.45);\n  }\n  17.6470588235% {\n    transform: translateX(-26vw) translateY(-12vh) scale(0.53);\n  }\n  23.5294117647% {\n    transform: translateX(44vw) translateY(43vh) scale(0.64);\n  }\n  29.4117647059% {\n    transform: translateX(36vw) translateY(-32vh) scale(0.83);\n  }\n  35.2941176471% {\n    transform: translateX(45vw) translateY(-14vh) scale(0.93);\n  }\n  41.1764705882% {\n    transform: translateX(33vw) translateY(-43vh) scale(0.63);\n  }\n  47.0588235294% {\n    transform: translateX(-8vw) translateY(26vh) scale(0.66);\n  }\n  52.9411764706% {\n    transform: translateX(34vw) translateY(31vh) scale(0.72);\n  }\n  58.8235294118% {\n    transform: translateX(32vw) translateY(20vh) scale(0.56);\n  }\n  64.7058823529% {\n    transform: translateX(-25vw) translateY(20vh) scale(0.9);\n  }\n  70.5882352941% {\n    transform: translateX(-21vw) translateY(2vh) scale(0.73);\n  }\n  76.4705882353% {\n    transform: translateX(-22vw) translateY(10vh) scale(0.46);\n  }\n  82.3529411765% {\n    transform: translateX(10vw) translateY(13vh) scale(0.94);\n  }\n  88.2352941176% {\n    transform: translateX(8vw) translateY(-32vh) scale(0.45);\n  }\n  94.1176470588% {\n    transform: translateX(50vw) translateY(31vh) scale(0.51);\n  }\n  100% {\n    transform: translateX(38vw) translateY(-26vh) scale(0.64);\n  }\n}\n.firefly:nth-child(4) {\n  animation-name: move4;\n}\n.firefly:nth-child(4)::before {\n  animation-duration: 11s;\n}\n.firefly:nth-child(4)::after {\n  animation-duration: 11s, 6072ms;\n  animation-delay: 0ms, 1459ms;\n}\n\n@keyframes move4 {\n  0% {\n    transform: translateX(-43vw) translateY(10vh) scale(0.52);\n  }\n  5.5555555556% {\n    transform: translateX(7vw) translateY(8vh) scale(0.43);\n  }\n  11.1111111111% {\n    transform: translateX(32vw) translateY(-44vh) scale(0.72);\n  }\n  16.6666666667% {\n    transform: translateX(17vw) translateY(-21vh) scale(0.28);\n  }\n  22.2222222222% {\n    transform: translateX(14vw) translateY(42vh) scale(0.36);\n  }\n  27.7777777778% {\n    transform: translateX(-4vw) translateY(46vh) scale(0.51);\n  }\n  33.3333333333% {\n    transform: translateX(29vw) translateY(-31vh) scale(0.43);\n  }\n  38.8888888889% {\n    transform: translateX(3vw) translateY(-21vh) scale(0.6);\n  }\n  44.4444444444% {\n    transform: translateX(42vw) translateY(-15vh) scale(0.26);\n  }\n  50% {\n    transform: translateX(-14vw) translateY(24vh) scale(0.86);\n  }\n  55.5555555556% {\n    transform: translateX(-3vw) translateY(43vh) scale(0.49);\n  }\n  61.1111111111% {\n    transform: translateX(18vw) translateY(31vh) scale(0.58);\n  }\n  66.6666666667% {\n    transform: translateX(40vw) translateY(-15vh) scale(0.38);\n  }\n  72.2222222222% {\n    transform: translateX(-49vw) translateY(23vh) scale(0.48);\n  }\n  77.7777777778% {\n    transform: translateX(-24vw) translateY(9vh) scale(0.71);\n  }\n  83.3333333333% {\n    transform: translateX(-29vw) translateY(-41vh) scale(0.95);\n  }\n  88.8888888889% {\n    transform: translateX(15vw) translateY(-1vh) scale(0.3);\n  }\n  94.4444444444% {\n    transform: translateX(-16vw) translateY(20vh) scale(0.43);\n  }\n  100% {\n    transform: translateX(41vw) translateY(-16vh) scale(0.99);\n  }\n}\n.firefly:nth-child(5) {\n  animation-name: move5;\n}\n.firefly:nth-child(5)::before {\n  animation-duration: 15s;\n}\n.firefly:nth-child(5)::after {\n  animation-duration: 15s, 8884ms;\n  animation-delay: 0ms, 7732ms;\n}\n\n@keyframes move5 {\n  0% {\n    transform: translateX(3vw) translateY(47vh) scale(0.73);\n  }\n  4% {\n    transform: translateX(-10vw) translateY(-48vh) scale(0.85);\n  }\n  8% {\n    transform: translateX(-26vw) translateY(-34vh) scale(0.5);\n  }\n  12% {\n    transform: translateX(-37vw) translateY(-24vh) scale(0.7);\n  }\n  16% {\n    transform: translateX(14vw) translateY(1vh) scale(0.99);\n  }\n  20% {\n    transform: translateX(-11vw) translateY(-3vh) scale(0.8);\n  }\n  24% {\n    transform: translateX(-22vw) translateY(-46vh) scale(0.35);\n  }\n  28% {\n    transform: translateX(-49vw) translateY(41vh) scale(0.76);\n  }\n  32% {\n    transform: translateX(14vw) translateY(-19vh) scale(0.56);\n  }\n  36% {\n    transform: translateX(29vw) translateY(42vh) scale(0.4);\n  }\n  40% {\n    transform: translateX(17vw) translateY(19vh) scale(0.79);\n  }\n  44% {\n    transform: translateX(-49vw) translateY(40vh) scale(0.91);\n  }\n  48% {\n    transform: translateX(47vw) translateY(-46vh) scale(0.53);\n  }\n  52% {\n    transform: translateX(-14vw) translateY(18vh) scale(0.29);\n  }\n  56% {\n    transform: translateX(-4vw) translateY(-17vh) scale(0.58);\n  }\n  60% {\n    transform: translateX(-8vw) translateY(-7vh) scale(0.48);\n  }\n  64% {\n    transform: translateX(8vw) translateY(31vh) scale(0.48);\n  }\n  68% {\n    transform: translateX(-29vw) translateY(-46vh) scale(0.97);\n  }\n  72% {\n    transform: translateX(50vw) translateY(35vh) scale(0.29);\n  }\n  76% {\n    transform: translateX(4vw) translateY(43vh) scale(0.58);\n  }\n  80% {\n    transform: translateX(39vw) translateY(-38vh) scale(0.38);\n  }\n  84% {\n    transform: translateX(49vw) translateY(28vh) scale(0.65);\n  }\n  88% {\n    transform: translateX(-9vw) translateY(-35vh) scale(0.93);\n  }\n  92% {\n    transform: translateX(-19vw) translateY(38vh) scale(0.54);\n  }\n  96% {\n    transform: translateX(41vw) translateY(-11vh) scale(0.78);\n  }\n  100% {\n    transform: translateX(20vw) translateY(41vh) scale(0.4);\n  }\n}\n.firefly:nth-child(6) {\n  animation-name: move6;\n}\n.firefly:nth-child(6)::before {\n  animation-duration: 17s;\n}\n.firefly:nth-child(6)::after {\n  animation-duration: 17s, 6433ms;\n  animation-delay: 0ms, 2333ms;\n}\n\n@keyframes move6 {\n  0% {\n    transform: translateX(30vw) translateY(36vh) scale(0.48);\n  }\n  4.347826087% {\n    transform: translateX(7vw) translateY(15vh) scale(0.53);\n  }\n  8.6956521739% {\n    transform: translateX(37vw) translateY(2vh) scale(0.39);\n  }\n  13.0434782609% {\n    transform: translateX(-21vw) translateY(36vh) scale(0.84);\n  }\n  17.3913043478% {\n    transform: translateX(-41vw) translateY(25vh) scale(0.57);\n  }\n  21.7391304348% {\n    transform: translateX(4vw) translateY(-32vh) scale(0.36);\n  }\n  26.0869565217% {\n    transform: translateX(-14vw) translateY(2vh) scale(0.88);\n  }\n  30.4347826087% {\n    transform: translateX(-24vw) translateY(32vh) scale(0.29);\n  }\n  34.7826086957% {\n    transform: translateX(50vw) translateY(14vh) scale(0.57);\n  }\n  39.1304347826% {\n    transform: translateX(25vw) translateY(22vh) scale(0.5);\n  }\n  43.4782608696% {\n    transform: translateX(19vw) translateY(35vh) scale(0.3);\n  }\n  47.8260869565% {\n    transform: translateX(40vw) translateY(20vh) scale(0.53);\n  }\n  52.1739130435% {\n    transform: translateX(49vw) translateY(-30vh) scale(1);\n  }\n  56.5217391304% {\n    transform: translateX(16vw) translateY(14vh) scale(0.55);\n  }\n  60.8695652174% {\n    transform: translateX(42vw) translateY(-10vh) scale(0.51);\n  }\n  65.2173913043% {\n    transform: translateX(-24vw) translateY(-29vh) scale(0.33);\n  }\n  69.5652173913% {\n    transform: translateX(46vw) translateY(28vh) scale(0.55);\n  }\n  73.9130434783% {\n    transform: translateX(4vw) translateY(-14vh) scale(0.28);\n  }\n  78.2608695652% {\n    transform: translateX(-34vw) translateY(9vh) scale(0.54);\n  }\n  82.6086956522% {\n    transform: translateX(50vw) translateY(-49vh) scale(0.59);\n  }\n  86.9565217391% {\n    transform: translateX(-33vw) translateY(0vh) scale(0.65);\n  }\n  91.3043478261% {\n    transform: translateX(-16vw) translateY(0vh) scale(0.3);\n  }\n  95.652173913% {\n    transform: translateX(-27vw) translateY(-16vh) scale(0.92);\n  }\n  100% {\n    transform: translateX(34vw) translateY(0vh) scale(0.36);\n  }\n}\n.firefly:nth-child(7) {\n  animation-name: move7;\n}\n.firefly:nth-child(7)::before {\n  animation-duration: 15s;\n}\n.firefly:nth-child(7)::after {\n  animation-duration: 15s, 6664ms;\n  animation-delay: 0ms, 5587ms;\n}\n\n@keyframes move7 {\n  0% {\n    transform: translateX(1vw) translateY(17vh) scale(0.95);\n  }\n  4.347826087% {\n    transform: translateX(39vw) translateY(33vh) scale(0.92);\n  }\n  8.6956521739% {\n    transform: translateX(-15vw) translateY(-13vh) scale(0.5);\n  }\n  13.0434782609% {\n    transform: translateX(1vw) translateY(-43vh) scale(0.91);\n  }\n  17.3913043478% {\n    transform: translateX(-49vw) translateY(24vh) scale(0.33);\n  }\n  21.7391304348% {\n    transform: translateX(43vw) translateY(42vh) scale(0.98);\n  }\n  26.0869565217% {\n    transform: translateX(-25vw) translateY(44vh) scale(0.74);\n  }\n  30.4347826087% {\n    transform: translateX(-1vw) translateY(-38vh) scale(0.69);\n  }\n  34.7826086957% {\n    transform: translateX(-36vw) translateY(29vh) scale(0.56);\n  }\n  39.1304347826% {\n    transform: translateX(-31vw) translateY(-45vh) scale(0.27);\n  }\n  43.4782608696% {\n    transform: translateX(14vw) translateY(41vh) scale(0.72);\n  }\n  47.8260869565% {\n    transform: translateX(50vw) translateY(-44vh) scale(0.93);\n  }\n  52.1739130435% {\n    transform: translateX(21vw) translateY(-49vh) scale(0.26);\n  }\n  56.5217391304% {\n    transform: translateX(1vw) translateY(-48vh) scale(0.53);\n  }\n  60.8695652174% {\n    transform: translateX(-38vw) translateY(-42vh) scale(0.37);\n  }\n  65.2173913043% {\n    transform: translateX(-4vw) translateY(-44vh) scale(0.43);\n  }\n  69.5652173913% {\n    transform: translateX(-29vw) translateY(30vh) scale(0.9);\n  }\n  73.9130434783% {\n    transform: translateX(-5vw) translateY(0vh) scale(0.79);\n  }\n  78.2608695652% {\n    transform: translateX(10vw) translateY(18vh) scale(0.55);\n  }\n  82.6086956522% {\n    transform: translateX(-5vw) translateY(16vh) scale(0.67);\n  }\n  86.9565217391% {\n    transform: translateX(-15vw) translateY(-49vh) scale(0.96);\n  }\n  91.3043478261% {\n    transform: translateX(5vw) translateY(44vh) scale(0.81);\n  }\n  95.652173913% {\n    transform: translateX(22vw) translateY(1vh) scale(0.33);\n  }\n  100% {\n    transform: translateX(13vw) translateY(-30vh) scale(0.85);\n  }\n}\n.firefly:nth-child(8) {\n  animation-name: move8;\n}\n.firefly:nth-child(8)::before {\n  animation-duration: 14s;\n}\n.firefly:nth-child(8)::after {\n  animation-duration: 14s, 6742ms;\n  animation-delay: 0ms, 5479ms;\n}\n\n@keyframes move8 {\n  0% {\n    transform: translateX(-23vw) translateY(45vh) scale(0.8);\n  }\n  4% {\n    transform: translateX(-8vw) translateY(5vh) scale(0.43);\n  }\n  8% {\n    transform: translateX(5vw) translateY(12vh) scale(0.95);\n  }\n  12% {\n    transform: translateX(-33vw) translateY(-29vh) scale(0.8);\n  }\n  16% {\n    transform: translateX(42vw) translateY(8vh) scale(0.28);\n  }\n  20% {\n    transform: translateX(-3vw) translateY(21vh) scale(0.58);\n  }\n  24% {\n    transform: translateX(-44vw) translateY(-24vh) scale(0.88);\n  }\n  28% {\n    transform: translateX(49vw) translateY(-2vh) scale(0.59);\n  }\n  32% {\n    transform: translateX(5vw) translateY(29vh) scale(0.28);\n  }\n  36% {\n    transform: translateX(12vw) translateY(-25vh) scale(0.36);\n  }\n  40% {\n    transform: translateX(47vw) translateY(-13vh) scale(0.41);\n  }\n  44% {\n    transform: translateX(46vw) translateY(-23vh) scale(0.39);\n  }\n  48% {\n    transform: translateX(36vw) translateY(-22vh) scale(0.5);\n  }\n  52% {\n    transform: translateX(-28vw) translateY(-36vh) scale(0.44);\n  }\n  56% {\n    transform: translateX(41vw) translateY(-28vh) scale(0.41);\n  }\n  60% {\n    transform: translateX(-39vw) translateY(35vh) scale(0.59);\n  }\n  64% {\n    transform: translateX(20vw) translateY(-33vh) scale(0.9);\n  }\n  68% {\n    transform: translateX(-40vw) translateY(-15vh) scale(0.83);\n  }\n  72% {\n    transform: translateX(8vw) translateY(29vh) scale(0.37);\n  }\n  76% {\n    transform: translateX(-10vw) translateY(6vh) scale(0.34);\n  }\n  80% {\n    transform: translateX(36vw) translateY(43vh) scale(0.72);\n  }\n  84% {\n    transform: translateX(11vw) translateY(-28vh) scale(0.36);\n  }\n  88% {\n    transform: translateX(8vw) translateY(41vh) scale(0.46);\n  }\n  92% {\n    transform: translateX(50vw) translateY(-30vh) scale(0.97);\n  }\n  96% {\n    transform: translateX(-31vw) translateY(0vh) scale(0.28);\n  }\n  100% {\n    transform: translateX(-31vw) translateY(30vh) scale(0.7);\n  }\n}\n.firefly:nth-child(9) {\n  animation-name: move9;\n}\n.firefly:nth-child(9)::before {\n  animation-duration: 10s;\n}\n.firefly:nth-child(9)::after {\n  animation-duration: 10s, 6240ms;\n  animation-delay: 0ms, 7157ms;\n}\n\n@keyframes move9 {\n  0% {\n    transform: translateX(-20vw) translateY(-13vh) scale(0.27);\n  }\n  3.8461538462% {\n    transform: translateX(-6vw) translateY(-45vh) scale(0.92);\n  }\n  7.6923076923% {\n    transform: translateX(23vw) translateY(-21vh) scale(0.77);\n  }\n  11.5384615385% {\n    transform: translateX(-38vw) translateY(14vh) scale(0.93);\n  }\n  15.3846153846% {\n    transform: translateX(2vw) translateY(29vh) scale(0.83);\n  }\n  19.2307692308% {\n    transform: translateX(-15vw) translateY(17vh) scale(0.84);\n  }\n  23.0769230769% {\n    transform: translateX(45vw) translateY(28vh) scale(0.35);\n  }\n  26.9230769231% {\n    transform: translateX(-43vw) translateY(10vh) scale(0.31);\n  }\n  30.7692307692% {\n    transform: translateX(12vw) translateY(6vh) scale(0.94);\n  }\n  34.6153846154% {\n    transform: translateX(39vw) translateY(-23vh) scale(0.64);\n  }\n  38.4615384615% {\n    transform: translateX(-10vw) translateY(-12vh) scale(0.6);\n  }\n  42.3076923077% {\n    transform: translateX(-30vw) translateY(-7vh) scale(0.37);\n  }\n  46.1538461538% {\n    transform: translateX(-47vw) translateY(1vh) scale(0.88);\n  }\n  50% {\n    transform: translateX(14vw) translateY(-30vh) scale(0.44);\n  }\n  53.8461538462% {\n    transform: translateX(-33vw) translateY(15vh) scale(0.41);\n  }\n  57.6923076923% {\n    transform: translateX(-12vw) translateY(-37vh) scale(0.84);\n  }\n  61.5384615385% {\n    transform: translateX(-4vw) translateY(-44vh) scale(0.43);\n  }\n  65.3846153846% {\n    transform: translateX(-33vw) translateY(-10vh) scale(0.47);\n  }\n  69.2307692308% {\n    transform: translateX(-29vw) translateY(-8vh) scale(0.38);\n  }\n  73.0769230769% {\n    transform: translateX(-37vw) translateY(17vh) scale(0.74);\n  }\n  76.9230769231% {\n    transform: translateX(-26vw) translateY(-13vh) scale(0.42);\n  }\n  80.7692307692% {\n    transform: translateX(8vw) translateY(22vh) scale(0.76);\n  }\n  84.6153846154% {\n    transform: translateX(45vw) translateY(-35vh) scale(0.84);\n  }\n  88.4615384615% {\n    transform: translateX(-6vw) translateY(34vh) scale(0.56);\n  }\n  92.3076923077% {\n    transform: translateX(-23vw) translateY(-12vh) scale(0.87);\n  }\n  96.1538461538% {\n    transform: translateX(35vw) translateY(-49vh) scale(0.97);\n  }\n  100% {\n    transform: translateX(3vw) translateY(11vh) scale(0.7);\n  }\n}\n.firefly:nth-child(10) {\n  animation-name: move10;\n}\n.firefly:nth-child(10)::before {\n  animation-duration: 11s;\n}\n.firefly:nth-child(10)::after {\n  animation-duration: 11s, 10150ms;\n  animation-delay: 0ms, 6814ms;\n}\n\n@keyframes move10 {\n  0% {\n    transform: translateX(24vw) translateY(-47vh) scale(0.99);\n  }\n  4.7619047619% {\n    transform: translateX(-44vw) translateY(-24vh) scale(0.38);\n  }\n  9.5238095238% {\n    transform: translateX(48vw) translateY(17vh) scale(0.47);\n  }\n  14.2857142857% {\n    transform: translateX(-33vw) translateY(-12vh) scale(0.89);\n  }\n  19.0476190476% {\n    transform: translateX(-45vw) translateY(4vh) scale(0.26);\n  }\n  23.8095238095% {\n    transform: translateX(17vw) translateY(-29vh) scale(1);\n  }\n  28.5714285714% {\n    transform: translateX(38vw) translateY(17vh) scale(0.81);\n  }\n  33.3333333333% {\n    transform: translateX(17vw) translateY(48vh) scale(0.35);\n  }\n  38.0952380952% {\n    transform: translateX(27vw) translateY(24vh) scale(0.59);\n  }\n  42.8571428571% {\n    transform: translateX(-20vw) translateY(22vh) scale(0.91);\n  }\n  47.619047619% {\n    transform: translateX(-18vw) translateY(45vh) scale(0.59);\n  }\n  52.380952381% {\n    transform: translateX(30vw) translateY(-34vh) scale(0.62);\n  }\n  57.1428571429% {\n    transform: translateX(31vw) translateY(32vh) scale(0.95);\n  }\n  61.9047619048% {\n    transform: translateX(-12vw) translateY(-41vh) scale(0.37);\n  }\n  66.6666666667% {\n    transform: translateX(-2vw) translateY(-9vh) scale(0.74);\n  }\n  71.4285714286% {\n    transform: translateX(-48vw) translateY(-37vh) scale(0.79);\n  }\n  76.1904761905% {\n    transform: translateX(36vw) translateY(-43vh) scale(0.71);\n  }\n  80.9523809524% {\n    transform: translateX(11vw) translateY(-45vh) scale(0.42);\n  }\n  85.7142857143% {\n    transform: translateX(38vw) translateY(-19vh) scale(0.63);\n  }\n  90.4761904762% {\n    transform: translateX(-46vw) translateY(16vh) scale(0.37);\n  }\n  95.2380952381% {\n    transform: translateX(8vw) translateY(-41vh) scale(0.76);\n  }\n  100% {\n    transform: translateX(27vw) translateY(41vh) scale(0.97);\n  }\n}\n.firefly:nth-child(11) {\n  animation-name: move11;\n}\n.firefly:nth-child(11)::before {\n  animation-duration: 12s;\n}\n.firefly:nth-child(11)::after {\n  animation-duration: 12s, 6502ms;\n  animation-delay: 0ms, 4790ms;\n}\n\n@keyframes move11 {\n  0% {\n    transform: translateX(-31vw) translateY(26vh) scale(0.59);\n  }\n  4.5454545455% {\n    transform: translateX(-1vw) translateY(36vh) scale(0.65);\n  }\n  9.0909090909% {\n    transform: translateX(2vw) translateY(-19vh) scale(0.51);\n  }\n  13.6363636364% {\n    transform: translateX(45vw) translateY(-41vh) scale(1);\n  }\n  18.1818181818% {\n    transform: translateX(16vw) translateY(-22vh) scale(0.75);\n  }\n  22.7272727273% {\n    transform: translateX(17vw) translateY(20vh) scale(0.81);\n  }\n  27.2727272727% {\n    transform: translateX(34vw) translateY(19vh) scale(0.75);\n  }\n  31.8181818182% {\n    transform: translateX(8vw) translateY(5vh) scale(0.65);\n  }\n  36.3636363636% {\n    transform: translateX(8vw) translateY(43vh) scale(0.45);\n  }\n  40.9090909091% {\n    transform: translateX(-10vw) translateY(-24vh) scale(0.89);\n  }\n  45.4545454545% {\n    transform: translateX(48vw) translateY(-30vh) scale(0.48);\n  }\n  50% {\n    transform: translateX(23vw) translateY(42vh) scale(0.9);\n  }\n  54.5454545455% {\n    transform: translateX(24vw) translateY(3vh) scale(0.44);\n  }\n  59.0909090909% {\n    transform: translateX(9vw) translateY(-49vh) scale(0.45);\n  }\n  63.6363636364% {\n    transform: translateX(16vw) translateY(47vh) scale(0.77);\n  }\n  68.1818181818% {\n    transform: translateX(49vw) translateY(-20vh) scale(0.72);\n  }\n  72.7272727273% {\n    transform: translateX(-7vw) translateY(41vh) scale(0.68);\n  }\n  77.2727272727% {\n    transform: translateX(42vw) translateY(8vh) scale(0.48);\n  }\n  81.8181818182% {\n    transform: translateX(-38vw) translateY(-7vh) scale(0.97);\n  }\n  86.3636363636% {\n    transform: translateX(-10vw) translateY(47vh) scale(0.28);\n  }\n  90.9090909091% {\n    transform: translateX(-17vw) translateY(10vh) scale(0.78);\n  }\n  95.4545454545% {\n    transform: translateX(21vw) translateY(35vh) scale(1);\n  }\n  100% {\n    transform: translateX(46vw) translateY(50vh) scale(0.51);\n  }\n}\n.firefly:nth-child(12) {\n  animation-name: move12;\n}\n.firefly:nth-child(12)::before {\n  animation-duration: 16s;\n}\n.firefly:nth-child(12)::after {\n  animation-duration: 16s, 5660ms;\n  animation-delay: 0ms, 6115ms;\n}\n\n@keyframes move12 {\n  0% {\n    transform: translateX(37vw) translateY(-43vh) scale(0.28);\n  }\n  3.5714285714% {\n    transform: translateX(14vw) translateY(36vh) scale(0.79);\n  }\n  7.1428571429% {\n    transform: translateX(-12vw) translateY(-21vh) scale(0.78);\n  }\n  10.7142857143% {\n    transform: translateX(15vw) translateY(20vh) scale(0.83);\n  }\n  14.2857142857% {\n    transform: translateX(25vw) translateY(-35vh) scale(0.83);\n  }\n  17.8571428571% {\n    transform: translateX(-20vw) translateY(-21vh) scale(0.46);\n  }\n  21.4285714286% {\n    transform: translateX(-40vw) translateY(-31vh) scale(0.73);\n  }\n  25% {\n    transform: translateX(-4vw) translateY(-23vh) scale(0.98);\n  }\n  28.5714285714% {\n    transform: translateX(4vw) translateY(-31vh) scale(0.9);\n  }\n  32.1428571429% {\n    transform: translateX(24vw) translateY(18vh) scale(0.35);\n  }\n  35.7142857143% {\n    transform: translateX(-23vw) translateY(35vh) scale(0.76);\n  }\n  39.2857142857% {\n    transform: translateX(-9vw) translateY(-21vh) scale(0.73);\n  }\n  42.8571428571% {\n    transform: translateX(22vw) translateY(-23vh) scale(0.8);\n  }\n  46.4285714286% {\n    transform: translateX(-4vw) translateY(30vh) scale(0.39);\n  }\n  50% {\n    transform: translateX(20vw) translateY(-10vh) scale(0.95);\n  }\n  53.5714285714% {\n    transform: translateX(7vw) translateY(-21vh) scale(0.41);\n  }\n  57.1428571429% {\n    transform: translateX(-16vw) translateY(46vh) scale(0.95);\n  }\n  60.7142857143% {\n    transform: translateX(-21vw) translateY(39vh) scale(0.75);\n  }\n  64.2857142857% {\n    transform: translateX(-31vw) translateY(23vh) scale(0.84);\n  }\n  67.8571428571% {\n    transform: translateX(43vw) translateY(36vh) scale(0.98);\n  }\n  71.4285714286% {\n    transform: translateX(-4vw) translateY(0vh) scale(0.41);\n  }\n  75% {\n    transform: translateX(5vw) translateY(-33vh) scale(0.41);\n  }\n  78.5714285714% {\n    transform: translateX(0vw) translateY(21vh) scale(0.38);\n  }\n  82.1428571429% {\n    transform: translateX(43vw) translateY(-25vh) scale(0.47);\n  }\n  85.7142857143% {\n    transform: translateX(-32vw) translateY(21vh) scale(0.4);\n  }\n  89.2857142857% {\n    transform: translateX(-14vw) translateY(12vh) scale(0.38);\n  }\n  92.8571428571% {\n    transform: translateX(-42vw) translateY(4vh) scale(0.36);\n  }\n  96.4285714286% {\n    transform: translateX(17vw) translateY(-17vh) scale(0.34);\n  }\n  100% {\n    transform: translateX(19vw) translateY(-7vh) scale(0.73);\n  }\n}\n.firefly:nth-child(13) {\n  animation-name: move13;\n}\n.firefly:nth-child(13)::before {\n  animation-duration: 9s;\n}\n.firefly:nth-child(13)::after {\n  animation-duration: 9s, 8216ms;\n  animation-delay: 0ms, 2291ms;\n}\n\n@keyframes move13 {\n  0% {\n    transform: translateX(-46vw) translateY(34vh) scale(0.52);\n  }\n  5.8823529412% {\n    transform: translateX(-48vw) translateY(9vh) scale(0.57);\n  }\n  11.7647058824% {\n    transform: translateX(-8vw) translateY(18vh) scale(0.6);\n  }\n  17.6470588235% {\n    transform: translateX(-27vw) translateY(15vh) scale(0.76);\n  }\n  23.5294117647% {\n    transform: translateX(-29vw) translateY(39vh) scale(0.58);\n  }\n  29.4117647059% {\n    transform: translateX(44vw) translateY(18vh) scale(0.43);\n  }\n  35.2941176471% {\n    transform: translateX(36vw) translateY(-17vh) scale(0.32);\n  }\n  41.1764705882% {\n    transform: translateX(15vw) translateY(-25vh) scale(0.69);\n  }\n  47.0588235294% {\n    transform: translateX(-37vw) translateY(-30vh) scale(0.43);\n  }\n  52.9411764706% {\n    transform: translateX(14vw) translateY(45vh) scale(0.7);\n  }\n  58.8235294118% {\n    transform: translateX(-23vw) translateY(9vh) scale(0.95);\n  }\n  64.7058823529% {\n    transform: translateX(32vw) translateY(-26vh) scale(0.6);\n  }\n  70.5882352941% {\n    transform: translateX(-24vw) translateY(0vh) scale(0.51);\n  }\n  76.4705882353% {\n    transform: translateX(-12vw) translateY(-9vh) scale(0.56);\n  }\n  82.3529411765% {\n    transform: translateX(39vw) translateY(0vh) scale(0.88);\n  }\n  88.2352941176% {\n    transform: translateX(20vw) translateY(29vh) scale(0.36);\n  }\n  94.1176470588% {\n    transform: translateX(-30vw) translateY(-35vh) scale(0.35);\n  }\n  100% {\n    transform: translateX(22vw) translateY(32vh) scale(0.3);\n  }\n}\n.firefly:nth-child(14) {\n  animation-name: move14;\n}\n.firefly:nth-child(14)::before {\n  animation-duration: 17s;\n}\n.firefly:nth-child(14)::after {\n  animation-duration: 17s, 6508ms;\n  animation-delay: 0ms, 1492ms;\n}\n\n@keyframes move14 {\n  0% {\n    transform: translateX(9vw) translateY(-14vh) scale(0.41);\n  }\n  5.8823529412% {\n    transform: translateX(-38vw) translateY(40vh) scale(0.87);\n  }\n  11.7647058824% {\n    transform: translateX(-3vw) translateY(34vh) scale(0.56);\n  }\n  17.6470588235% {\n    transform: translateX(-49vw) translateY(-1vh) scale(0.52);\n  }\n  23.5294117647% {\n    transform: translateX(-9vw) translateY(38vh) scale(0.76);\n  }\n  29.4117647059% {\n    transform: translateX(-43vw) translateY(8vh) scale(0.52);\n  }\n  35.2941176471% {\n    transform: translateX(43vw) translateY(-19vh) scale(0.3);\n  }\n  41.1764705882% {\n    transform: translateX(15vw) translateY(15vh) scale(0.84);\n  }\n  47.0588235294% {\n    transform: translateX(-20vw) translateY(30vh) scale(0.56);\n  }\n  52.9411764706% {\n    transform: translateX(-36vw) translateY(-24vh) scale(0.91);\n  }\n  58.8235294118% {\n    transform: translateX(45vw) translateY(50vh) scale(0.62);\n  }\n  64.7058823529% {\n    transform: translateX(-44vw) translateY(41vh) scale(0.94);\n  }\n  70.5882352941% {\n    transform: translateX(25vw) translateY(12vh) scale(0.82);\n  }\n  76.4705882353% {\n    transform: translateX(-49vw) translateY(-9vh) scale(0.43);\n  }\n  82.3529411765% {\n    transform: translateX(29vw) translateY(22vh) scale(0.85);\n  }\n  88.2352941176% {\n    transform: translateX(-22vw) translateY(-39vh) scale(0.26);\n  }\n  94.1176470588% {\n    transform: translateX(-34vw) translateY(-42vh) scale(0.38);\n  }\n  100% {\n    transform: translateX(-30vw) translateY(-49vh) scale(0.73);\n  }\n}\n.firefly:nth-child(15) {\n  animation-name: move15;\n}\n.firefly:nth-child(15)::before {\n  animation-duration: 14s;\n}\n.firefly:nth-child(15)::after {\n  animation-duration: 14s, 5811ms;\n  animation-delay: 0ms, 5321ms;\n}\n\n@keyframes move15 {\n  0% {\n    transform: translateX(-35vw) translateY(6vh) scale(0.35);\n  }\n  4% {\n    transform: translateX(49vw) translateY(-36vh) scale(0.45);\n  }\n  8% {\n    transform: translateX(24vw) translateY(-7vh) scale(0.84);\n  }\n  12% {\n    transform: translateX(31vw) translateY(7vh) scale(0.82);\n  }\n  16% {\n    transform: translateX(-36vw) translateY(-9vh) scale(0.56);\n  }\n  20% {\n    transform: translateX(49vw) translateY(1vh) scale(0.51);\n  }\n  24% {\n    transform: translateX(-31vw) translateY(-43vh) scale(0.62);\n  }\n  28% {\n    transform: translateX(-33vw) translateY(43vh) scale(0.32);\n  }\n  32% {\n    transform: translateX(7vw) translateY(-23vh) scale(0.45);\n  }\n  36% {\n    transform: translateX(11vw) translateY(-22vh) scale(0.92);\n  }\n  40% {\n    transform: translateX(-4vw) translateY(12vh) scale(0.38);\n  }\n  44% {\n    transform: translateX(39vw) translateY(14vh) scale(0.96);\n  }\n  48% {\n    transform: translateX(-24vw) translateY(-14vh) scale(0.51);\n  }\n  52% {\n    transform: translateX(-25vw) translateY(-41vh) scale(0.54);\n  }\n  56% {\n    transform: translateX(14vw) translateY(-28vh) scale(0.5);\n  }\n  60% {\n    transform: translateX(8vw) translateY(23vh) scale(0.65);\n  }\n  64% {\n    transform: translateX(19vw) translateY(37vh) scale(0.83);\n  }\n  68% {\n    transform: translateX(7vw) translateY(-3vh) scale(0.34);\n  }\n  72% {\n    transform: translateX(-9vw) translateY(28vh) scale(0.8);\n  }\n  76% {\n    transform: translateX(19vw) translateY(12vh) scale(0.97);\n  }\n  80% {\n    transform: translateX(-26vw) translateY(0vh) scale(0.69);\n  }\n  84% {\n    transform: translateX(-48vw) translateY(33vh) scale(0.92);\n  }\n  88% {\n    transform: translateX(-47vw) translateY(-46vh) scale(0.97);\n  }\n  92% {\n    transform: translateX(-31vw) translateY(48vh) scale(0.58);\n  }\n  96% {\n    transform: translateX(-48vw) translateY(40vh) scale(0.97);\n  }\n  100% {\n    transform: translateX(14vw) translateY(-8vh) scale(0.99);\n  }\n}\n@keyframes drift {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes flash {\n  0%, 30%, 100% {\n    opacity: 0;\n    box-shadow: 0 0 0vw 0vw yellow;\n  }\n  5% {\n    opacity: 1;\n    box-shadow: 0 0 2vw 0.4vw yellow;\n  }\n}',"h1 {\n  background-color: #3d3d;\n}"],sourceRoot:""}]);const c=i},299:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(15),a=t.n(r),l=t(645),o=t.n(l)()(a());o.push([e.id,".react-calendar {\n  width: 350px;\n  max-width: 100%;\n  background: white;\n  border: 1px solid #a0a096;\n  font-family: Arial, Helvetica, sans-serif;\n  line-height: 1.125em;\n}\n.react-calendar--doubleView {\n  width: 700px;\n}\n.react-calendar--doubleView .react-calendar__viewContainer {\n  display: flex;\n  margin: -0.5em;\n}\n.react-calendar--doubleView .react-calendar__viewContainer > * {\n  width: 50%;\n  margin: 0.5em;\n}\n.react-calendar,\n.react-calendar *,\n.react-calendar *:before,\n.react-calendar *:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.react-calendar button {\n  margin: 0;\n  border: 0;\n  outline: none;\n}\n.react-calendar button:enabled:hover {\n  cursor: pointer;\n}\n.react-calendar__navigation {\n  height: 44px;\n  margin-bottom: 1em;\n}\n.react-calendar__navigation button {\n  min-width: 44px;\n  background: none;\n}\n.react-calendar__navigation button:enabled:hover,\n.react-calendar__navigation button:enabled:focus {\n  background-color: #e6e6e6;\n}\n.react-calendar__navigation button[disabled] {\n  background-color: #f0f0f0;\n}\n.react-calendar__month-view__weekdays {\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 0.75em;\n}\n.react-calendar__month-view__weekdays__weekday {\n  padding: 0.5em;\n}\n.react-calendar__month-view__weekNumbers {\n  font-weight: bold;\n}\n.react-calendar__month-view__weekNumbers .react-calendar__tile {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75em;\n  padding: calc(0.75em / 0.75) calc(0.5em / 0.75);\n}\n.react-calendar__month-view__days__day--weekend {\n  color: #d10000;\n}\n.react-calendar__month-view__days__day--neighboringMonth {\n  color: #757575;\n}\n.react-calendar__year-view .react-calendar__tile,\n.react-calendar__decade-view .react-calendar__tile,\n.react-calendar__century-view .react-calendar__tile {\n  padding: 2em 0.5em;\n}\n.react-calendar__tile {\n  max-width: 100%;\n  text-align: center;\n  padding: 0.75em 0.5em;\n  background: none;\n}\n.react-calendar__tile:disabled {\n  background-color: #f0f0f0;\n}\n.react-calendar__tile:enabled:hover,\n.react-calendar__tile:enabled:focus {\n  background-color: #e6e6e6;\n}\n.react-calendar__tile--now {\n  background: #ffff76;\n}\n.react-calendar__tile--now:enabled:hover,\n.react-calendar__tile--now:enabled:focus {\n  background: #ffffa9;\n}\n.react-calendar__tile--hasActive {\n  background: #76baff;\n}\n.react-calendar__tile--hasActive:enabled:hover,\n.react-calendar__tile--hasActive:enabled:focus {\n  background: #a9d4ff;\n}\n.react-calendar__tile--active {\n  background: #006edc;\n  color: white;\n}\n.react-calendar__tile--active:enabled:hover,\n.react-calendar__tile--active:enabled:focus {\n  background: #1087ff;\n}\n.react-calendar--selectRange .react-calendar__tile--hover {\n  background-color: #e6e6e6;\n}\n","",{version:3,sources:["webpack://./node_modules/react-calendar/dist/Calendar.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,yBAAyB;EACzB,yCAAyC;EACzC,oBAAoB;AACtB;AACA;EACE,YAAY;AACd;AACA;EACE,aAAa;EACb,cAAc;AAChB;AACA;EACE,UAAU;EACV,aAAa;AACf;AACA;;;;EAIE,2BAA2B;EAC3B,8BAA8B;EAC9B,sBAAsB;AACxB;AACA;EACE,SAAS;EACT,SAAS;EACT,aAAa;AACf;AACA;EACE,eAAe;AACjB;AACA;EACE,YAAY;EACZ,kBAAkB;AACpB;AACA;EACE,eAAe;EACf,gBAAgB;AAClB;AACA;;EAEE,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,iBAAiB;EACjB,iBAAiB;AACnB;AACA;EACE,cAAc;AAChB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,iBAAiB;EACjB,+CAA+C;AACjD;AACA;EACE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;;EAGE,kBAAkB;AACpB;AACA;EACE,eAAe;EACf,kBAAkB;EAClB,qBAAqB;EACrB,gBAAgB;AAClB;AACA;EACE,yBAAyB;AAC3B;AACA;;EAEE,yBAAyB;AAC3B;AACA;EACE,mBAAmB;AACrB;AACA;;EAEE,mBAAmB;AACrB;AACA;EACE,mBAAmB;AACrB;AACA;;EAEE,mBAAmB;AACrB;AACA;EACE,mBAAmB;EACnB,YAAY;AACd;AACA;;EAEE,mBAAmB;AACrB;AACA;EACE,yBAAyB;AAC3B",sourcesContent:[".react-calendar {\n  width: 350px;\n  max-width: 100%;\n  background: white;\n  border: 1px solid #a0a096;\n  font-family: Arial, Helvetica, sans-serif;\n  line-height: 1.125em;\n}\n.react-calendar--doubleView {\n  width: 700px;\n}\n.react-calendar--doubleView .react-calendar__viewContainer {\n  display: flex;\n  margin: -0.5em;\n}\n.react-calendar--doubleView .react-calendar__viewContainer > * {\n  width: 50%;\n  margin: 0.5em;\n}\n.react-calendar,\n.react-calendar *,\n.react-calendar *:before,\n.react-calendar *:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.react-calendar button {\n  margin: 0;\n  border: 0;\n  outline: none;\n}\n.react-calendar button:enabled:hover {\n  cursor: pointer;\n}\n.react-calendar__navigation {\n  height: 44px;\n  margin-bottom: 1em;\n}\n.react-calendar__navigation button {\n  min-width: 44px;\n  background: none;\n}\n.react-calendar__navigation button:enabled:hover,\n.react-calendar__navigation button:enabled:focus {\n  background-color: #e6e6e6;\n}\n.react-calendar__navigation button[disabled] {\n  background-color: #f0f0f0;\n}\n.react-calendar__month-view__weekdays {\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 0.75em;\n}\n.react-calendar__month-view__weekdays__weekday {\n  padding: 0.5em;\n}\n.react-calendar__month-view__weekNumbers {\n  font-weight: bold;\n}\n.react-calendar__month-view__weekNumbers .react-calendar__tile {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75em;\n  padding: calc(0.75em / 0.75) calc(0.5em / 0.75);\n}\n.react-calendar__month-view__days__day--weekend {\n  color: #d10000;\n}\n.react-calendar__month-view__days__day--neighboringMonth {\n  color: #757575;\n}\n.react-calendar__year-view .react-calendar__tile,\n.react-calendar__decade-view .react-calendar__tile,\n.react-calendar__century-view .react-calendar__tile {\n  padding: 2em 0.5em;\n}\n.react-calendar__tile {\n  max-width: 100%;\n  text-align: center;\n  padding: 0.75em 0.5em;\n  background: none;\n}\n.react-calendar__tile:disabled {\n  background-color: #f0f0f0;\n}\n.react-calendar__tile:enabled:hover,\n.react-calendar__tile:enabled:focus {\n  background-color: #e6e6e6;\n}\n.react-calendar__tile--now {\n  background: #ffff76;\n}\n.react-calendar__tile--now:enabled:hover,\n.react-calendar__tile--now:enabled:focus {\n  background: #ffffa9;\n}\n.react-calendar__tile--hasActive {\n  background: #76baff;\n}\n.react-calendar__tile--hasActive:enabled:hover,\n.react-calendar__tile--hasActive:enabled:focus {\n  background: #a9d4ff;\n}\n.react-calendar__tile--active {\n  background: #006edc;\n  color: white;\n}\n.react-calendar__tile--active:enabled:hover,\n.react-calendar__tile--active:enabled:focus {\n  background: #1087ff;\n}\n.react-calendar--selectRange .react-calendar__tile--hover {\n  background-color: #e6e6e6;\n}\n"],sourceRoot:""}]);const s=o},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var l=0;l<this.length;l++){var o=this[l][0];null!=o&&(a[o]=!0)}for(var s=0;s<e.length;s++){var i=[].concat(e[s]);r&&a[i[0]]||(t&&(i[2]?i[2]="".concat(t," and ").concat(i[2]):i[2]=t),n.push(i))}},n}},15:e=>{"use strict";function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,a=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],r=!0,a=!1,l=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(t.push(o.value),!n||t.length!==n);r=!0);}catch(e){a=!0,l=e}finally{try{r||null==s.return||s.return()}finally{if(a)throw l}}return t}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=a[1],o=a[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(i," */"),u=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[l].concat(u).concat([c]).join("\n")}return[l].join("\n")}},679:(e,n,t)=>{"use strict";var r=t(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},l={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},s={};function i(e){return r.isMemo(e)?o:s[e.$$typeof]||a}s[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},s[r.Memo]=o;var c=Object.defineProperty,u=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,A=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,v=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(v){var a=d(t);a&&a!==v&&e(n,a,r)}var o=u(t);f&&(o=o.concat(f(t)));for(var s=i(n),m=i(t),p=0;p<o.length;++p){var h=o[p];if(!(l[h]||r&&r[h]||m&&m[h]||s&&s[h])){var E=A(t,h);try{c(n,h,E)}catch(e){}}}}return n}},917:e=>{var n=/^\s+|\s+$/g,t=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,a=/^0o[0-7]+$/i,l=parseInt,o=Object.prototype.toString;function s(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}e.exports=function(e){return function(e,i){var c;if("function"!=typeof i)throw new TypeError("Expected a function");return e=function(e){var i=function(e){return e?1/0===(e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==o.call(e)}(e))return NaN;if(s(e)){var i="function"==typeof e.valueOf?e.valueOf():e;e=s(i)?i+"":i}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var c=r.test(e);return c||a.test(e)?l(e.slice(2),c?2:8):t.test(e)?NaN:+e}(e))||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}(e),c=i%1;return i==i?c?i-c:i:0}(e),function(){return--e>0&&(c=i.apply(this,arguments)),e<=1&&(i=void 0),c}}(2,e)}},418:e=>{"use strict";var n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,l){for(var o,s,i=a(e),c=1;c<arguments.length;c++){for(var u in o=Object(arguments[c]))t.call(o,u)&&(i[u]=o[u]);if(n){s=n(o);for(var f=0;f<s.length;f++)r.call(o,s[f])&&(i[s[f]]=o[s[f]])}}return i}},703:(e,n,t)=>{"use strict";var r=t(414);function a(){}function l(){}l.resetWarningCache=a,e.exports=function(){function e(e,n,t,a,l,o){if(o!==r){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function n(){return e}e.isRequired=e;var t={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:l,resetWarningCache:a};return t.PropTypes=t,t}},697:(e,n,t)=>{e.exports=t(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,n,t)=>{"use strict";var r=t(294),a=t(418),l=t(840);function o(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));var s=new Set,i={};function c(e,n){u(e,n),u(e+"Capture",n)}function u(e,n){for(i[e]=n,e=0;e<n.length;e++)s.add(n[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),A=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d=Object.prototype.hasOwnProperty,v={},m={};function p(e,n,t,r,a,l,o){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=l,this.removeEmptyString=o}var h={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){h[e]=new p(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];h[n]=new p(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){h[e]=new p(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){h[e]=new p(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){h[e]=new p(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){h[e]=new p(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){h[e]=new p(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){h[e]=new p(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){h[e]=new p(e,5,!1,e.toLowerCase(),null,!1,!1)}));var E=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function w(e,n,t,r){var a=h.hasOwnProperty(n)?h[n]:null;(null!==a?0===a.type:!r&&2<n.length&&("o"===n[0]||"O"===n[0])&&("n"===n[1]||"N"===n[1]))||(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,a,r)&&(t=null),r||null===a?function(e){return!!d.call(m,e)||!d.call(v,e)&&(A.test(e)?m[e]=!0:(v[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):a.mustUseProperty?e[a.propertyName]=null===t?3!==a.type&&"":t:(n=a.attributeName,r=a.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(E,y);h[n]=new p(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(E,y);h[n]=new p(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(E,y);h[n]=new p(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){h[e]=new p(e,1,!1,e.toLowerCase(),null,!1,!1)})),h.xlinkHref=new p("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){h[e]=new p(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,g=60103,C=60106,O=60107,F=60108,k=60114,x=60109,D=60110,Y=60112,S=60113,X=60120,N=60115,_=60116,I=60121,B=60128,j=60129,P=60130,T=60131;if("function"==typeof Symbol&&Symbol.for){var L=Symbol.for;g=L("react.element"),C=L("react.portal"),O=L("react.fragment"),F=L("react.strict_mode"),k=L("react.profiler"),x=L("react.provider"),D=L("react.context"),Y=L("react.forward_ref"),S=L("react.suspense"),X=L("react.suspense_list"),N=L("react.memo"),_=L("react.lazy"),I=L("react.block"),L("react.scope"),B=L("react.opaque.id"),j=L("react.debug_trace_mode"),P=L("react.offscreen"),T=L("react.legacy_hidden")}var R,z="function"==typeof Symbol&&Symbol.iterator;function M(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=z&&e[z]||e["@@iterator"])?e:null}function U(e){if(void 0===R)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);R=n&&n[1]||""}return"\n"+R+e}var W=!1;function V(e,n){if(!e||W)return"";W=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),l=r.stack.split("\n"),o=a.length-1,s=l.length-1;1<=o&&0<=s&&a[o]!==l[s];)s--;for(;1<=o&&0<=s;o--,s--)if(a[o]!==l[s]){if(1!==o||1!==s)do{if(o--,0>--s||a[o]!==l[s])return"\n"+a[o].replace(" at new "," at ")}while(1<=o&&0<=s);break}}}finally{W=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?U(e):""}function q(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return V(e.type,!1);case 11:return V(e.type.render,!1);case 22:return V(e.type._render,!1);case 1:return V(e.type,!0);default:return""}}function $(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case O:return"Fragment";case C:return"Portal";case k:return"Profiler";case F:return"StrictMode";case S:return"Suspense";case X:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case D:return(e.displayName||"Context")+".Consumer";case x:return(e._context.displayName||"Context")+".Provider";case Y:var n=e.render;return n=n.displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case N:return $(e.type);case I:return $(e._render);case _:n=e._payload,e=e._init;try{return $(e(n))}catch(e){}}return null}function H(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Q(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function K(e){e._valueTracker||(e._valueTracker=function(e){var n=Q(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,l=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function J(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=Q(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function Z(e,n){var t=n.checked;return a({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function ee(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=H(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function ne(e,n){null!=(n=n.checked)&&w(e,"checked",n,!1)}function te(e,n){ne(e,n);var t=H(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ae(e,n.type,t):n.hasOwnProperty("defaultValue")&&ae(e,n.type,H(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function re(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ae(e,n,t){"number"===n&&G(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function le(e,n){return e=a({children:void 0},n),(n=function(e){var n="";return r.Children.forEach(e,(function(e){null!=e&&(n+=e)})),n}(n.children))&&(e.children=n),e}function oe(e,n,t,r){if(e=e.options,n){n={};for(var a=0;a<t.length;a++)n["$"+t[a]]=!0;for(t=0;t<e.length;t++)a=n.hasOwnProperty("$"+e[t].value),e[t].selected!==a&&(e[t].selected=a),a&&r&&(e[t].defaultSelected=!0)}else{for(t=""+H(t),n=null,a=0;a<e.length;a++){if(e[a].value===t)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==n||e[a].disabled||(n=e[a])}null!==n&&(n.selected=!0)}}function se(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(o(91));return a({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ie(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(o(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(o(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:H(t)}}function ce(e,n){var t=H(n.value),r=H(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function ue(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}var fe="http://www.w3.org/1999/xhtml";function Ae(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function de(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?Ae(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ve,me,pe=(me=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ve=ve||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ve.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return me(e,n)}))}:me);function he(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var Ee={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ye=["Webkit","ms","Moz","O"];function we(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||Ee.hasOwnProperty(e)&&Ee[e]?(""+n).trim():n+"px"}function be(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=we(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,a):e[t]=a}}Object.keys(Ee).forEach((function(e){ye.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),Ee[n]=Ee[e]}))}));var ge=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ce(e,n){if(n){if(ge[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(o(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(o(62))}}function Oe(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Fe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,xe=null,De=null;function Ye(e){if(e=Zr(e)){if("function"!=typeof ke)throw Error(o(280));var n=e.stateNode;n&&(n=na(n),ke(e.stateNode,e.type,n))}}function Se(e){xe?De?De.push(e):De=[e]:xe=e}function Xe(){if(xe){var e=xe,n=De;if(De=xe=null,Ye(e),n)for(e=0;e<n.length;e++)Ye(n[e])}}function Ne(e,n){return e(n)}function _e(e,n,t,r,a){return e(n,t,r,a)}function Ie(){}var Be=Ne,je=!1,Pe=!1;function Te(){null===xe&&null===De||(Ie(),Xe())}function Le(e,n){var t=e.stateNode;if(null===t)return null;var r=na(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(o(231,n,typeof t));return t}var Re=!1;if(f)try{var ze={};Object.defineProperty(ze,"passive",{get:function(){Re=!0}}),window.addEventListener("test",ze,ze),window.removeEventListener("test",ze,ze)}catch(me){Re=!1}function Me(e,n,t,r,a,l,o,s,i){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var Ue=!1,We=null,Ve=!1,qe=null,$e={onError:function(e){Ue=!0,We=e}};function He(e,n,t,r,a,l,o,s,i){Ue=!1,We=null,Me.apply($e,arguments)}function Qe(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(1026&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ke(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Je(e){if(Qe(e)!==e)throw Error(o(188))}function Ge(e){if(!(e=function(e){var n=e.alternate;if(!n){if(null===(n=Qe(e)))throw Error(o(188));return n!==e?null:e}for(var t=e,r=n;;){var a=t.return;if(null===a)break;var l=a.alternate;if(null===l){if(null!==(r=a.return)){t=r;continue}break}if(a.child===l.child){for(l=a.child;l;){if(l===t)return Je(a),e;if(l===r)return Je(a),n;l=l.sibling}throw Error(o(188))}if(t.return!==r.return)t=a,r=l;else{for(var s=!1,i=a.child;i;){if(i===t){s=!0,t=a,r=l;break}if(i===r){s=!0,r=a,t=l;break}i=i.sibling}if(!s){for(i=l.child;i;){if(i===t){s=!0,t=l,r=a;break}if(i===r){s=!0,r=l,t=a;break}i=i.sibling}if(!s)throw Error(o(189))}}if(t.alternate!==r)throw Error(o(190))}if(3!==t.tag)throw Error(o(188));return t.stateNode.current===t?e:n}(e)))return null;for(var n=e;;){if(5===n.tag||6===n.tag)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===e)break;for(;!n.sibling;){if(!n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function Ze(e,n){for(var t=e.alternate;null!==n;){if(n===e||n===t)return!0;n=n.return}return!1}var en,nn,tn,rn,an=!1,ln=[],on=null,sn=null,cn=null,un=new Map,fn=new Map,An=[],dn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function vn(e,n,t,r,a){return{blockedOn:e,domEventName:n,eventSystemFlags:16|t,nativeEvent:a,targetContainers:[r]}}function mn(e,n){switch(e){case"focusin":case"focusout":on=null;break;case"dragenter":case"dragleave":sn=null;break;case"mouseover":case"mouseout":cn=null;break;case"pointerover":case"pointerout":un.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":fn.delete(n.pointerId)}}function pn(e,n,t,r,a,l){return null===e||e.nativeEvent!==l?(e=vn(n,t,r,a,l),null!==n&&null!==(n=Zr(n))&&nn(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==a&&-1===n.indexOf(a)&&n.push(a),e)}function hn(e){var n=Gr(e.target);if(null!==n){var t=Qe(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ke(t)))return e.blockedOn=n,void rn(e.lanePriority,(function(){l.unstable_runWithPriority(e.priority,(function(){tn(t)}))}))}else if(3===n&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function En(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Zn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=Zr(t))&&nn(n),e.blockedOn=t,!1;n.shift()}return!0}function yn(e,n,t){En(e)&&t.delete(n)}function wn(){for(an=!1;0<ln.length;){var e=ln[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&en(e);break}for(var n=e.targetContainers;0<n.length;){var t=Zn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t){e.blockedOn=t;break}n.shift()}null===e.blockedOn&&ln.shift()}null!==on&&En(on)&&(on=null),null!==sn&&En(sn)&&(sn=null),null!==cn&&En(cn)&&(cn=null),un.forEach(yn),fn.forEach(yn)}function bn(e,n){e.blockedOn===n&&(e.blockedOn=null,an||(an=!0,l.unstable_scheduleCallback(l.unstable_NormalPriority,wn)))}function gn(e){function n(n){return bn(n,e)}if(0<ln.length){bn(ln[0],e);for(var t=1;t<ln.length;t++){var r=ln[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==on&&bn(on,e),null!==sn&&bn(sn,e),null!==cn&&bn(cn,e),un.forEach(n),fn.forEach(n),t=0;t<An.length;t++)(r=An[t]).blockedOn===e&&(r.blockedOn=null);for(;0<An.length&&null===(t=An[0]).blockedOn;)hn(t),null===t.blockedOn&&An.shift()}function Cn(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var On={animationend:Cn("Animation","AnimationEnd"),animationiteration:Cn("Animation","AnimationIteration"),animationstart:Cn("Animation","AnimationStart"),transitionend:Cn("Transition","TransitionEnd")},Fn={},kn={};function xn(e){if(Fn[e])return Fn[e];if(!On[e])return e;var n,t=On[e];for(n in t)if(t.hasOwnProperty(n)&&n in kn)return Fn[e]=t[n];return e}f&&(kn=document.createElement("div").style,"AnimationEvent"in window||(delete On.animationend.animation,delete On.animationiteration.animation,delete On.animationstart.animation),"TransitionEvent"in window||delete On.transitionend.transition);var Dn=xn("animationend"),Yn=xn("animationiteration"),Sn=xn("animationstart"),Xn=xn("transitionend"),Nn=new Map,_n=new Map,In=["abort","abort",Dn,"animationEnd",Yn,"animationIteration",Sn,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Xn,"transitionEnd","waiting","waiting"];function Bn(e,n){for(var t=0;t<e.length;t+=2){var r=e[t],a=e[t+1];a="on"+(a[0].toUpperCase()+a.slice(1)),_n.set(r,n),Nn.set(r,a),c(a,[r])}}(0,l.unstable_now)();var jn=8;function Pn(e){if(0!=(1&e))return jn=15,1;if(0!=(2&e))return jn=14,2;if(0!=(4&e))return jn=13,4;var n=24&e;return 0!==n?(jn=12,n):0!=(32&e)?(jn=11,32):0!=(n=192&e)?(jn=10,n):0!=(256&e)?(jn=9,256):0!=(n=3584&e)?(jn=8,n):0!=(4096&e)?(jn=7,4096):0!=(n=4186112&e)?(jn=6,n):0!=(n=62914560&e)?(jn=5,n):67108864&e?(jn=4,67108864):0!=(134217728&e)?(jn=3,134217728):0!=(n=805306368&e)?(jn=2,n):0!=(1073741824&e)?(jn=1,1073741824):(jn=8,e)}function Tn(e,n){var t=e.pendingLanes;if(0===t)return jn=0;var r=0,a=0,l=e.expiredLanes,o=e.suspendedLanes,s=e.pingedLanes;if(0!==l)r=l,a=jn=15;else if(0!=(l=134217727&t)){var i=l&~o;0!==i?(r=Pn(i),a=jn):0!=(s&=l)&&(r=Pn(s),a=jn)}else 0!=(l=t&~o)?(r=Pn(l),a=jn):0!==s&&(r=Pn(s),a=jn);if(0===r)return 0;if(r=t&((0>(r=31-Wn(r))?0:1<<r)<<1)-1,0!==n&&n!==r&&0==(n&o)){if(Pn(n),a<=jn)return n;jn=a}if(0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)a=1<<(t=31-Wn(n)),r|=e[t],n&=~a;return r}function Ln(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Rn(e,n){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=zn(24&~n))?Rn(10,n):e;case 10:return 0===(e=zn(192&~n))?Rn(8,n):e;case 8:return 0===(e=zn(3584&~n))&&0===(e=zn(4186112&~n))&&(e=512),e;case 2:return 0===(n=zn(805306368&~n))&&(n=268435456),n}throw Error(o(358,e))}function zn(e){return e&-e}function Mn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function Un(e,n,t){e.pendingLanes|=n;var r=n-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[n=31-Wn(n)]=t}var Wn=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vn(e)/qn|0)|0},Vn=Math.log,qn=Math.LN2,$n=l.unstable_UserBlockingPriority,Hn=l.unstable_runWithPriority,Qn=!0;function Kn(e,n,t,r){je||Ie();var a=Gn,l=je;je=!0;try{_e(a,e,n,t,r)}finally{(je=l)||Te()}}function Jn(e,n,t,r){Hn($n,Gn.bind(null,e,n,t,r))}function Gn(e,n,t,r){var a;if(Qn)if((a=0==(4&n))&&0<ln.length&&-1<dn.indexOf(e))e=vn(null,e,n,t,r),ln.push(e);else{var l=Zn(e,n,t,r);if(null===l)a&&mn(e,r);else{if(a){if(-1<dn.indexOf(e))return e=vn(l,e,n,t,r),void ln.push(e);if(function(e,n,t,r,a){switch(n){case"focusin":return on=pn(on,e,n,t,r,a),!0;case"dragenter":return sn=pn(sn,e,n,t,r,a),!0;case"mouseover":return cn=pn(cn,e,n,t,r,a),!0;case"pointerover":var l=a.pointerId;return un.set(l,pn(un.get(l)||null,e,n,t,r,a)),!0;case"gotpointercapture":return l=a.pointerId,fn.set(l,pn(fn.get(l)||null,e,n,t,r,a)),!0}return!1}(l,e,n,t,r))return;mn(e,r)}Xr(e,n,r,null,t)}}}function Zn(e,n,t,r){var a=Fe(r);if(null!==(a=Gr(a))){var l=Qe(a);if(null===l)a=null;else{var o=l.tag;if(13===o){if(null!==(a=Ke(l)))return a;a=null}else if(3===o){if(l.stateNode.hydrate)return 3===l.tag?l.stateNode.containerInfo:null;a=null}else l!==a&&(a=null)}}return Xr(e,n,r,a,t),null}var et=null,nt=null,tt=null;function rt(){if(tt)return tt;var e,n,t=nt,r=t.length,a="value"in et?et.value:et.textContent,l=a.length;for(e=0;e<r&&t[e]===a[e];e++);var o=r-e;for(n=1;n<=o&&t[r-n]===a[l-n];n++);return tt=a.slice(e,1<n?1-n:void 0)}function at(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function lt(){return!0}function ot(){return!1}function st(e){function n(n,t,r,a,l){for(var o in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(o)&&(n=e[o],this[o]=n?n(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?lt:ot,this.isPropagationStopped=ot,this}return a(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=lt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=lt)},persist:function(){},isPersistent:lt}),n}var it,ct,ut,ft={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},At=st(ft),dt=a({},ft,{view:0,detail:0}),vt=st(dt),mt=a({},dt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ut&&(ut&&"mousemove"===e.type?(it=e.screenX-ut.screenX,ct=e.screenY-ut.screenY):ct=it=0,ut=e),it)},movementY:function(e){return"movementY"in e?e.movementY:ct}}),pt=st(mt),ht=st(a({},mt,{dataTransfer:0})),Et=st(a({},dt,{relatedTarget:0})),yt=st(a({},ft,{animationName:0,elapsedTime:0,pseudoElement:0})),wt=st(a({},ft,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),bt=st(a({},ft,{data:0})),gt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ct={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ot={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ft(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Ot[e])&&!!n[e]}function kt(){return Ft}var xt=st(a({},dt,{key:function(e){if(e.key){var n=gt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=at(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Ct[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kt,charCode:function(e){return"keypress"===e.type?at(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?at(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Dt=st(a({},mt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Yt=st(a({},dt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kt})),St=st(a({},ft,{propertyName:0,elapsedTime:0,pseudoElement:0})),Xt=st(a({},mt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Nt=[9,13,27,32],_t=f&&"CompositionEvent"in window,It=null;f&&"documentMode"in document&&(It=document.documentMode);var Bt=f&&"TextEvent"in window&&!It,jt=f&&(!_t||It&&8<It&&11>=It),Pt=String.fromCharCode(32),Tt=!1;function Lt(e,n){switch(e){case"keyup":return-1!==Nt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Rt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var zt=!1,Mt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ut(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Mt[e.type]:"textarea"===n}function Wt(e,n,t,r){Se(r),0<(n=_r(n,"onChange")).length&&(t=new At("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Vt=null,qt=null;function $t(e){Fr(e,0)}function Ht(e){if(J(ea(e)))return e}function Qt(e,n){if("change"===e)return n}var Kt=!1;if(f){var Jt;if(f){var Gt="oninput"in document;if(!Gt){var Zt=document.createElement("div");Zt.setAttribute("oninput","return;"),Gt="function"==typeof Zt.oninput}Jt=Gt}else Jt=!1;Kt=Jt&&(!document.documentMode||9<document.documentMode)}function er(){Vt&&(Vt.detachEvent("onpropertychange",nr),qt=Vt=null)}function nr(e){if("value"===e.propertyName&&Ht(qt)){var n=[];if(Wt(n,qt,e,Fe(e)),e=$t,je)e(n);else{je=!0;try{Ne(e,n)}finally{je=!1,Te()}}}}function tr(e,n,t){"focusin"===e?(er(),qt=t,(Vt=n).attachEvent("onpropertychange",nr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Ht(qt)}function ar(e,n){if("click"===e)return Ht(n)}function lr(e,n){if("input"===e||"change"===e)return Ht(n)}var or="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},sr=Object.prototype.hasOwnProperty;function ir(e,n){if(or(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!sr.call(n,t[r])||!or(e[t[r]],n[t[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ur(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?fr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function Ar(){for(var e=window,n=G();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=G((e=n.contentWindow).document)}return n}function dr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var vr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,pr=null,hr=null,Er=!1;function yr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;Er||null==mr||mr!==G(r)||(r="selectionStart"in(r=mr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},hr&&ir(hr,r)||(hr=r,0<(r=_r(pr,"onSelect")).length&&(n=new At("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=mr)))}Bn("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bn("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bn(In,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),br=0;br<wr.length;br++)_n.set(wr[br],0);u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var gr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Cr=new Set("cancel close invalid load scroll toggle".split(" ").concat(gr));function Or(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,a,l,s,i,c){if(He.apply(this,arguments),Ue){if(!Ue)throw Error(o(198));var u=We;Ue=!1,We=null,Ve||(Ve=!0,qe=u)}}(r,n,void 0,e),e.currentTarget=null}function Fr(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],a=r.event;r=r.listeners;e:{var l=void 0;if(n)for(var o=r.length-1;0<=o;o--){var s=r[o],i=s.instance,c=s.currentTarget;if(s=s.listener,i!==l&&a.isPropagationStopped())break e;Or(a,s,c),l=i}else for(o=0;o<r.length;o++){if(i=(s=r[o]).instance,c=s.currentTarget,s=s.listener,i!==l&&a.isPropagationStopped())break e;Or(a,s,c),l=i}}}if(Ve)throw e=qe,Ve=!1,qe=null,e}function kr(e,n){var t=ta(n),r=e+"__bubble";t.has(r)||(Sr(n,e,2,!1),t.add(r))}var xr="_reactListening"+Math.random().toString(36).slice(2);function Dr(e){e[xr]||(e[xr]=!0,s.forEach((function(n){Cr.has(n)||Yr(n,!1,e,null),Yr(n,!0,e,null)})))}function Yr(e,n,t,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,l=t;if("selectionchange"===e&&9!==t.nodeType&&(l=t.ownerDocument),null!==r&&!n&&Cr.has(e)){if("scroll"!==e)return;a|=2,l=r}var o=ta(l),s=e+"__"+(n?"capture":"bubble");o.has(s)||(n&&(a|=4),Sr(l,e,a,n),o.add(s))}function Sr(e,n,t,r){var a=_n.get(n);switch(void 0===a?2:a){case 0:a=Kn;break;case 1:a=Jn;break;default:a=Gn}t=a.bind(null,n,t,e),a=void 0,!Re||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(a=!0),r?void 0!==a?e.addEventListener(n,t,{capture:!0,passive:a}):e.addEventListener(n,t,!0):void 0!==a?e.addEventListener(n,t,{passive:a}):e.addEventListener(n,t,!1)}function Xr(e,n,t,r,a){var l=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var i=o.tag;if((3===i||4===i)&&((i=o.stateNode.containerInfo)===a||8===i.nodeType&&i.parentNode===a))return;o=o.return}for(;null!==s;){if(null===(o=Gr(s)))return;if(5===(i=o.tag)||6===i){r=l=o;continue e}s=s.parentNode}}r=r.return}!function(e,n,t){if(Pe)return e();Pe=!0;try{Be(e,n,t)}finally{Pe=!1,Te()}}((function(){var r=l,a=Fe(t),o=[];e:{var s=Nn.get(e);if(void 0!==s){var i=At,c=e;switch(e){case"keypress":if(0===at(t))break e;case"keydown":case"keyup":i=xt;break;case"focusin":c="focus",i=Et;break;case"focusout":c="blur",i=Et;break;case"beforeblur":case"afterblur":i=Et;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":i=pt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":i=ht;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":i=Yt;break;case Dn:case Yn:case Sn:i=yt;break;case Xn:i=St;break;case"scroll":i=vt;break;case"wheel":i=Xt;break;case"copy":case"cut":case"paste":i=wt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":i=Dt}var u=0!=(4&n),f=!u&&"scroll"===e,A=u?null!==s?s+"Capture":null:s;u=[];for(var d,v=r;null!==v;){var m=(d=v).stateNode;if(5===d.tag&&null!==m&&(d=m,null!==A&&null!=(m=Le(v,A))&&u.push(Nr(v,m,d))),f)break;v=v.return}0<u.length&&(s=new i(s,c,null,t,a),o.push({event:s,listeners:u}))}}if(0==(7&n)){if(i="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||0!=(16&n)||!(c=t.relatedTarget||t.fromElement)||!Gr(c)&&!c[Kr])&&(i||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,i?(i=r,null!==(c=(c=t.relatedTarget||t.toElement)?Gr(c):null)&&(c!==(f=Qe(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(i=null,c=r),i!==c)){if(u=pt,m="onMouseLeave",A="onMouseEnter",v="mouse","pointerout"!==e&&"pointerover"!==e||(u=Dt,m="onPointerLeave",A="onPointerEnter",v="pointer"),f=null==i?s:ea(i),d=null==c?s:ea(c),(s=new u(m,v+"leave",i,t,a)).target=f,s.relatedTarget=d,m=null,Gr(a)===r&&((u=new u(A,v+"enter",c,t,a)).target=d,u.relatedTarget=f,m=u),f=m,i&&c)e:{for(A=c,v=0,d=u=i;d;d=Ir(d))v++;for(d=0,m=A;m;m=Ir(m))d++;for(;0<v-d;)u=Ir(u),v--;for(;0<d-v;)A=Ir(A),d--;for(;v--;){if(u===A||null!==A&&u===A.alternate)break e;u=Ir(u),A=Ir(A)}u=null}else u=null;null!==i&&Br(o,s,i,u,!1),null!==c&&null!==f&&Br(o,f,c,u,!0)}if("select"===(i=(s=r?ea(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===i&&"file"===s.type)var p=Qt;else if(Ut(s))if(Kt)p=lr;else{p=rr;var h=tr}else(i=s.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(p=ar);switch(p&&(p=p(e,r))?Wt(o,p,t,a):(h&&h(e,s,r),"focusout"===e&&(h=s._wrapperState)&&h.controlled&&"number"===s.type&&ae(s,"number",s.value)),h=r?ea(r):window,e){case"focusin":(Ut(h)||"true"===h.contentEditable)&&(mr=h,pr=r,hr=null);break;case"focusout":hr=pr=mr=null;break;case"mousedown":Er=!0;break;case"contextmenu":case"mouseup":case"dragend":Er=!1,yr(o,t,a);break;case"selectionchange":if(vr)break;case"keydown":case"keyup":yr(o,t,a)}var E;if(_t)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else zt?Lt(e,t)&&(y="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(y="onCompositionStart");y&&(jt&&"ko"!==t.locale&&(zt||"onCompositionStart"!==y?"onCompositionEnd"===y&&zt&&(E=rt()):(nt="value"in(et=a)?et.value:et.textContent,zt=!0)),0<(h=_r(r,y)).length&&(y=new bt(y,e,null,t,a),o.push({event:y,listeners:h}),(E||null!==(E=Rt(t)))&&(y.data=E))),(E=Bt?function(e,n){switch(e){case"compositionend":return Rt(n);case"keypress":return 32!==n.which?null:(Tt=!0,Pt);case"textInput":return(e=n.data)===Pt&&Tt?null:e;default:return null}}(e,t):function(e,n){if(zt)return"compositionend"===e||!_t&&Lt(e,n)?(e=rt(),tt=nt=et=null,zt=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return jt&&"ko"!==n.locale?null:n.data;default:return null}}(e,t))&&0<(r=_r(r,"onBeforeInput")).length&&(a=new bt("onBeforeInput","beforeinput",null,t,a),o.push({event:a,listeners:r}),a.data=E)}Fr(o,n)}))}function Nr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function _r(e,n){for(var t=n+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=Le(e,t))&&r.unshift(Nr(e,l,a)),null!=(l=Le(e,n))&&r.push(Nr(e,l,a))),e=e.return}return r}function Ir(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Br(e,n,t,r,a){for(var l=n._reactName,o=[];null!==t&&t!==r;){var s=t,i=s.alternate,c=s.stateNode;if(null!==i&&i===r)break;5===s.tag&&null!==c&&(s=c,a?null!=(i=Le(t,l))&&o.unshift(Nr(t,i,s)):a||null!=(i=Le(t,l))&&o.push(Nr(t,i,s))),t=t.return}0!==o.length&&e.push({event:n,listeners:o})}function jr(){}var Pr=null,Tr=null;function Lr(e,n){switch(e){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function Rr(e,n){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var zr="function"==typeof setTimeout?setTimeout:void 0,Mr="function"==typeof clearTimeout?clearTimeout:void 0;function Ur(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Wr(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break}return e}function Vr(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var qr=0,$r=Math.random().toString(36).slice(2),Hr="__reactFiber$"+$r,Qr="__reactProps$"+$r,Kr="__reactContainer$"+$r,Jr="__reactEvents$"+$r;function Gr(e){var n=e[Hr];if(n)return n;for(var t=e.parentNode;t;){if(n=t[Kr]||t[Hr]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=Vr(e);null!==e;){if(t=e[Hr])return t;e=Vr(e)}return n}t=(e=t).parentNode}return null}function Zr(e){return!(e=e[Hr]||e[Kr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function na(e){return e[Qr]||null}function ta(e){var n=e[Jr];return void 0===n&&(n=e[Jr]=new Set),n}var ra=[],aa=-1;function la(e){return{current:e}}function oa(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function sa(e,n){aa++,ra[aa]=e.current,e.current=n}var ia={},ca=la(ia),ua=la(!1),fa=ia;function Aa(e,n){var t=e.type.contextTypes;if(!t)return ia;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in t)l[a]=n[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=l),l}function da(e){return null!=e.childContextTypes}function va(){oa(ua),oa(ca)}function ma(e,n,t){if(ca.current!==ia)throw Error(o(168));sa(ca,n),sa(ua,t)}function pa(e,n,t){var r=e.stateNode;if(e=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var l in r=r.getChildContext())if(!(l in e))throw Error(o(108,$(n)||"Unknown",l));return a({},t,r)}function ha(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ia,fa=ca.current,sa(ca,e),sa(ua,ua.current),!0}function Ea(e,n,t){var r=e.stateNode;if(!r)throw Error(o(169));t?(e=pa(e,n,fa),r.__reactInternalMemoizedMergedChildContext=e,oa(ua),oa(ca),sa(ca,e)):oa(ua),sa(ua,t)}var ya=null,wa=null,ba=l.unstable_runWithPriority,ga=l.unstable_scheduleCallback,Ca=l.unstable_cancelCallback,Oa=l.unstable_shouldYield,Fa=l.unstable_requestPaint,ka=l.unstable_now,xa=l.unstable_getCurrentPriorityLevel,Da=l.unstable_ImmediatePriority,Ya=l.unstable_UserBlockingPriority,Sa=l.unstable_NormalPriority,Xa=l.unstable_LowPriority,Na=l.unstable_IdlePriority,_a={},Ia=void 0!==Fa?Fa:function(){},Ba=null,ja=null,Pa=!1,Ta=ka(),La=1e4>Ta?ka:function(){return ka()-Ta};function Ra(){switch(xa()){case Da:return 99;case Ya:return 98;case Sa:return 97;case Xa:return 96;case Na:return 95;default:throw Error(o(332))}}function za(e){switch(e){case 99:return Da;case 98:return Ya;case 97:return Sa;case 96:return Xa;case 95:return Na;default:throw Error(o(332))}}function Ma(e,n){return e=za(e),ba(e,n)}function Ua(e,n,t){return e=za(e),ga(e,n,t)}function Wa(){if(null!==ja){var e=ja;ja=null,Ca(e)}Va()}function Va(){if(!Pa&&null!==Ba){Pa=!0;var e=0;try{var n=Ba;Ma(99,(function(){for(;e<n.length;e++){var t=n[e];do{t=t(!0)}while(null!==t)}})),Ba=null}catch(n){throw null!==Ba&&(Ba=Ba.slice(e+1)),ga(Da,Wa),n}finally{Pa=!1}}}var qa=b.ReactCurrentBatchConfig;function $a(e,n){if(e&&e.defaultProps){for(var t in n=a({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var Ha=la(null),Qa=null,Ka=null,Ja=null;function Ga(){Ja=Ka=Qa=null}function Za(e){var n=Ha.current;oa(Ha),e.type._context._currentValue=n}function el(e,n){for(;null!==e;){var t=e.alternate;if((e.childLanes&n)===n){if(null===t||(t.childLanes&n)===n)break;t.childLanes|=n}else e.childLanes|=n,null!==t&&(t.childLanes|=n);e=e.return}}function nl(e,n){Qa=e,Ja=Ka=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(_o=!0),e.firstContext=null)}function tl(e,n){if(Ja!==e&&!1!==n&&0!==n)if("number"==typeof n&&1073741823!==n||(Ja=e,n=1073741823),n={context:e,observedBits:n,next:null},null===Ka){if(null===Qa)throw Error(o(308));Ka=n,Qa.dependencies={lanes:0,firstContext:n,responders:null}}else Ka=Ka.next=n;return e._currentValue}var rl=!1;function al(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ll(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ol(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function sl(e,n){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}}function il(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,l=null;if(null!==(t=t.firstBaseUpdate)){do{var o={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===l?a=l=o:l=l.next=o,t=t.next}while(null!==t);null===l?a=l=n:l=l.next=n}else a=l=n;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function cl(e,n,t,r){var l=e.updateQueue;rl=!1;var o=l.firstBaseUpdate,s=l.lastBaseUpdate,i=l.shared.pending;if(null!==i){l.shared.pending=null;var c=i,u=c.next;c.next=null,null===s?o=u:s.next=u,s=c;var f=e.alternate;if(null!==f){var A=(f=f.updateQueue).lastBaseUpdate;A!==s&&(null===A?f.firstBaseUpdate=u:A.next=u,f.lastBaseUpdate=c)}}if(null!==o){for(A=l.baseState,s=0,f=u=c=null;;){i=o.lane;var d=o.eventTime;if((r&i)===i){null!==f&&(f=f.next={eventTime:d,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var v=e,m=o;switch(i=n,d=t,m.tag){case 1:if("function"==typeof(v=m.payload)){A=v.call(d,A,i);break e}A=v;break e;case 3:v.flags=-4097&v.flags|64;case 0:if(null==(i="function"==typeof(v=m.payload)?v.call(d,A,i):v))break e;A=a({},A,i);break e;case 2:rl=!0}}null!==o.callback&&(e.flags|=32,null===(i=l.effects)?l.effects=[o]:i.push(o))}else d={eventTime:d,lane:i,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===f?(u=f=d,c=A):f=f.next=d,s|=i;if(null===(o=o.next)){if(null===(i=l.shared.pending))break;o=i.next,i.next=null,l.lastBaseUpdate=i,l.shared.pending=null}}null===f&&(c=A),l.baseState=c,l.firstBaseUpdate=u,l.lastBaseUpdate=f,Bs|=s,e.lanes=s,e.memoizedState=A}}function ul(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var fl=(new r.Component).refs;function Al(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:a({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var dl={isMounted:function(e){return!!(e=e._reactInternals)&&Qe(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=oi(),a=si(e),l=ol(r,a);l.payload=n,null!=t&&(l.callback=t),sl(e,l),ii(e,a,r)},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=oi(),a=si(e),l=ol(r,a);l.tag=1,l.payload=n,null!=t&&(l.callback=t),sl(e,l),ii(e,a,r)},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=oi(),r=si(e),a=ol(t,r);a.tag=2,null!=n&&(a.callback=n),sl(e,a),ii(e,r,t)}};function vl(e,n,t,r,a,l,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,o):!(n.prototype&&n.prototype.isPureReactComponent&&ir(t,r)&&ir(a,l))}function ml(e,n,t){var r=!1,a=ia,l=n.contextType;return"object"==typeof l&&null!==l?l=tl(l):(a=da(n)?fa:ca.current,l=(r=null!=(r=n.contextTypes))?Aa(e,a):ia),n=new n(t,l),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=dl,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),n}function pl(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&dl.enqueueReplaceState(n,n.state,null)}function hl(e,n,t,r){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs=fl,al(e);var l=n.contextType;"object"==typeof l&&null!==l?a.context=tl(l):(l=da(n)?fa:ca.current,a.context=Aa(e,l)),cl(e,t,a,r),a.state=e.memoizedState,"function"==typeof(l=n.getDerivedStateFromProps)&&(Al(e,n,l,t),a.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(n=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),n!==a.state&&dl.enqueueReplaceState(a,a.state,null),cl(e,t,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var El=Array.isArray;function yl(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(o(309));var r=t.stateNode}if(!r)throw Error(o(147,e));var a=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===a?n.ref:((n=function(e){var n=r.refs;n===fl&&(n=r.refs={}),null===e?delete n[a]:n[a]=e})._stringRef=a,n)}if("string"!=typeof e)throw Error(o(284));if(!t._owner)throw Error(o(290,e))}return e}function wl(e,n){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(n)?"object with keys {"+Object.keys(n).join(", ")+"}":n))}function bl(e){function n(n,t){if(e){var r=n.lastEffect;null!==r?(r.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t,t.nextEffect=null,t.flags=8}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function a(e,n){return(e=Ri(e,n)).index=0,e.sibling=null,e}function l(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags=2,t):r:(n.flags=2,t):t}function s(n){return e&&null===n.alternate&&(n.flags=2),n}function i(e,n,t,r){return null===n||6!==n.tag?((n=Wi(t,e.mode,r)).return=e,n):((n=a(n,t)).return=e,n)}function c(e,n,t,r){return null!==n&&n.elementType===t.type?((r=a(n,t.props)).ref=yl(e,n,t),r.return=e,r):((r=zi(t.type,t.key,t.props,null,e.mode,r)).ref=yl(e,n,t),r.return=e,r)}function u(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Vi(t,e.mode,r)).return=e,n):((n=a(n,t.children||[])).return=e,n)}function f(e,n,t,r,l){return null===n||7!==n.tag?((n=Mi(t,e.mode,r,l)).return=e,n):((n=a(n,t)).return=e,n)}function A(e,n,t){if("string"==typeof n||"number"==typeof n)return(n=Wi(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case g:return(t=zi(n.type,n.key,n.props,null,e.mode,t)).ref=yl(e,null,n),t.return=e,t;case C:return(n=Vi(n,e.mode,t)).return=e,n}if(El(n)||M(n))return(n=Mi(n,e.mode,t,null)).return=e,n;wl(e,n)}return null}function d(e,n,t,r){var a=null!==n?n.key:null;if("string"==typeof t||"number"==typeof t)return null!==a?null:i(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case g:return t.key===a?t.type===O?f(e,n,t.props.children,r,a):c(e,n,t,r):null;case C:return t.key===a?u(e,n,t,r):null}if(El(t)||M(t))return null!==a?null:f(e,n,t,r,null);wl(e,t)}return null}function v(e,n,t,r,a){if("string"==typeof r||"number"==typeof r)return i(n,e=e.get(t)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case g:return e=e.get(null===r.key?t:r.key)||null,r.type===O?f(n,e,r.props.children,a,r.key):c(n,e,r,a);case C:return u(n,e=e.get(null===r.key?t:r.key)||null,r,a)}if(El(r)||M(r))return f(n,e=e.get(t)||null,r,a,null);wl(n,r)}return null}function m(a,o,s,i){for(var c=null,u=null,f=o,m=o=0,p=null;null!==f&&m<s.length;m++){f.index>m?(p=f,f=null):p=f.sibling;var h=d(a,f,s[m],i);if(null===h){null===f&&(f=p);break}e&&f&&null===h.alternate&&n(a,f),o=l(h,o,m),null===u?c=h:u.sibling=h,u=h,f=p}if(m===s.length)return t(a,f),c;if(null===f){for(;m<s.length;m++)null!==(f=A(a,s[m],i))&&(o=l(f,o,m),null===u?c=f:u.sibling=f,u=f);return c}for(f=r(a,f);m<s.length;m++)null!==(p=v(f,a,m,s[m],i))&&(e&&null!==p.alternate&&f.delete(null===p.key?m:p.key),o=l(p,o,m),null===u?c=p:u.sibling=p,u=p);return e&&f.forEach((function(e){return n(a,e)})),c}function p(a,s,i,c){var u=M(i);if("function"!=typeof u)throw Error(o(150));if(null==(i=u.call(i)))throw Error(o(151));for(var f=u=null,m=s,p=s=0,h=null,E=i.next();null!==m&&!E.done;p++,E=i.next()){m.index>p?(h=m,m=null):h=m.sibling;var y=d(a,m,E.value,c);if(null===y){null===m&&(m=h);break}e&&m&&null===y.alternate&&n(a,m),s=l(y,s,p),null===f?u=y:f.sibling=y,f=y,m=h}if(E.done)return t(a,m),u;if(null===m){for(;!E.done;p++,E=i.next())null!==(E=A(a,E.value,c))&&(s=l(E,s,p),null===f?u=E:f.sibling=E,f=E);return u}for(m=r(a,m);!E.done;p++,E=i.next())null!==(E=v(m,a,p,E.value,c))&&(e&&null!==E.alternate&&m.delete(null===E.key?p:E.key),s=l(E,s,p),null===f?u=E:f.sibling=E,f=E);return e&&m.forEach((function(e){return n(a,e)})),u}return function(e,r,l,i){var c="object"==typeof l&&null!==l&&l.type===O&&null===l.key;c&&(l=l.props.children);var u="object"==typeof l&&null!==l;if(u)switch(l.$$typeof){case g:e:{for(u=l.key,c=r;null!==c;){if(c.key===u){switch(c.tag){case 7:if(l.type===O){t(e,c.sibling),(r=a(c,l.props.children)).return=e,e=r;break e}break;default:if(c.elementType===l.type){t(e,c.sibling),(r=a(c,l.props)).ref=yl(e,c,l),r.return=e,e=r;break e}}t(e,c);break}n(e,c),c=c.sibling}l.type===O?((r=Mi(l.props.children,e.mode,i,l.key)).return=e,e=r):((i=zi(l.type,l.key,l.props,null,e.mode,i)).ref=yl(e,r,l),i.return=e,e=i)}return s(e);case C:e:{for(c=l.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===l.containerInfo&&r.stateNode.implementation===l.implementation){t(e,r.sibling),(r=a(r,l.children||[])).return=e,e=r;break e}t(e,r);break}n(e,r),r=r.sibling}(r=Vi(l,e.mode,i)).return=e,e=r}return s(e)}if("string"==typeof l||"number"==typeof l)return l=""+l,null!==r&&6===r.tag?(t(e,r.sibling),(r=a(r,l)).return=e,e=r):(t(e,r),(r=Wi(l,e.mode,i)).return=e,e=r),s(e);if(El(l))return m(e,r,l,i);if(M(l))return p(e,r,l,i);if(u&&wl(e,l),void 0===l&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(o(152,$(e.type)||"Component"))}return t(e,r)}}var gl=bl(!0),Cl=bl(!1),Ol={},Fl=la(Ol),kl=la(Ol),xl=la(Ol);function Dl(e){if(e===Ol)throw Error(o(174));return e}function Yl(e,n){switch(sa(xl,n),sa(kl,e),sa(Fl,Ol),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:de(null,"");break;default:n=de(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}oa(Fl),sa(Fl,n)}function Sl(){oa(Fl),oa(kl),oa(xl)}function Xl(e){Dl(xl.current);var n=Dl(Fl.current),t=de(n,e.type);n!==t&&(sa(kl,e),sa(Fl,t))}function Nl(e){kl.current===e&&(oa(Fl),oa(kl))}var _l=la(0);function Il(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(64&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var Bl=null,jl=null,Pl=!1;function Tl(e,n){var t=Ti(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=n,t.return=e,t.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function Ll(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,!0);case 13:default:return!1}}function Rl(e){if(Pl){var n=jl;if(n){var t=n;if(!Ll(e,n)){if(!(n=Wr(t.nextSibling))||!Ll(e,n))return e.flags=-1025&e.flags|2,Pl=!1,void(Bl=e);Tl(Bl,t)}Bl=e,jl=Wr(n.firstChild)}else e.flags=-1025&e.flags|2,Pl=!1,Bl=e}}function zl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Bl=e}function Ml(e){if(e!==Bl)return!1;if(!Pl)return zl(e),Pl=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!Rr(n,e.memoizedProps))for(n=jl;n;)Tl(e,n),n=Wr(n.nextSibling);if(zl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){jl=Wr(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}jl=null}}else jl=Bl?Wr(e.stateNode.nextSibling):null;return!0}function Ul(){jl=Bl=null,Pl=!1}var Wl=[];function Vl(){for(var e=0;e<Wl.length;e++)Wl[e]._workInProgressVersionPrimary=null;Wl.length=0}var ql=b.ReactCurrentDispatcher,$l=b.ReactCurrentBatchConfig,Hl=0,Ql=null,Kl=null,Jl=null,Gl=!1,Zl=!1;function eo(){throw Error(o(321))}function no(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!or(e[t],n[t]))return!1;return!0}function to(e,n,t,r,a,l){if(Hl=l,Ql=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,ql.current=null===e||null===e.memoizedState?Yo:So,e=t(r,a),Zl){l=0;do{if(Zl=!1,!(25>l))throw Error(o(301));l+=1,Jl=Kl=null,n.updateQueue=null,ql.current=Xo,e=t(r,a)}while(Zl)}if(ql.current=Do,n=null!==Kl&&null!==Kl.next,Hl=0,Jl=Kl=Ql=null,Gl=!1,n)throw Error(o(300));return e}function ro(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Jl?Ql.memoizedState=Jl=e:Jl=Jl.next=e,Jl}function ao(){if(null===Kl){var e=Ql.alternate;e=null!==e?e.memoizedState:null}else e=Kl.next;var n=null===Jl?Ql.memoizedState:Jl.next;if(null!==n)Jl=n,Kl=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Kl=e).memoizedState,baseState:Kl.baseState,baseQueue:Kl.baseQueue,queue:Kl.queue,next:null},null===Jl?Ql.memoizedState=Jl=e:Jl=Jl.next=e}return Jl}function lo(e,n){return"function"==typeof n?n(e):n}function oo(e){var n=ao(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=Kl,a=r.baseQueue,l=t.pending;if(null!==l){if(null!==a){var s=a.next;a.next=l.next,l.next=s}r.baseQueue=a=l,t.pending=null}if(null!==a){a=a.next,r=r.baseState;var i=s=l=null,c=a;do{var u=c.lane;if((Hl&u)===u)null!==i&&(i=i.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:u,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===i?(s=i=f,l=r):i=i.next=f,Ql.lanes|=u,Bs|=u}c=c.next}while(null!==c&&c!==a);null===i?l=r:i.next=s,or(r,n.memoizedState)||(_o=!0),n.memoizedState=r,n.baseState=l,n.baseQueue=i,t.lastRenderedState=r}return[n.memoizedState,t.dispatch]}function so(e){var n=ao(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=t.dispatch,a=t.pending,l=n.memoizedState;if(null!==a){t.pending=null;var s=a=a.next;do{l=e(l,s.action),s=s.next}while(s!==a);or(l,n.memoizedState)||(_o=!0),n.memoizedState=l,null===n.baseQueue&&(n.baseState=l),t.lastRenderedState=l}return[l,r]}function io(e,n,t){var r=n._getVersion;r=r(n._source);var a=n._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Hl&e)===e)&&(n._workInProgressVersionPrimary=r,Wl.push(n))),e)return t(n._source);throw Wl.push(n),Error(o(350))}function co(e,n,t,r){var a=xs;if(null===a)throw Error(o(349));var l=n._getVersion,s=l(n._source),i=ql.current,c=i.useState((function(){return io(a,n,t)})),u=c[1],f=c[0];c=Jl;var A=e.memoizedState,d=A.refs,v=d.getSnapshot,m=A.source;A=A.subscribe;var p=Ql;return e.memoizedState={refs:d,source:n,subscribe:r},i.useEffect((function(){d.getSnapshot=t,d.setSnapshot=u;var e=l(n._source);if(!or(s,e)){e=t(n._source),or(f,e)||(u(e),e=si(p),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,o=e;0<o;){var i=31-Wn(o),c=1<<i;r[i]|=e,o&=~c}}}),[t,n,r]),i.useEffect((function(){return r(n._source,(function(){var e=d.getSnapshot,t=d.setSnapshot;try{t(e(n._source));var r=si(p);a.mutableReadLanes|=r&a.pendingLanes}catch(e){t((function(){throw e}))}}))}),[n,r]),or(v,t)&&or(m,n)&&or(A,r)||((e={pending:null,dispatch:null,lastRenderedReducer:lo,lastRenderedState:f}).dispatch=u=xo.bind(null,Ql,e),c.queue=e,c.baseQueue=null,f=io(a,n,t),c.memoizedState=c.baseState=f),f}function uo(e,n,t){return co(ao(),e,n,t)}function fo(e){var n=ro();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:lo,lastRenderedState:e}).dispatch=xo.bind(null,Ql,e),[n.memoizedState,e]}function Ao(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=Ql.updateQueue)?(n={lastEffect:null},Ql.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function vo(e){return e={current:e},ro().memoizedState=e}function mo(){return ao().memoizedState}function po(e,n,t,r){var a=ro();Ql.flags|=e,a.memoizedState=Ao(1|n,t,void 0,void 0===r?null:r)}function ho(e,n,t,r){var a=ao();r=void 0===r?null:r;var l=void 0;if(null!==Kl){var o=Kl.memoizedState;if(l=o.destroy,null!==r&&no(r,o.deps))return void Ao(n,t,l,r)}Ql.flags|=e,a.memoizedState=Ao(1|n,t,l,r)}function Eo(e,n){return po(516,4,e,n)}function yo(e,n){return ho(516,4,e,n)}function wo(e,n){return ho(4,2,e,n)}function bo(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function go(e,n,t){return t=null!=t?t.concat([e]):null,ho(4,2,bo.bind(null,n,e),t)}function Co(){}function Oo(e,n){var t=ao();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&no(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Fo(e,n){var t=ao();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&no(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function ko(e,n){var t=Ra();Ma(98>t?98:t,(function(){e(!0)})),Ma(97<t?97:t,(function(){var t=$l.transition;$l.transition=1;try{e(!1),n()}finally{$l.transition=t}}))}function xo(e,n,t){var r=oi(),a=si(e),l={lane:a,action:t,eagerReducer:null,eagerState:null,next:null},o=n.pending;if(null===o?l.next=l:(l.next=o.next,o.next=l),n.pending=l,o=e.alternate,e===Ql||null!==o&&o===Ql)Zl=Gl=!0;else{if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=n.lastRenderedReducer))try{var s=n.lastRenderedState,i=o(s,t);if(l.eagerReducer=o,l.eagerState=i,or(i,s))return}catch(e){}ii(e,a,r)}}var Do={readContext:tl,useCallback:eo,useContext:eo,useEffect:eo,useImperativeHandle:eo,useLayoutEffect:eo,useMemo:eo,useReducer:eo,useRef:eo,useState:eo,useDebugValue:eo,useDeferredValue:eo,useTransition:eo,useMutableSource:eo,useOpaqueIdentifier:eo,unstable_isNewReconciler:!1},Yo={readContext:tl,useCallback:function(e,n){return ro().memoizedState=[e,void 0===n?null:n],e},useContext:tl,useEffect:Eo,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,po(4,2,bo.bind(null,n,e),t)},useLayoutEffect:function(e,n){return po(4,2,e,n)},useMemo:function(e,n){var t=ro();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=ro();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:n}).dispatch=xo.bind(null,Ql,e),[r.memoizedState,e]},useRef:vo,useState:fo,useDebugValue:Co,useDeferredValue:function(e){var n=fo(e),t=n[0],r=n[1];return Eo((function(){var n=$l.transition;$l.transition=1;try{r(e)}finally{$l.transition=n}}),[e]),t},useTransition:function(){var e=fo(!1),n=e[0];return vo(e=ko.bind(null,e[1])),[e,n]},useMutableSource:function(e,n,t){var r=ro();return r.memoizedState={refs:{getSnapshot:n,setSnapshot:null},source:e,subscribe:t},co(r,e,n,t)},useOpaqueIdentifier:function(){if(Pl){var e=!1,n=function(e){return{$$typeof:B,toString:e,valueOf:e}}((function(){throw e||(e=!0,t("r:"+(qr++).toString(36))),Error(o(355))})),t=fo(n)[1];return 0==(2&Ql.mode)&&(Ql.flags|=516,Ao(5,(function(){t("r:"+(qr++).toString(36))}),void 0,null)),n}return fo(n="r:"+(qr++).toString(36)),n},unstable_isNewReconciler:!1},So={readContext:tl,useCallback:Oo,useContext:tl,useEffect:yo,useImperativeHandle:go,useLayoutEffect:wo,useMemo:Fo,useReducer:oo,useRef:mo,useState:function(){return oo(lo)},useDebugValue:Co,useDeferredValue:function(e){var n=oo(lo),t=n[0],r=n[1];return yo((function(){var n=$l.transition;$l.transition=1;try{r(e)}finally{$l.transition=n}}),[e]),t},useTransition:function(){var e=oo(lo)[0];return[mo().current,e]},useMutableSource:uo,useOpaqueIdentifier:function(){return oo(lo)[0]},unstable_isNewReconciler:!1},Xo={readContext:tl,useCallback:Oo,useContext:tl,useEffect:yo,useImperativeHandle:go,useLayoutEffect:wo,useMemo:Fo,useReducer:so,useRef:mo,useState:function(){return so(lo)},useDebugValue:Co,useDeferredValue:function(e){var n=so(lo),t=n[0],r=n[1];return yo((function(){var n=$l.transition;$l.transition=1;try{r(e)}finally{$l.transition=n}}),[e]),t},useTransition:function(){var e=so(lo)[0];return[mo().current,e]},useMutableSource:uo,useOpaqueIdentifier:function(){return so(lo)[0]},unstable_isNewReconciler:!1},No=b.ReactCurrentOwner,_o=!1;function Io(e,n,t,r){n.child=null===e?Cl(n,null,t,r):gl(n,e.child,t,r)}function Bo(e,n,t,r,a){t=t.render;var l=n.ref;return nl(n,a),r=to(e,n,t,r,l,a),null===e||_o?(n.flags|=1,Io(e,n,r,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~a,Zo(e,n,a))}function jo(e,n,t,r,a,l){if(null===e){var o=t.type;return"function"!=typeof o||Li(o)||void 0!==o.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=zi(t.type,null,r,n,n.mode,l)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=o,Po(e,n,o,r,a,l))}return o=e.child,0==(a&l)&&(a=o.memoizedProps,(t=null!==(t=t.compare)?t:ir)(a,r)&&e.ref===n.ref)?Zo(e,n,l):(n.flags|=1,(e=Ri(o,r)).ref=n.ref,e.return=n,n.child=e)}function Po(e,n,t,r,a,l){if(null!==e&&ir(e.memoizedProps,r)&&e.ref===n.ref){if(_o=!1,0==(l&a))return n.lanes=e.lanes,Zo(e,n,l);0!=(16384&e.flags)&&(_o=!0)}return Ro(e,n,t,r,l)}function To(e,n,t){var r=n.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&n.mode))n.memoizedState={baseLanes:0},pi(0,t);else{if(0==(1073741824&t))return e=null!==l?l.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e},pi(0,e),null;n.memoizedState={baseLanes:0},pi(0,null!==l?l.baseLanes:t)}else null!==l?(r=l.baseLanes|t,n.memoizedState=null):r=t,pi(0,r);return Io(e,n,a,t),n.child}function Lo(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=128)}function Ro(e,n,t,r,a){var l=da(t)?fa:ca.current;return l=Aa(n,l),nl(n,a),t=to(e,n,t,r,l,a),null===e||_o?(n.flags|=1,Io(e,n,t,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~a,Zo(e,n,a))}function zo(e,n,t,r,a){if(da(t)){var l=!0;ha(n)}else l=!1;if(nl(n,a),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),ml(n,t,r),hl(n,t,r,a),r=!0;else if(null===e){var o=n.stateNode,s=n.memoizedProps;o.props=s;var i=o.context,c=t.contextType;c="object"==typeof c&&null!==c?tl(c):Aa(n,c=da(t)?fa:ca.current);var u=t.getDerivedStateFromProps,f="function"==typeof u||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(s!==r||i!==c)&&pl(n,o,r,c),rl=!1;var A=n.memoizedState;o.state=A,cl(n,r,o,a),i=n.memoizedState,s!==r||A!==i||ua.current||rl?("function"==typeof u&&(Al(n,t,u,r),i=n.memoizedState),(s=rl||vl(n,t,s,r,A,i,c))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(n.flags|=4)):("function"==typeof o.componentDidMount&&(n.flags|=4),n.memoizedProps=r,n.memoizedState=i),o.props=r,o.state=i,o.context=c,r=s):("function"==typeof o.componentDidMount&&(n.flags|=4),r=!1)}else{o=n.stateNode,ll(e,n),s=n.memoizedProps,c=n.type===n.elementType?s:$a(n.type,s),o.props=c,f=n.pendingProps,A=o.context,i="object"==typeof(i=t.contextType)&&null!==i?tl(i):Aa(n,i=da(t)?fa:ca.current);var d=t.getDerivedStateFromProps;(u="function"==typeof d||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(s!==f||A!==i)&&pl(n,o,r,i),rl=!1,A=n.memoizedState,o.state=A,cl(n,r,o,a);var v=n.memoizedState;s!==f||A!==v||ua.current||rl?("function"==typeof d&&(Al(n,t,d,r),v=n.memoizedState),(c=rl||vl(n,t,c,r,A,v,i))?(u||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,v,i),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,v,i)),"function"==typeof o.componentDidUpdate&&(n.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(n.flags|=256)):("function"!=typeof o.componentDidUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=256),n.memoizedProps=r,n.memoizedState=v),o.props=r,o.state=v,o.context=i,r=c):("function"!=typeof o.componentDidUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=256),r=!1)}return Mo(e,n,t,r,l,a)}function Mo(e,n,t,r,a,l){Lo(e,n);var o=0!=(64&n.flags);if(!r&&!o)return a&&Ea(n,t,!1),Zo(e,n,l);r=n.stateNode,No.current=n;var s=o&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&o?(n.child=gl(n,e.child,null,l),n.child=gl(n,null,s,l)):Io(e,n,s,l),n.memoizedState=r.state,a&&Ea(n,t,!0),n.child}function Uo(e){var n=e.stateNode;n.pendingContext?ma(0,n.pendingContext,n.pendingContext!==n.context):n.context&&ma(0,n.context,!1),Yl(e,n.containerInfo)}var Wo,Vo,qo,$o={dehydrated:null,retryLane:0};function Ho(e,n,t){var r,a=n.pendingProps,l=_l.current,o=!1;return(r=0!=(64&n.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&l)),r?(o=!0,n.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(l|=1),sa(_l,1&l),null===e?(void 0!==a.fallback&&Rl(n),e=a.children,l=a.fallback,o?(e=Qo(n,e,l,t),n.child.memoizedState={baseLanes:t},n.memoizedState=$o,e):"number"==typeof a.unstable_expectedLoadTime?(e=Qo(n,e,l,t),n.child.memoizedState={baseLanes:t},n.memoizedState=$o,n.lanes=33554432,e):((t=Ui({mode:"visible",children:e},n.mode,t,null)).return=n,n.child=t)):(e.memoizedState,o?(a=function(e,n,t,r,a){var l=n.mode,o=e.child;e=o.sibling;var s={mode:"hidden",children:t};return 0==(2&l)&&n.child!==o?((t=n.child).childLanes=0,t.pendingProps=s,null!==(o=t.lastEffect)?(n.firstEffect=t.firstEffect,n.lastEffect=o,o.nextEffect=null):n.firstEffect=n.lastEffect=null):t=Ri(o,s),null!==e?r=Ri(e,r):(r=Mi(r,l,a,null)).flags|=2,r.return=n,t.return=n,t.sibling=r,n.child=t,r}(e,n,a.children,a.fallback,t),o=n.child,l=e.child.memoizedState,o.memoizedState=null===l?{baseLanes:t}:{baseLanes:l.baseLanes|t},o.childLanes=e.childLanes&~t,n.memoizedState=$o,a):(t=function(e,n,t,r){var a=e.child;return e=a.sibling,t=Ri(a,{mode:"visible",children:t}),0==(2&n.mode)&&(t.lanes=r),t.return=n,t.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,n.firstEffect=n.lastEffect=e),n.child=t}(e,n,a.children,t),n.memoizedState=null,t))}function Qo(e,n,t,r){var a=e.mode,l=e.child;return n={mode:"hidden",children:n},0==(2&a)&&null!==l?(l.childLanes=0,l.pendingProps=n):l=Ui(n,a,0,null),t=Mi(t,a,r,null),l.return=e,t.return=e,l.sibling=t,e.child=l,t}function Ko(e,n){e.lanes|=n;var t=e.alternate;null!==t&&(t.lanes|=n),el(e.return,n)}function Jo(e,n,t,r,a,l){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a,lastEffect:l}:(o.isBackwards=n,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=t,o.tailMode=a,o.lastEffect=l)}function Go(e,n,t){var r=n.pendingProps,a=r.revealOrder,l=r.tail;if(Io(e,n,r.children,t),0!=(2&(r=_l.current)))r=1&r|2,n.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ko(e,t);else if(19===e.tag)Ko(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(sa(_l,r),0==(2&n.mode))n.memoizedState=null;else switch(a){case"forwards":for(t=n.child,a=null;null!==t;)null!==(e=t.alternate)&&null===Il(e)&&(a=t),t=t.sibling;null===(t=a)?(a=n.child,n.child=null):(a=t.sibling,t.sibling=null),Jo(n,!1,a,t,l,n.lastEffect);break;case"backwards":for(t=null,a=n.child,n.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Il(e)){n.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}Jo(n,!0,t,null,l,n.lastEffect);break;case"together":Jo(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function Zo(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Bs|=n.lanes,0!=(t&n.childLanes)){if(null!==e&&n.child!==e.child)throw Error(o(153));if(null!==n.child){for(t=Ri(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Ri(e,e.pendingProps)).return=n;t.sibling=null}return n.child}return null}function es(e,n){if(!Pl)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ns(e,n,t){var r=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return da(n.type)&&va(),null;case 3:return Sl(),oa(ua),oa(ca),Vl(),(r=n.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ml(n)?n.flags|=4:r.hydrate||(n.flags|=256)),null;case 5:Nl(n);var l=Dl(xl.current);if(t=n.type,null!==e&&null!=n.stateNode)Vo(e,n,t,r),e.ref!==n.ref&&(n.flags|=128);else{if(!r){if(null===n.stateNode)throw Error(o(166));return null}if(e=Dl(Fl.current),Ml(n)){r=n.stateNode,t=n.type;var s=n.memoizedProps;switch(r[Hr]=n,r[Qr]=s,t){case"dialog":kr("cancel",r),kr("close",r);break;case"iframe":case"object":case"embed":kr("load",r);break;case"video":case"audio":for(e=0;e<gr.length;e++)kr(gr[e],r);break;case"source":kr("error",r);break;case"img":case"image":case"link":kr("error",r),kr("load",r);break;case"details":kr("toggle",r);break;case"input":ee(r,s),kr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!s.multiple},kr("invalid",r);break;case"textarea":ie(r,s),kr("invalid",r)}for(var c in Ce(t,s),e=null,s)s.hasOwnProperty(c)&&(l=s[c],"children"===c?"string"==typeof l?r.textContent!==l&&(e=["children",l]):"number"==typeof l&&r.textContent!==""+l&&(e=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&kr("scroll",r));switch(t){case"input":K(r),re(r,s,!0);break;case"textarea":K(r),ue(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=jr)}r=e,n.updateQueue=r,null!==r&&(n.flags|=4)}else{switch(c=9===l.nodeType?l:l.ownerDocument,e===fe&&(e=Ae(t)),e===fe?"script"===t?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(t,{is:r.is}):(e=c.createElement(t),"select"===t&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,t),e[Hr]=n,e[Qr]=r,Wo(e,n),n.stateNode=e,c=Oe(t,r),t){case"dialog":kr("cancel",e),kr("close",e),l=r;break;case"iframe":case"object":case"embed":kr("load",e),l=r;break;case"video":case"audio":for(l=0;l<gr.length;l++)kr(gr[l],e);l=r;break;case"source":kr("error",e),l=r;break;case"img":case"image":case"link":kr("error",e),kr("load",e),l=r;break;case"details":kr("toggle",e),l=r;break;case"input":ee(e,r),l=Z(e,r),kr("invalid",e);break;case"option":l=le(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=a({},r,{value:void 0}),kr("invalid",e);break;case"textarea":ie(e,r),l=se(e,r),kr("invalid",e);break;default:l=r}Ce(t,l);var u=l;for(s in u)if(u.hasOwnProperty(s)){var f=u[s];"style"===s?be(e,f):"dangerouslySetInnerHTML"===s?null!=(f=f?f.__html:void 0)&&pe(e,f):"children"===s?"string"==typeof f?("textarea"!==t||""!==f)&&he(e,f):"number"==typeof f&&he(e,""+f):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(i.hasOwnProperty(s)?null!=f&&"onScroll"===s&&kr("scroll",e):null!=f&&w(e,s,f,c))}switch(t){case"input":K(e),re(e,r,!1);break;case"textarea":K(e),ue(e);break;case"option":null!=r.value&&e.setAttribute("value",""+H(r.value));break;case"select":e.multiple=!!r.multiple,null!=(s=r.value)?oe(e,!!r.multiple,s,!1):null!=r.defaultValue&&oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=jr)}Lr(t,r)&&(n.flags|=4)}null!==n.ref&&(n.flags|=128)}return null;case 6:if(e&&null!=n.stateNode)qo(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(o(166));t=Dl(xl.current),Dl(Fl.current),Ml(n)?(r=n.stateNode,t=n.memoizedProps,r[Hr]=n,r.nodeValue!==t&&(n.flags|=4)):((r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[Hr]=n,n.stateNode=r)}return null;case 13:return oa(_l),r=n.memoizedState,0!=(64&n.flags)?(n.lanes=t,n):(r=null!==r,t=!1,null===e?void 0!==n.memoizedProps.fallback&&Ml(n):t=null!==e.memoizedState,r&&!t&&0!=(2&n.mode)&&(null===e&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&_l.current)?0===Ns&&(Ns=3):(0!==Ns&&3!==Ns||(Ns=4),null===xs||0==(134217727&Bs)&&0==(134217727&js)||Ai(xs,Ys))),(r||t)&&(n.flags|=4),null);case 4:return Sl(),null===e&&Dr(n.stateNode.containerInfo),null;case 10:return Za(n),null;case 17:return da(n.type)&&va(),null;case 19:if(oa(_l),null===(r=n.memoizedState))return null;if(s=0!=(64&n.flags),null===(c=r.rendering))if(s)es(r,!1);else{if(0!==Ns||null!==e&&0!=(64&e.flags))for(e=n.child;null!==e;){if(null!==(c=Il(e))){for(n.flags|=64,es(r,!1),null!==(s=c.updateQueue)&&(n.updateQueue=s,n.flags|=4),null===r.lastEffect&&(n.firstEffect=null),n.lastEffect=r.lastEffect,r=t,t=n.child;null!==t;)e=r,(s=t).flags&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(c=s.alternate)?(s.childLanes=0,s.lanes=e,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=c.childLanes,s.lanes=c.lanes,s.child=c.child,s.memoizedProps=c.memoizedProps,s.memoizedState=c.memoizedState,s.updateQueue=c.updateQueue,s.type=c.type,e=c.dependencies,s.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return sa(_l,1&_l.current|2),n.child}e=e.sibling}null!==r.tail&&La()>Rs&&(n.flags|=64,s=!0,es(r,!1),n.lanes=33554432)}else{if(!s)if(null!==(e=Il(c))){if(n.flags|=64,s=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),es(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Pl)return null!==(n=n.lastEffect=r.lastEffect)&&(n.nextEffect=null),null}else 2*La()-r.renderingStartTime>Rs&&1073741824!==t&&(n.flags|=64,s=!0,es(r,!1),n.lanes=33554432);r.isBackwards?(c.sibling=n.child,n.child=c):(null!==(t=r.last)?t.sibling=c:n.child=c,r.last=c)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=n.lastEffect,r.renderingStartTime=La(),t.sibling=null,n=_l.current,sa(_l,s?1&n|2:1&n),t):null;case 23:case 24:return hi(),null!==e&&null!==e.memoizedState!=(null!==n.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(n.flags|=4),null}throw Error(o(156,n.tag))}function ts(e){switch(e.tag){case 1:da(e.type)&&va();var n=e.flags;return 4096&n?(e.flags=-4097&n|64,e):null;case 3:if(Sl(),oa(ua),oa(ca),Vl(),0!=(64&(n=e.flags)))throw Error(o(285));return e.flags=-4097&n|64,e;case 5:return Nl(e),null;case 13:return oa(_l),4096&(n=e.flags)?(e.flags=-4097&n|64,e):null;case 19:return oa(_l),null;case 4:return Sl(),null;case 10:return Za(e),null;case 23:case 24:return hi(),null;default:return null}}function rs(e,n){try{var t="",r=n;do{t+=q(r),r=r.return}while(r);var a=t}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:a}}function as(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}Wo=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Vo=function(e,n,t,r){var l=e.memoizedProps;if(l!==r){e=n.stateNode,Dl(Fl.current);var o,s=null;switch(t){case"input":l=Z(e,l),r=Z(e,r),s=[];break;case"option":l=le(e,l),r=le(e,r),s=[];break;case"select":l=a({},l,{value:void 0}),r=a({},r,{value:void 0}),s=[];break;case"textarea":l=se(e,l),r=se(e,r),s=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(e.onclick=jr)}for(f in Ce(t,r),t=null,l)if(!r.hasOwnProperty(f)&&l.hasOwnProperty(f)&&null!=l[f])if("style"===f){var c=l[f];for(o in c)c.hasOwnProperty(o)&&(t||(t={}),t[o]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(i.hasOwnProperty(f)?s||(s=[]):(s=s||[]).push(f,null));for(f in r){var u=r[f];if(c=null!=l?l[f]:void 0,r.hasOwnProperty(f)&&u!==c&&(null!=u||null!=c))if("style"===f)if(c){for(o in c)!c.hasOwnProperty(o)||u&&u.hasOwnProperty(o)||(t||(t={}),t[o]="");for(o in u)u.hasOwnProperty(o)&&c[o]!==u[o]&&(t||(t={}),t[o]=u[o])}else t||(s||(s=[]),s.push(f,t)),t=u;else"dangerouslySetInnerHTML"===f?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(s=s||[]).push(f,u)):"children"===f?"string"!=typeof u&&"number"!=typeof u||(s=s||[]).push(f,""+u):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(i.hasOwnProperty(f)?(null!=u&&"onScroll"===f&&kr("scroll",e),s||c===u||(s=[])):"object"==typeof u&&null!==u&&u.$$typeof===B?u.toString():(s=s||[]).push(f,u))}t&&(s=s||[]).push("style",t);var f=s;(n.updateQueue=f)&&(n.flags|=4)}},qo=function(e,n,t,r){t!==r&&(n.flags|=4)};var ls="function"==typeof WeakMap?WeakMap:Map;function os(e,n,t){(t=ol(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Ws||(Ws=!0,Vs=r),as(0,n)},t}function ss(e,n,t){(t=ol(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=n.value;t.payload=function(){return as(0,n),r(a)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(t.callback=function(){"function"!=typeof r&&(null===qs?qs=new Set([this]):qs.add(this),as(0,n));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}var is="function"==typeof WeakSet?WeakSet:Set;function cs(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Ii(e,n)}else n.current=null}function us(e,n){switch(n.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&n.flags&&null!==e){var t=e.memoizedProps,r=e.memoizedState;n=(e=n.stateNode).getSnapshotBeforeUpdate(n.elementType===n.type?t:$a(n.type,t),r),e.__reactInternalSnapshotBeforeUpdate=n}return;case 3:return void(256&n.flags&&Ur(n.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(o(163))}function fs(e,n,t){switch(t.tag){case 0:case 11:case 15:case 22:if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==n)}if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Xi(t,e),Si(t,e)),e=r}while(e!==n)}return;case 1:return e=t.stateNode,4&t.flags&&(null===n?e.componentDidMount():(r=t.elementType===t.type?n.memoizedProps:$a(t.type,n.memoizedProps),e.componentDidUpdate(r,n.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(n=t.updateQueue)&&ul(t,n,e));case 3:if(null!==(n=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:e=t.child.stateNode;break;case 1:e=t.child.stateNode}ul(t,n,e)}return;case 5:return e=t.stateNode,void(null===n&&4&t.flags&&Lr(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&gn(t)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(o(163))}function As(e,n){for(var t=e;;){if(5===t.tag){var r=t.stateNode;if(n)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=t.stateNode;var a=t.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===t.tag)t.stateNode.nodeValue=n?"":t.memoizedProps;else if((23!==t.tag&&24!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function ds(e,n){if(wa&&"function"==typeof wa.onCommitFiberUnmount)try{wa.onCommitFiberUnmount(ya,n)}catch(e){}switch(n.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var t=e=e.next;do{var r=t,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Xi(n,t);else{r=n;try{a()}catch(e){Ii(r,e)}}t=t.next}while(t!==e)}break;case 1:if(cs(n),"function"==typeof(e=n.stateNode).componentWillUnmount)try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(e){Ii(n,e)}break;case 5:cs(n);break;case 4:ys(e,n)}}function vs(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function ms(e){return 5===e.tag||3===e.tag||4===e.tag}function ps(e){e:{for(var n=e.return;null!==n;){if(ms(n))break e;n=n.return}throw Error(o(160))}var t=n;switch(n=t.stateNode,t.tag){case 5:var r=!1;break;case 3:case 4:n=n.containerInfo,r=!0;break;default:throw Error(o(161))}16&t.flags&&(he(n,""),t.flags&=-17);e:n:for(t=e;;){for(;null===t.sibling;){if(null===t.return||ms(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue n;if(null===t.child||4===t.tag)continue n;t.child.return=t,t=t.child}if(!(2&t.flags)){t=t.stateNode;break e}}r?hs(e,t,n):Es(e,t,n)}function hs(e,n,t){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=jr));else if(4!==r&&null!==(e=e.child))for(hs(e,n,t),e=e.sibling;null!==e;)hs(e,n,t),e=e.sibling}function Es(e,n,t){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(Es(e,n,t),e=e.sibling;null!==e;)Es(e,n,t),e=e.sibling}function ys(e,n){for(var t,r,a=n,l=!1;;){if(!l){l=a.return;e:for(;;){if(null===l)throw Error(o(160));switch(t=l.stateNode,l.tag){case 5:r=!1;break e;case 3:case 4:t=t.containerInfo,r=!0;break e}l=l.return}l=!0}if(5===a.tag||6===a.tag){e:for(var s=e,i=a,c=i;;)if(ds(s,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===i)break e;for(;null===c.sibling;){if(null===c.return||c.return===i)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(s=t,i=a.stateNode,8===s.nodeType?s.parentNode.removeChild(i):s.removeChild(i)):t.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){t=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(ds(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===n)break;for(;null===a.sibling;){if(null===a.return||a.return===n)return;4===(a=a.return).tag&&(l=!1)}a.sibling.return=a.return,a=a.sibling}}function ws(e,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:var t=n.updateQueue;if(null!==(t=null!==t?t.lastEffect:null)){var r=t=t.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==t)}return;case 1:return;case 5:if(null!=(t=n.stateNode)){r=n.memoizedProps;var a=null!==e?e.memoizedProps:r;e=n.type;var l=n.updateQueue;if(n.updateQueue=null,null!==l){for(t[Qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&ne(t,r),Oe(e,a),n=Oe(e,r),a=0;a<l.length;a+=2){var s=l[a],i=l[a+1];"style"===s?be(t,i):"dangerouslySetInnerHTML"===s?pe(t,i):"children"===s?he(t,i):w(t,s,i,n)}switch(e){case"input":te(t,r);break;case"textarea":ce(t,r);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(l=r.value)?oe(t,!!r.multiple,l,!1):e!==!!r.multiple&&(null!=r.defaultValue?oe(t,!!r.multiple,r.defaultValue,!0):oe(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===n.stateNode)throw Error(o(162));return void(n.stateNode.nodeValue=n.memoizedProps);case 3:return void((t=n.stateNode).hydrate&&(t.hydrate=!1,gn(t.containerInfo)));case 12:return;case 13:return null!==n.memoizedState&&(Ls=La(),As(n.child,!0)),void bs(n);case 19:return void bs(n);case 17:return;case 23:case 24:return void As(n,null!==n.memoizedState)}throw Error(o(163))}function bs(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new is),n.forEach((function(n){var r=ji.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function gs(e,n){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(n=n.memoizedState)&&null===n.dehydrated}var Cs=Math.ceil,Os=b.ReactCurrentDispatcher,Fs=b.ReactCurrentOwner,ks=0,xs=null,Ds=null,Ys=0,Ss=0,Xs=la(0),Ns=0,_s=null,Is=0,Bs=0,js=0,Ps=0,Ts=null,Ls=0,Rs=1/0;function zs(){Rs=La()+500}var Ms,Us=null,Ws=!1,Vs=null,qs=null,$s=!1,Hs=null,Qs=90,Ks=[],Js=[],Gs=null,Zs=0,ei=null,ni=-1,ti=0,ri=0,ai=null,li=!1;function oi(){return 0!=(48&ks)?La():-1!==ni?ni:ni=La()}function si(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ra()?1:2;if(0===ti&&(ti=Is),0!==qa.transition){0!==ri&&(ri=null!==Ts?Ts.pendingLanes:0),e=ti;var n=4186112&~ri;return 0==(n&=-n)&&0==(n=(e=4186112&~e)&-e)&&(n=8192),n}return e=Ra(),e=Rn(0!=(4&ks)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),ti)}function ii(e,n,t){if(50<Zs)throw Zs=0,ei=null,Error(o(185));if(null===(e=ci(e,n)))return null;Un(e,n,t),e===xs&&(js|=n,4===Ns&&Ai(e,Ys));var r=Ra();1===n?0!=(8&ks)&&0==(48&ks)?di(e):(ui(e,t),0===ks&&(zs(),Wa())):(0==(4&ks)||98!==r&&99!==r||(null===Gs?Gs=new Set([e]):Gs.add(e)),ui(e,t)),Ts=e}function ci(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function ui(e,n){for(var t=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,l=e.expirationTimes,s=e.pendingLanes;0<s;){var i=31-Wn(s),c=1<<i,u=l[i];if(-1===u){if(0==(c&r)||0!=(c&a)){u=n,Pn(c);var f=jn;l[i]=10<=f?u+250:6<=f?u+5e3:-1}}else u<=n&&(e.expiredLanes|=c);s&=~c}if(r=Tn(e,e===xs?Ys:0),n=jn,0===r)null!==t&&(t!==_a&&Ca(t),e.callbackNode=null,e.callbackPriority=0);else{if(null!==t){if(e.callbackPriority===n)return;t!==_a&&Ca(t)}15===n?(t=di.bind(null,e),null===Ba?(Ba=[t],ja=ga(Da,Va)):Ba.push(t),t=_a):t=14===n?Ua(99,di.bind(null,e)):Ua(t=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(o(358,e))}}(n),fi.bind(null,e)),e.callbackPriority=n,e.callbackNode=t}}function fi(e){if(ni=-1,ri=ti=0,0!=(48&ks))throw Error(o(327));var n=e.callbackNode;if(Yi()&&e.callbackNode!==n)return null;var t=Tn(e,e===xs?Ys:0);if(0===t)return null;var r=t,a=ks;ks|=16;var l=wi();for(xs===e&&Ys===r||(zs(),Ei(e,r));;)try{Ci();break}catch(n){yi(e,n)}if(Ga(),Os.current=l,ks=a,null!==Ds?r=0:(xs=null,Ys=0,r=Ns),0!=(Is&js))Ei(e,0);else if(0!==r){if(2===r&&(ks|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(t=Ln(e))&&(r=bi(e,t))),1===r)throw n=_s,Ei(e,0),Ai(e,t),ui(e,La()),n;switch(e.finishedWork=e.current.alternate,e.finishedLanes=t,r){case 0:case 1:throw Error(o(345));case 2:ki(e);break;case 3:if(Ai(e,t),(62914560&t)===t&&10<(r=Ls+500-La())){if(0!==Tn(e,0))break;if(((a=e.suspendedLanes)&t)!==t){oi(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=zr(ki.bind(null,e),r);break}ki(e);break;case 4:if(Ai(e,t),(4186112&t)===t)break;for(r=e.eventTimes,a=-1;0<t;){var s=31-Wn(t);l=1<<s,(s=r[s])>a&&(a=s),t&=~l}if(t=a,10<(t=(120>(t=La()-t)?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*Cs(t/1960))-t)){e.timeoutHandle=zr(ki.bind(null,e),t);break}ki(e);break;case 5:ki(e);break;default:throw Error(o(329))}}return ui(e,La()),e.callbackNode===n?fi.bind(null,e):null}function Ai(e,n){for(n&=~Ps,n&=~js,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-Wn(n),r=1<<t;e[t]=-1,n&=~r}}function di(e){if(0!=(48&ks))throw Error(o(327));if(Yi(),e===xs&&0!=(e.expiredLanes&Ys)){var n=Ys,t=bi(e,n);0!=(Is&js)&&(t=bi(e,n=Tn(e,n)))}else t=bi(e,n=Tn(e,0));if(0!==e.tag&&2===t&&(ks|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(n=Ln(e))&&(t=bi(e,n))),1===t)throw t=_s,Ei(e,0),Ai(e,n),ui(e,La()),t;return e.finishedWork=e.current.alternate,e.finishedLanes=n,ki(e),ui(e,La()),null}function vi(e,n){var t=ks;ks|=1;try{return e(n)}finally{0===(ks=t)&&(zs(),Wa())}}function mi(e,n){var t=ks;ks&=-2,ks|=8;try{return e(n)}finally{0===(ks=t)&&(zs(),Wa())}}function pi(e,n){sa(Xs,Ss),Ss|=n,Is|=n}function hi(){Ss=Xs.current,oa(Xs)}function Ei(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,Mr(t)),null!==Ds)for(t=Ds.return;null!==t;){var r=t;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&va();break;case 3:Sl(),oa(ua),oa(ca),Vl();break;case 5:Nl(r);break;case 4:Sl();break;case 13:case 19:oa(_l);break;case 10:Za(r);break;case 23:case 24:hi()}t=t.return}xs=e,Ds=Ri(e.current,null),Ys=Ss=Is=n,Ns=0,_s=null,Ps=js=Bs=0}function yi(e,n){for(;;){var t=Ds;try{if(Ga(),ql.current=Do,Gl){for(var r=Ql.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Gl=!1}if(Hl=0,Jl=Kl=Ql=null,Zl=!1,Fs.current=null,null===t||null===t.return){Ns=1,_s=n,Ds=null;break}e:{var l=e,o=t.return,s=t,i=n;if(n=Ys,s.flags|=2048,s.firstEffect=s.lastEffect=null,null!==i&&"object"==typeof i&&"function"==typeof i.then){var c=i;if(0==(2&s.mode)){var u=s.alternate;u?(s.updateQueue=u.updateQueue,s.memoizedState=u.memoizedState,s.lanes=u.lanes):(s.updateQueue=null,s.memoizedState=null)}var f=0!=(1&_l.current),A=o;do{var d;if(d=13===A.tag){var v=A.memoizedState;if(null!==v)d=null!==v.dehydrated;else{var m=A.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(d){var p=A.updateQueue;if(null===p){var h=new Set;h.add(c),A.updateQueue=h}else p.add(c);if(0==(2&A.mode)){if(A.flags|=64,s.flags|=16384,s.flags&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var E=ol(-1,1);E.tag=2,sl(s,E)}s.lanes|=1;break e}i=void 0,s=n;var y=l.pingCache;if(null===y?(y=l.pingCache=new ls,i=new Set,y.set(c,i)):void 0===(i=y.get(c))&&(i=new Set,y.set(c,i)),!i.has(s)){i.add(s);var w=Bi.bind(null,l,c,s);c.then(w,w)}A.flags|=4096,A.lanes=n;break e}A=A.return}while(null!==A);i=Error(($(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ns&&(Ns=2),i=rs(i,s),A=o;do{switch(A.tag){case 3:l=i,A.flags|=4096,n&=-n,A.lanes|=n,il(A,os(0,l,n));break e;case 1:l=i;var b=A.type,g=A.stateNode;if(0==(64&A.flags)&&("function"==typeof b.getDerivedStateFromError||null!==g&&"function"==typeof g.componentDidCatch&&(null===qs||!qs.has(g)))){A.flags|=4096,n&=-n,A.lanes|=n,il(A,ss(A,l,n));break e}}A=A.return}while(null!==A)}Fi(t)}catch(e){n=e,Ds===t&&null!==t&&(Ds=t=t.return);continue}break}}function wi(){var e=Os.current;return Os.current=Do,null===e?Do:e}function bi(e,n){var t=ks;ks|=16;var r=wi();for(xs===e&&Ys===n||Ei(e,n);;)try{gi();break}catch(n){yi(e,n)}if(Ga(),ks=t,Os.current=r,null!==Ds)throw Error(o(261));return xs=null,Ys=0,Ns}function gi(){for(;null!==Ds;)Oi(Ds)}function Ci(){for(;null!==Ds&&!Oa();)Oi(Ds)}function Oi(e){var n=Ms(e.alternate,e,Ss);e.memoizedProps=e.pendingProps,null===n?Fi(e):Ds=n,Fs.current=null}function Fi(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(2048&n.flags)){if(null!==(t=ns(t,n,Ss)))return void(Ds=t);if(24!==(t=n).tag&&23!==t.tag||null===t.memoizedState||0!=(1073741824&Ss)||0==(4&t.mode)){for(var r=0,a=t.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;t.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=n.firstEffect),null!==n.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=n.firstEffect),e.lastEffect=n.lastEffect),1<n.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=n:e.firstEffect=n,e.lastEffect=n))}else{if(null!==(t=ts(n)))return t.flags&=2047,void(Ds=t);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(n=n.sibling))return void(Ds=n);Ds=n=e}while(null!==n);0===Ns&&(Ns=5)}function ki(e){var n=Ra();return Ma(99,xi.bind(null,e,n)),null}function xi(e,n){do{Yi()}while(null!==Hs);if(0!=(48&ks))throw Error(o(327));var t=e.finishedWork;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(o(177));e.callbackNode=null;var r=t.lanes|t.childLanes,a=r,l=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var s=e.eventTimes,i=e.expirationTimes;0<l;){var c=31-Wn(l),u=1<<c;a[c]=0,s[c]=-1,i[c]=-1,l&=~u}if(null!==Gs&&0==(24&r)&&Gs.has(e)&&Gs.delete(e),e===xs&&(Ds=xs=null,Ys=0),1<t.flags?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,null!==r){if(a=ks,ks|=32,Fs.current=null,Pr=Qn,dr(s=Ar())){if("selectionStart"in s)i={start:s.selectionStart,end:s.selectionEnd};else e:if(i=(i=s.ownerDocument)&&i.defaultView||window,(u=i.getSelection&&i.getSelection())&&0!==u.rangeCount){i=u.anchorNode,l=u.anchorOffset,c=u.focusNode,u=u.focusOffset;try{i.nodeType,c.nodeType}catch(e){i=null;break e}var f=0,A=-1,d=-1,v=0,m=0,p=s,h=null;n:for(;;){for(var E;p!==i||0!==l&&3!==p.nodeType||(A=f+l),p!==c||0!==u&&3!==p.nodeType||(d=f+u),3===p.nodeType&&(f+=p.nodeValue.length),null!==(E=p.firstChild);)h=p,p=E;for(;;){if(p===s)break n;if(h===i&&++v===l&&(A=f),h===c&&++m===u&&(d=f),null!==(E=p.nextSibling))break;h=(p=h).parentNode}p=E}i=-1===A||-1===d?null:{start:A,end:d}}else i=null;i=i||{start:0,end:0}}else i=null;Tr={focusedElem:s,selectionRange:i},Qn=!1,ai=null,li=!1,Us=r;do{try{Di()}catch(e){if(null===Us)throw Error(o(330));Ii(Us,e),Us=Us.nextEffect}}while(null!==Us);ai=null,Us=r;do{try{for(s=e;null!==Us;){var y=Us.flags;if(16&y&&he(Us.stateNode,""),128&y){var w=Us.alternate;if(null!==w){var b=w.ref;null!==b&&("function"==typeof b?b(null):b.current=null)}}switch(1038&y){case 2:ps(Us),Us.flags&=-3;break;case 6:ps(Us),Us.flags&=-3,ws(Us.alternate,Us);break;case 1024:Us.flags&=-1025;break;case 1028:Us.flags&=-1025,ws(Us.alternate,Us);break;case 4:ws(Us.alternate,Us);break;case 8:ys(s,i=Us);var g=i.alternate;vs(i),null!==g&&vs(g)}Us=Us.nextEffect}}catch(e){if(null===Us)throw Error(o(330));Ii(Us,e),Us=Us.nextEffect}}while(null!==Us);if(b=Tr,w=Ar(),y=b.focusedElem,s=b.selectionRange,w!==y&&y&&y.ownerDocument&&fr(y.ownerDocument.documentElement,y)){null!==s&&dr(y)&&(w=s.start,void 0===(b=s.end)&&(b=w),"selectionStart"in y?(y.selectionStart=w,y.selectionEnd=Math.min(b,y.value.length)):(b=(w=y.ownerDocument||document)&&w.defaultView||window).getSelection&&(b=b.getSelection(),i=y.textContent.length,g=Math.min(s.start,i),s=void 0===s.end?g:Math.min(s.end,i),!b.extend&&g>s&&(i=s,s=g,g=i),i=ur(y,g),l=ur(y,s),i&&l&&(1!==b.rangeCount||b.anchorNode!==i.node||b.anchorOffset!==i.offset||b.focusNode!==l.node||b.focusOffset!==l.offset)&&((w=w.createRange()).setStart(i.node,i.offset),b.removeAllRanges(),g>s?(b.addRange(w),b.extend(l.node,l.offset)):(w.setEnd(l.node,l.offset),b.addRange(w))))),w=[];for(b=y;b=b.parentNode;)1===b.nodeType&&w.push({element:b,left:b.scrollLeft,top:b.scrollTop});for("function"==typeof y.focus&&y.focus(),y=0;y<w.length;y++)(b=w[y]).element.scrollLeft=b.left,b.element.scrollTop=b.top}Qn=!!Pr,Tr=Pr=null,e.current=t,Us=r;do{try{for(y=e;null!==Us;){var C=Us.flags;if(36&C&&fs(y,Us.alternate,Us),128&C){w=void 0;var O=Us.ref;if(null!==O){var F=Us.stateNode;switch(Us.tag){case 5:w=F;break;default:w=F}"function"==typeof O?O(w):O.current=w}}Us=Us.nextEffect}}catch(e){if(null===Us)throw Error(o(330));Ii(Us,e),Us=Us.nextEffect}}while(null!==Us);Us=null,Ia(),ks=a}else e.current=t;if($s)$s=!1,Hs=e,Qs=n;else for(Us=r;null!==Us;)n=Us.nextEffect,Us.nextEffect=null,8&Us.flags&&((C=Us).sibling=null,C.stateNode=null),Us=n;if(0===(r=e.pendingLanes)&&(qs=null),1===r?e===ei?Zs++:(Zs=0,ei=e):Zs=0,t=t.stateNode,wa&&"function"==typeof wa.onCommitFiberRoot)try{wa.onCommitFiberRoot(ya,t,void 0,64==(64&t.current.flags))}catch(e){}if(ui(e,La()),Ws)throw Ws=!1,e=Vs,Vs=null,e;return 0!=(8&ks)||Wa(),null}function Di(){for(;null!==Us;){var e=Us.alternate;li||null===ai||(0!=(8&Us.flags)?Ze(Us,ai)&&(li=!0):13===Us.tag&&gs(e,Us)&&Ze(Us,ai)&&(li=!0));var n=Us.flags;0!=(256&n)&&us(e,Us),0==(512&n)||$s||($s=!0,Ua(97,(function(){return Yi(),null}))),Us=Us.nextEffect}}function Yi(){if(90!==Qs){var e=97<Qs?97:Qs;return Qs=90,Ma(e,Ni)}return!1}function Si(e,n){Ks.push(n,e),$s||($s=!0,Ua(97,(function(){return Yi(),null})))}function Xi(e,n){Js.push(n,e),$s||($s=!0,Ua(97,(function(){return Yi(),null})))}function Ni(){if(null===Hs)return!1;var e=Hs;if(Hs=null,0!=(48&ks))throw Error(o(331));var n=ks;ks|=32;var t=Js;Js=[];for(var r=0;r<t.length;r+=2){var a=t[r],l=t[r+1],s=a.destroy;if(a.destroy=void 0,"function"==typeof s)try{s()}catch(e){if(null===l)throw Error(o(330));Ii(l,e)}}for(t=Ks,Ks=[],r=0;r<t.length;r+=2){a=t[r],l=t[r+1];try{var i=a.create;a.destroy=i()}catch(e){if(null===l)throw Error(o(330));Ii(l,e)}}for(i=e.current.firstEffect;null!==i;)e=i.nextEffect,i.nextEffect=null,8&i.flags&&(i.sibling=null,i.stateNode=null),i=e;return ks=n,Wa(),!0}function _i(e,n,t){sl(e,n=os(0,n=rs(t,n),1)),n=oi(),null!==(e=ci(e,1))&&(Un(e,1,n),ui(e,n))}function Ii(e,n){if(3===e.tag)_i(e,e,n);else for(var t=e.return;null!==t;){if(3===t.tag){_i(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===qs||!qs.has(r))){var a=ss(t,e=rs(n,e),1);if(sl(t,a),a=oi(),null!==(t=ci(t,1)))Un(t,1,a),ui(t,a);else if("function"==typeof r.componentDidCatch&&(null===qs||!qs.has(r)))try{r.componentDidCatch(n,e)}catch(e){}break}}t=t.return}}function Bi(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=oi(),e.pingedLanes|=e.suspendedLanes&t,xs===e&&(Ys&t)===t&&(4===Ns||3===Ns&&(62914560&Ys)===Ys&&500>La()-Ls?Ei(e,0):Ps|=t),ui(e,n)}function ji(e,n){var t=e.stateNode;null!==t&&t.delete(n),0==(n=0)&&(0==(2&(n=e.mode))?n=1:0==(4&n)?n=99===Ra()?1:2:(0===ti&&(ti=Is),0===(n=zn(62914560&~ti))&&(n=4194304))),t=oi(),null!==(e=ci(e,n))&&(Un(e,n,t),ui(e,t))}function Pi(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Ti(e,n,t,r){return new Pi(e,n,t,r)}function Li(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ri(e,n){var t=e.alternate;return null===t?((t=Ti(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function zi(e,n,t,r,a,l){var s=2;if(r=e,"function"==typeof e)Li(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case O:return Mi(t.children,a,l,n);case j:s=8,a|=16;break;case F:s=8,a|=1;break;case k:return(e=Ti(12,t,n,8|a)).elementType=k,e.type=k,e.lanes=l,e;case S:return(e=Ti(13,t,n,a)).type=S,e.elementType=S,e.lanes=l,e;case X:return(e=Ti(19,t,n,a)).elementType=X,e.lanes=l,e;case P:return Ui(t,a,l,n);case T:return(e=Ti(24,t,n,a)).elementType=T,e.lanes=l,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case x:s=10;break e;case D:s=9;break e;case Y:s=11;break e;case N:s=14;break e;case _:s=16,r=null;break e;case I:s=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(n=Ti(s,t,n,a)).elementType=e,n.type=r,n.lanes=l,n}function Mi(e,n,t,r){return(e=Ti(7,e,r,n)).lanes=t,e}function Ui(e,n,t,r){return(e=Ti(23,e,r,n)).elementType=P,e.lanes=t,e}function Wi(e,n,t){return(e=Ti(6,e,null,n)).lanes=t,e}function Vi(e,n,t){return(n=Ti(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function qi(e,n,t){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Mn(0),this.expirationTimes=Mn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Mn(0),this.mutableSourceEagerHydrationData=null}function $i(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:C,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Hi(e,n,t,r){var a=n.current,l=oi(),s=si(a);e:if(t){n:{if(Qe(t=t._reactInternals)!==t||1!==t.tag)throw Error(o(170));var i=t;do{switch(i.tag){case 3:i=i.stateNode.context;break n;case 1:if(da(i.type)){i=i.stateNode.__reactInternalMemoizedMergedChildContext;break n}}i=i.return}while(null!==i);throw Error(o(171))}if(1===t.tag){var c=t.type;if(da(c)){t=pa(t,c,i);break e}}t=i}else t=ia;return null===n.context?n.context=t:n.pendingContext=t,(n=ol(l,s)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),sl(a,n),ii(a,s,l),s}function Qi(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ki(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Ji(e,n){Ki(e,n),(e=e.alternate)&&Ki(e,n)}function Gi(e,n,t){var r=null!=t&&null!=t.hydrationOptions&&t.hydrationOptions.mutableSources||null;if(t=new qi(e,n,null!=t&&!0===t.hydrate),n=Ti(3,null,null,2===n?7:1===n?3:0),t.current=n,n.stateNode=t,al(n),e[Kr]=t.current,Dr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(n=r[e])._getVersion;a=a(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a)}this._internalRoot=t}function Zi(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(e,n,t,r,a){var l=t._reactRootContainer;if(l){var o=l._internalRoot;if("function"==typeof a){var s=a;a=function(){var e=Qi(o);s.call(e)}}Hi(n,o,e,a)}else{if(l=t._reactRootContainer=function(e,n){if(n||(n=!(!(n=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==n.nodeType||!n.hasAttribute("data-reactroot"))),!n)for(var t;t=e.lastChild;)e.removeChild(t);return new Gi(e,0,n?{hydrate:!0}:void 0)}(t,r),o=l._internalRoot,"function"==typeof a){var i=a;a=function(){var e=Qi(o);i.call(e)}}mi((function(){Hi(n,o,e,a)}))}return Qi(o)}function nc(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zi(n))throw Error(o(200));return $i(e,n,null,t)}Ms=function(e,n,t){var r=n.lanes;if(null!==e)if(e.memoizedProps!==n.pendingProps||ua.current)_o=!0;else{if(0==(t&r)){switch(_o=!1,n.tag){case 3:Uo(n),Ul();break;case 5:Xl(n);break;case 1:da(n.type)&&ha(n);break;case 4:Yl(n,n.stateNode.containerInfo);break;case 10:r=n.memoizedProps.value;var a=n.type._context;sa(Ha,a._currentValue),a._currentValue=r;break;case 13:if(null!==n.memoizedState)return 0!=(t&n.child.childLanes)?Ho(e,n,t):(sa(_l,1&_l.current),null!==(n=Zo(e,n,t))?n.sibling:null);sa(_l,1&_l.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(64&e.flags)){if(r)return Go(e,n,t);n.flags|=64}if(null!==(a=n.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),sa(_l,_l.current),r)break;return null;case 23:case 24:return n.lanes=0,To(e,n,t)}return Zo(e,n,t)}_o=0!=(16384&e.flags)}else _o=!1;switch(n.lanes=0,n.tag){case 2:if(r=n.type,null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,a=Aa(n,ca.current),nl(n,t),a=to(null,n,r,e,a,t),n.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,da(r)){var l=!0;ha(n)}else l=!1;n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,al(n);var s=r.getDerivedStateFromProps;"function"==typeof s&&Al(n,r,s,e),a.updater=dl,n.stateNode=a,a._reactInternals=n,hl(n,r,e,t),n=Mo(null,n,r,!0,l,t)}else n.tag=0,Io(null,n,a,t),n=n.child;return n;case 16:a=n.elementType;e:{switch(null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,a=(l=a._init)(a._payload),n.type=a,l=n.tag=function(e){if("function"==typeof e)return Li(e)?1:0;if(null!=e){if((e=e.$$typeof)===Y)return 11;if(e===N)return 14}return 2}(a),e=$a(a,e),l){case 0:n=Ro(null,n,a,e,t);break e;case 1:n=zo(null,n,a,e,t);break e;case 11:n=Bo(null,n,a,e,t);break e;case 14:n=jo(null,n,a,$a(a.type,e),r,t);break e}throw Error(o(306,a,""))}return n;case 0:return r=n.type,a=n.pendingProps,Ro(e,n,r,a=n.elementType===r?a:$a(r,a),t);case 1:return r=n.type,a=n.pendingProps,zo(e,n,r,a=n.elementType===r?a:$a(r,a),t);case 3:if(Uo(n),r=n.updateQueue,null===e||null===r)throw Error(o(282));if(r=n.pendingProps,a=null!==(a=n.memoizedState)?a.element:null,ll(e,n),cl(n,r,null,t),(r=n.memoizedState.element)===a)Ul(),n=Zo(e,n,t);else{if((l=(a=n.stateNode).hydrate)&&(jl=Wr(n.stateNode.containerInfo.firstChild),Bl=n,l=Pl=!0),l){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(l=e[a])._workInProgressVersionPrimary=e[a+1],Wl.push(l);for(t=Cl(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|1024,t=t.sibling}else Io(e,n,r,t),Ul();n=n.child}return n;case 5:return Xl(n),null===e&&Rl(n),r=n.type,a=n.pendingProps,l=null!==e?e.memoizedProps:null,s=a.children,Rr(r,a)?s=null:null!==l&&Rr(r,l)&&(n.flags|=16),Lo(e,n),Io(e,n,s,t),n.child;case 6:return null===e&&Rl(n),null;case 13:return Ho(e,n,t);case 4:return Yl(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=gl(n,null,r,t):Io(e,n,r,t),n.child;case 11:return r=n.type,a=n.pendingProps,Bo(e,n,r,a=n.elementType===r?a:$a(r,a),t);case 7:return Io(e,n,n.pendingProps,t),n.child;case 8:case 12:return Io(e,n,n.pendingProps.children,t),n.child;case 10:e:{r=n.type._context,a=n.pendingProps,s=n.memoizedProps,l=a.value;var i=n.type._context;if(sa(Ha,i._currentValue),i._currentValue=l,null!==s)if(i=s.value,0==(l=or(i,l)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(i,l):1073741823))){if(s.children===a.children&&!ua.current){n=Zo(e,n,t);break e}}else for(null!==(i=n.child)&&(i.return=n);null!==i;){var c=i.dependencies;if(null!==c){s=i.child;for(var u=c.firstContext;null!==u;){if(u.context===r&&0!=(u.observedBits&l)){1===i.tag&&((u=ol(-1,t&-t)).tag=2,sl(i,u)),i.lanes|=t,null!==(u=i.alternate)&&(u.lanes|=t),el(i.return,t),c.lanes|=t;break}u=u.next}}else s=10===i.tag&&i.type===n.type?null:i.child;if(null!==s)s.return=i;else for(s=i;null!==s;){if(s===n){s=null;break}if(null!==(i=s.sibling)){i.return=s.return,s=i;break}s=s.return}i=s}Io(e,n,a.children,t),n=n.child}return n;case 9:return a=n.type,r=(l=n.pendingProps).children,nl(n,t),r=r(a=tl(a,l.unstable_observedBits)),n.flags|=1,Io(e,n,r,t),n.child;case 14:return l=$a(a=n.type,n.pendingProps),jo(e,n,a,l=$a(a.type,l),r,t);case 15:return Po(e,n,n.type,n.pendingProps,r,t);case 17:return r=n.type,a=n.pendingProps,a=n.elementType===r?a:$a(r,a),null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,da(r)?(e=!0,ha(n)):e=!1,nl(n,t),ml(n,r,a),hl(n,r,a,t),Mo(null,n,r,!0,e,t);case 19:return Go(e,n,t);case 23:case 24:return To(e,n,t)}throw Error(o(156,n.tag))},Gi.prototype.render=function(e){Hi(e,this._internalRoot,null,null)},Gi.prototype.unmount=function(){var e=this._internalRoot,n=e.containerInfo;Hi(null,e,null,(function(){n[Kr]=null}))},en=function(e){13===e.tag&&(ii(e,4,oi()),Ji(e,4))},nn=function(e){13===e.tag&&(ii(e,67108864,oi()),Ji(e,67108864))},tn=function(e){if(13===e.tag){var n=oi(),t=si(e);ii(e,t,n),Ji(e,t)}},rn=function(e,n){return n()},ke=function(e,n,t){switch(n){case"input":if(te(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var a=na(r);if(!a)throw Error(o(90));J(r),te(r,a)}}}break;case"textarea":ce(e,t);break;case"select":null!=(n=t.value)&&oe(e,!!t.multiple,n,!1)}},Ne=vi,_e=function(e,n,t,r,a){var l=ks;ks|=4;try{return Ma(98,e.bind(null,n,t,r,a))}finally{0===(ks=l)&&(zs(),Wa())}},Ie=function(){0==(49&ks)&&(function(){if(null!==Gs){var e=Gs;Gs=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,ui(e,La())}))}Wa()}(),Yi())},Be=function(e,n){var t=ks;ks|=2;try{return e(n)}finally{0===(ks=t)&&(zs(),Wa())}};var tc={Events:[Zr,ea,na,Se,Xe,Yi,{current:!1}]},rc={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ac={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ge(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var lc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!lc.isDisabled&&lc.supportsFiber)try{ya=lc.inject(ac),wa=lc}catch(me){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,n.createPortal=nc,n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return null===(e=Ge(n))?null:e.stateNode},n.flushSync=function(e,n){var t=ks;if(0!=(48&t))return e(n);ks|=1;try{if(e)return Ma(99,e.bind(null,n))}finally{ks=t,Wa()}},n.hydrate=function(e,n,t){if(!Zi(n))throw Error(o(200));return ec(null,e,n,!0,t)},n.render=function(e,n,t){if(!Zi(n))throw Error(o(200));return ec(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Zi(e))throw Error(o(40));return!!e._reactRootContainer&&(mi((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[Kr]=null}))})),!0)},n.unstable_batchedUpdates=vi,n.unstable_createPortal=function(e,n){return nc(e,n,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Zi(t))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return ec(e,n,t,!1,r)},n.version="17.0.2"},935:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(448)},921:(e,n)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,a=t?Symbol.for("react.portal"):60106,l=t?Symbol.for("react.fragment"):60107,o=t?Symbol.for("react.strict_mode"):60108,s=t?Symbol.for("react.profiler"):60114,i=t?Symbol.for("react.provider"):60109,c=t?Symbol.for("react.context"):60110,u=t?Symbol.for("react.async_mode"):60111,f=t?Symbol.for("react.concurrent_mode"):60111,A=t?Symbol.for("react.forward_ref"):60112,d=t?Symbol.for("react.suspense"):60113,v=t?Symbol.for("react.suspense_list"):60120,m=t?Symbol.for("react.memo"):60115,p=t?Symbol.for("react.lazy"):60116,h=t?Symbol.for("react.block"):60121,E=t?Symbol.for("react.fundamental"):60117,y=t?Symbol.for("react.responder"):60118,w=t?Symbol.for("react.scope"):60119;function b(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case u:case f:case l:case s:case o:case d:return e;default:switch(e=e&&e.$$typeof){case c:case A:case p:case m:case i:return e;default:return n}}case a:return n}}}function g(e){return b(e)===f}n.AsyncMode=u,n.ConcurrentMode=f,n.ContextConsumer=c,n.ContextProvider=i,n.Element=r,n.ForwardRef=A,n.Fragment=l,n.Lazy=p,n.Memo=m,n.Portal=a,n.Profiler=s,n.StrictMode=o,n.Suspense=d,n.isAsyncMode=function(e){return g(e)||b(e)===u},n.isConcurrentMode=g,n.isContextConsumer=function(e){return b(e)===c},n.isContextProvider=function(e){return b(e)===i},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return b(e)===A},n.isFragment=function(e){return b(e)===l},n.isLazy=function(e){return b(e)===p},n.isMemo=function(e){return b(e)===m},n.isPortal=function(e){return b(e)===a},n.isProfiler=function(e){return b(e)===s},n.isStrictMode=function(e){return b(e)===o},n.isSuspense=function(e){return b(e)===d},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===f||e===s||e===o||e===d||e===v||"object"==typeof e&&null!==e&&(e.$$typeof===p||e.$$typeof===m||e.$$typeof===i||e.$$typeof===c||e.$$typeof===A||e.$$typeof===E||e.$$typeof===y||e.$$typeof===w||e.$$typeof===h)},n.typeOf=b},864:(e,n,t)=>{"use strict";e.exports=t(921)},585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},658:(e,n,t)=>{var r=t(585);e.exports=function e(n,t,a){return r(t)||(a=t||a,t=[]),a=a||{},n instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return u(e,n)}(n,t):r(n)?function(n,t,r){for(var a=[],l=0;l<n.length;l++)a.push(e(n[l],t,r).source);return u(new RegExp("(?:"+a.join("|")+")",f(r)),t)}(n,t,a):function(e,n,t){return A(l(e,t),n,t)}(n,t,a)},e.exports.parse=l,e.exports.compile=function(e,n){return s(l(e,n),n)},e.exports.tokensToFunction=s,e.exports.tokensToRegExp=A;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function l(e,n){for(var t,r=[],l=0,o=0,s="",u=n&&n.delimiter||"/";null!=(t=a.exec(e));){var f=t[0],A=t[1],d=t.index;if(s+=e.slice(o,d),o=d+f.length,A)s+=A[1];else{var v=e[o],m=t[2],p=t[3],h=t[4],E=t[5],y=t[6],w=t[7];s&&(r.push(s),s="");var b=null!=m&&null!=v&&v!==m,g="+"===y||"*"===y,C="?"===y||"*"===y,O=t[2]||u,F=h||E;r.push({name:p||l++,prefix:m||"",delimiter:O,optional:C,repeat:g,partial:b,asterisk:!!w,pattern:F?c(F):w?".*":"[^"+i(O)+"]+?"})}}return o<e.length&&(s+=e.substr(o)),s&&r.push(s),r}function o(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function s(e,n){for(var t=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(t[a]=new RegExp("^(?:"+e[a].pattern+")$",f(n)));return function(n,a){for(var l="",s=n||{},i=(a||{}).pretty?o:encodeURIComponent,c=0;c<e.length;c++){var u=e[c];if("string"!=typeof u){var f,A=s[u.name];if(null==A){if(u.optional){u.partial&&(l+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(r(A)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(A)+"`");if(0===A.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var d=0;d<A.length;d++){if(f=i(A[d]),!t[c].test(f))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(f)+"`");l+=(0===d?u.prefix:u.delimiter)+f}}else{if(f=u.asterisk?encodeURI(A).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):i(A),!t[c].test(f))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+f+'"');l+=u.prefix+f}}else l+=u}return l}}function i(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function u(e,n){return e.keys=n,e}function f(e){return e&&e.sensitive?"":"i"}function A(e,n,t){r(n)||(t=n||t,n=[]);for(var a=(t=t||{}).strict,l=!1!==t.end,o="",s=0;s<e.length;s++){var c=e[s];if("string"==typeof c)o+=i(c);else{var A=i(c.prefix),d="(?:"+c.pattern+")";n.push(c),c.repeat&&(d+="(?:"+A+d+")*"),o+=d=c.optional?c.partial?A+"("+d+")?":"(?:"+A+"("+d+"))?":A+"("+d+")"}}var v=i(t.delimiter||"/"),m=o.slice(-v.length)===v;return a||(o=(m?o.slice(0,-v.length):o)+"(?:"+v+"(?=$))?"),o+=l?"$":a&&m?"":"(?="+v+"|$)",u(new RegExp("^"+o,f(t)),n)}},408:(e,n,t)=>{"use strict";var r=t(418),a=60103,l=60106;n.Fragment=60107,n.StrictMode=60108,n.Profiler=60114;var o=60109,s=60110,i=60112;n.Suspense=60113;var c=60115,u=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),l=f("react.portal"),n.Fragment=f("react.fragment"),n.StrictMode=f("react.strict_mode"),n.Profiler=f("react.profiler"),o=f("react.provider"),s=f("react.context"),i=f("react.forward_ref"),n.Suspense=f("react.suspense"),c=f("react.memo"),u=f("react.lazy")}var A="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function p(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||v}function h(){}function E(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||v}p.prototype.isReactComponent={},p.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(d(85));this.updater.enqueueSetState(this,e,n,"setState")},p.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},h.prototype=p.prototype;var y=E.prototype=new h;y.constructor=E,r(y,p.prototype),y.isPureReactComponent=!0;var w={current:null},b=Object.prototype.hasOwnProperty,g={key:!0,ref:!0,__self:!0,__source:!0};function C(e,n,t){var r,l={},o=null,s=null;if(null!=n)for(r in void 0!==n.ref&&(s=n.ref),void 0!==n.key&&(o=""+n.key),n)b.call(n,r)&&!g.hasOwnProperty(r)&&(l[r]=n[r]);var i=arguments.length-2;if(1===i)l.children=t;else if(1<i){for(var c=Array(i),u=0;u<i;u++)c[u]=arguments[u+2];l.children=c}if(e&&e.defaultProps)for(r in i=e.defaultProps)void 0===l[r]&&(l[r]=i[r]);return{$$typeof:a,type:e,key:o,ref:s,props:l,_owner:w.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var F=/\/+/g;function k(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function x(e,n,t,r,o){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var i=!1;if(null===e)i=!0;else switch(s){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case a:case l:i=!0}}if(i)return o=o(i=e),e=""===r?"."+k(i,0):r,Array.isArray(o)?(t="",null!=e&&(t=e.replace(F,"$&/")+"/"),x(o,n,t,"",(function(e){return e}))):null!=o&&(O(o)&&(o=function(e,n){return{$$typeof:a,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(o,t+(!o.key||i&&i.key===o.key?"":(""+o.key).replace(F,"$&/")+"/")+e)),n.push(o)),1;if(i=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var u=r+k(s=e[c],c);i+=x(s,n,t,u,o)}else if("function"==typeof(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=A&&e[A]||e["@@iterator"])?e:null}(e)))for(e=u.call(e),c=0;!(s=e.next()).done;)i+=x(s=s.value,n,t,u=r+k(s,c++),o);else if("object"===s)throw n=""+e,Error(d(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n));return i}function D(e,n,t){if(null==e)return e;var r=[],a=0;return x(e,r,"","",(function(e){return n.call(t,e,a++)})),r}function Y(e){if(-1===e._status){var n=e._result;n=n(),e._status=0,e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}if(1===e._status)return e._result;throw e._result}var S={current:null};function X(){var e=S.current;if(null===e)throw Error(d(321));return e}var N={ReactCurrentDispatcher:S,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:D,forEach:function(e,n,t){D(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return D(e,(function(){n++})),n},toArray:function(e){return D(e,(function(e){return e}))||[]},only:function(e){if(!O(e))throw Error(d(143));return e}},n.Component=p,n.PureComponent=E,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,n.cloneElement=function(e,n,t){if(null==e)throw Error(d(267,e));var l=r({},e.props),o=e.key,s=e.ref,i=e._owner;if(null!=n){if(void 0!==n.ref&&(s=n.ref,i=w.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(u in n)b.call(n,u)&&!g.hasOwnProperty(u)&&(l[u]=void 0===n[u]&&void 0!==c?c[u]:n[u])}var u=arguments.length-2;if(1===u)l.children=t;else if(1<u){c=Array(u);for(var f=0;f<u;f++)c[f]=arguments[f+2];l.children=c}return{$$typeof:a,type:e.type,key:o,ref:s,props:l,_owner:i}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:s,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},n.createElement=C,n.createFactory=function(e){var n=C.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:i,render:e}},n.isValidElement=O,n.lazy=function(e){return{$$typeof:u,_payload:{_status:-1,_result:e},_init:Y}},n.memo=function(e,n){return{$$typeof:c,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return X().useCallback(e,n)},n.useContext=function(e,n){return X().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return X().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return X().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return X().useLayoutEffect(e,n)},n.useMemo=function(e,n){return X().useMemo(e,n)},n.useReducer=function(e,n,t){return X().useReducer(e,n,t)},n.useRef=function(e){return X().useRef(e)},n.useState=function(e){return X().useState(e)},n.version="17.0.2"},294:(e,n,t)=>{"use strict";e.exports=t(408)},53:(e,n)=>{"use strict";var t,r,a,l;if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;n.unstable_now=function(){return o.now()}}else{var s=Date,i=s.now();n.unstable_now=function(){return s.now()-i}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,u=null,f=function(){if(null!==c)try{var e=n.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};t=function(e){null!==c?setTimeout(t,0,e):(c=e,setTimeout(f,0))},r=function(e,n){u=setTimeout(e,n)},a=function(){clearTimeout(u)},n.unstable_shouldYield=function(){return!1},l=n.unstable_forceFrameRate=function(){}}else{var A=window.setTimeout,d=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,p=null,h=-1,E=5,y=0;n.unstable_shouldYield=function(){return n.unstable_now()>=y},l=function(){},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,b=w.port2;w.port1.onmessage=function(){if(null!==p){var e=n.unstable_now();y=e+E;try{p(!0,e)?b.postMessage(null):(m=!1,p=null)}catch(e){throw b.postMessage(null),e}}else m=!1},t=function(e){p=e,m||(m=!0,b.postMessage(null))},r=function(e,t){h=A((function(){e(n.unstable_now())}),t)},a=function(){d(h),h=-1}}function g(e,n){var t=e.length;e.push(n);e:for(;;){var r=t-1>>>1,a=e[r];if(!(void 0!==a&&0<F(a,n)))break e;e[r]=n,e[t]=a,t=r}}function C(e){return void 0===(e=e[0])?null:e}function O(e){var n=e[0];if(void 0!==n){var t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length;r<a;){var l=2*(r+1)-1,o=e[l],s=l+1,i=e[s];if(void 0!==o&&0>F(o,t))void 0!==i&&0>F(i,o)?(e[r]=i,e[s]=t,r=s):(e[r]=o,e[l]=t,r=l);else{if(!(void 0!==i&&0>F(i,t)))break e;e[r]=i,e[s]=t,r=s}}}return n}return null}function F(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}var k=[],x=[],D=1,Y=null,S=3,X=!1,N=!1,_=!1;function I(e){for(var n=C(x);null!==n;){if(null===n.callback)O(x);else{if(!(n.startTime<=e))break;O(x),n.sortIndex=n.expirationTime,g(k,n)}n=C(x)}}function B(e){if(_=!1,I(e),!N)if(null!==C(k))N=!0,t(j);else{var n=C(x);null!==n&&r(B,n.startTime-e)}}function j(e,t){N=!1,_&&(_=!1,a()),X=!0;var l=S;try{for(I(t),Y=C(k);null!==Y&&(!(Y.expirationTime>t)||e&&!n.unstable_shouldYield());){var o=Y.callback;if("function"==typeof o){Y.callback=null,S=Y.priorityLevel;var s=o(Y.expirationTime<=t);t=n.unstable_now(),"function"==typeof s?Y.callback=s:Y===C(k)&&O(k),I(t)}else O(k);Y=C(k)}if(null!==Y)var i=!0;else{var c=C(x);null!==c&&r(B,c.startTime-t),i=!1}return i}finally{Y=null,S=l,X=!1}}var P=l;n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){N||X||(N=!0,t(j))},n.unstable_getCurrentPriorityLevel=function(){return S},n.unstable_getFirstCallbackNode=function(){return C(k)},n.unstable_next=function(e){switch(S){case 1:case 2:case 3:var n=3;break;default:n=S}var t=S;S=n;try{return e()}finally{S=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=P,n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=S;S=e;try{return n()}finally{S=t}},n.unstable_scheduleCallback=function(e,l,o){var s=n.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?s+o:s,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:D++,callback:l,priorityLevel:e,startTime:o,expirationTime:i=o+i,sortIndex:-1},o>s?(e.sortIndex=o,g(x,e),null===C(k)&&e===C(x)&&(_?a():_=!0,r(B,o-s))):(e.sortIndex=i,g(k,e),N||X||(N=!0,t(j))),e},n.unstable_wrapCallback=function(e){var n=S;return function(){var t=S;S=n;try{return e.apply(this,arguments)}finally{S=t}}}},840:(e,n,t)=>{"use strict";e.exports=t(53)},379:(e,n,t)=>{"use strict";var r,a=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),l=[];function o(e){for(var n=-1,t=0;t<l.length;t++)if(l[t].identifier===e){n=t;break}return n}function s(e,n){for(var t={},r=[],a=0;a<e.length;a++){var s=e[a],i=n.base?s[0]+n.base:s[0],c=t[i]||0,u="".concat(i," ").concat(c);t[i]=c+1;var f=o(u),A={css:s[1],media:s[2],sourceMap:s[3]};-1!==f?(l[f].references++,l[f].updater(A)):l.push({identifier:u,updater:m(A,n),references:1}),r.push(u)}return r}function i(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var l=t.nc;l&&(r.nonce=l)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var o=a(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}return n}var c,u=(c=[],function(e,n){return c[e]=n,c.filter(Boolean).join("\n")});function f(e,n,t,r){var a=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(n,a);else{var l=document.createTextNode(a),o=e.childNodes;o[n]&&e.removeChild(o[n]),o.length?e.insertBefore(l,o[n]):e.appendChild(l)}}function A(e,n,t){var r=t.css,a=t.media,l=t.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var d=null,v=0;function m(e,n){var t,r,a;if(n.singleton){var l=v++;t=d||(d=i(n)),r=f.bind(null,t,l,!1),a=f.bind(null,t,l,!0)}else t=i(n),r=A.bind(null,t,n),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else a()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=s(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var a=o(t[r]);l[a].references--}for(var i=s(e,n),c=0;c<t.length;c++){var u=o(t[c]);0===l[u].references&&(l[u].updater(),l.splice(u,1))}t=i}}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var l=n[r]={id:r,exports:{}};return e[r](l,l.exports,t),l.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.p="/",(()=>{"use strict";var e=t(294),n=t(935);function r(e,n){return(r=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function a(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,r(e,n)}var l=t(697),o=t.n(l);function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function i(e){return"/"===e.charAt(0)}function c(e,n){for(var t=n,r=t+1,a=e.length;r<a;t+=1,r+=1)e[t]=e[r];e.pop()}const u=function(e,n){if(!e)throw new Error("Invariant failed")};function f(e){return"/"===e.charAt(0)?e:"/"+e}function A(e,n){return function(e,n){return 0===e.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(n.length))}(e,n)?e.substr(n.length):e}function d(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function v(e){var n=e.pathname,t=e.search,r=e.hash,a=n||"/";return t&&"?"!==t&&(a+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function m(e,n,t,r){var a;"string"==typeof e?(a=function(e){var n=e||"/",t="",r="",a=n.indexOf("#");-1!==a&&(r=n.substr(a),n=n.substr(0,a));var l=n.indexOf("?");return-1!==l&&(t=n.substr(l),n=n.substr(0,l)),{pathname:n,search:"?"===t?"":t,hash:"#"===r?"":r}}(e)).state=n:(void 0===(a=s({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==n&&void 0===a.state&&(a.state=n));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return t&&(a.key=t),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,n){void 0===n&&(n="");var t,r=e&&e.split("/")||[],a=n&&n.split("/")||[],l=e&&i(e),o=n&&i(n),s=l||o;if(e&&i(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];t="."===u||".."===u||""===u}else t=!1;for(var f=0,A=a.length;A>=0;A--){var d=a[A];"."===d?c(a,A):".."===d?(c(a,A),f++):f&&(c(a,A),f--)}if(!s)for(;f--;f)a.unshift("..");!s||""===a[0]||a[0]&&i(a[0])||a.unshift("");var v=a.join("/");return t&&"/"!==v.substr(-1)&&(v+="/"),v}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function p(){var e=null,n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,r,a){if(null!=e){var l="function"==typeof e?e(n,t):e;"string"==typeof l?"function"==typeof r?r(l,a):a(!0):a(!1!==l)}else a(!0)},appendListener:function(e){var t=!0;function r(){t&&e.apply(void 0,arguments)}return n.push(r),function(){t=!1,n=n.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.forEach((function(e){return e.apply(void 0,t)}))}}}var h=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,n){n(window.confirm(e))}var y="popstate",w="hashchange";function b(){try{return window.history.state||{}}catch(e){return{}}}function g(e){void 0===e&&(e={}),h||u(!1);var n,t=window.history,r=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),l=e,o=l.forceRefresh,i=void 0!==o&&o,c=l.getUserConfirmation,g=void 0===c?E:c,C=l.keyLength,O=void 0===C?6:C,F=e.basename?d(f(e.basename)):"";function k(e){var n=e||{},t=n.key,r=n.state,a=window.location,l=a.pathname+a.search+a.hash;return F&&(l=A(l,F)),m(l,r,t)}function x(){return Math.random().toString(36).substr(2,O)}var D=p();function Y(e){s(z,e),z.length=t.length,D.notifyListeners(z.location,z.action)}function S(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||_(k(e.state))}function X(){_(k(b()))}var N=!1;function _(e){N?(N=!1,Y()):D.confirmTransitionTo(e,"POP",g,(function(n){n?Y({action:"POP",location:e}):function(e){var n=z.location,t=B.indexOf(n.key);-1===t&&(t=0);var r=B.indexOf(e.key);-1===r&&(r=0);var a=t-r;a&&(N=!0,P(a))}(e)}))}var I=k(b()),B=[I.key];function j(e){return F+v(e)}function P(e){t.go(e)}var T=0;function L(e){1===(T+=e)&&1===e?(window.addEventListener(y,S),a&&window.addEventListener(w,X)):0===T&&(window.removeEventListener(y,S),a&&window.removeEventListener(w,X))}var R=!1,z={length:t.length,action:"POP",location:I,createHref:j,push:function(e,n){var a="PUSH",l=m(e,n,x(),z.location);D.confirmTransitionTo(l,a,g,(function(e){if(e){var n=j(l),o=l.key,s=l.state;if(r)if(t.pushState({key:o,state:s},null,n),i)window.location.href=n;else{var c=B.indexOf(z.location.key),u=B.slice(0,c+1);u.push(l.key),B=u,Y({action:a,location:l})}else window.location.href=n}}))},replace:function(e,n){var a="REPLACE",l=m(e,n,x(),z.location);D.confirmTransitionTo(l,a,g,(function(e){if(e){var n=j(l),o=l.key,s=l.state;if(r)if(t.replaceState({key:o,state:s},null,n),i)window.location.replace(n);else{var c=B.indexOf(z.location.key);-1!==c&&(B[c]=l.key),Y({action:a,location:l})}else window.location.replace(n)}}))},go:P,goBack:function(){P(-1)},goForward:function(){P(1)},block:function(e){void 0===e&&(e=!1);var n=D.setPrompt(e);return R||(L(1),R=!0),function(){return R&&(R=!1,L(-1)),n()}},listen:function(e){var n=D.appendListener(e);return L(1),function(){L(-1),n()}}};return z}var C=1073741823,O="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t.g?t.g:{};function F(e){var n=[];return{on:function(e){n.push(e)},off:function(e){n=n.filter((function(n){return n!==e}))},get:function(){return e},set:function(t,r){e=t,n.forEach((function(n){return n(e,r)}))}}}const k=e.createContext||function(n,t){var r,l,s,i="__create-react-context-"+((O[s="__global_unique_id__"]=(O[s]||0)+1)+"__"),c=function(e){function n(){var n;return(n=e.apply(this,arguments)||this).emitter=F(n.props.value),n}a(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((l=r)===(o=a)?0!==l||1/l==1/o:l!=l&&o!=o)?n=0:(n="function"==typeof t?t(r,a):C,0!=(n|=0)&&this.emitter.set(e.value,n))}var l,o},r.render=function(){return this.props.children},n}(e.Component);c.childContextTypes=((r={})[i]=o().object.isRequired,r);var u=function(e){function t(){var n;return(n=e.apply(this,arguments)||this).state={value:n.getValue()},n.onUpdate=function(e,t){0!=((0|n.observedBits)&t)&&n.setState({value:n.getValue()})},n}a(t,e);var r=t.prototype;return r.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?C:n},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?C:e},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():n},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(e.Component);return u.contextTypes=((l={})[i]=o().object,l),{Provider:c,Consumer:u}};var x=t(658),D=t.n(x);function Y(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}t(864),t(679);var S=function(e){var n=k();return n.displayName="Router-History",n}(),X=function(e){var n=k();return n.displayName="Router",n}(),N=function(n){function t(e){var t;return(t=n.call(this,e)||this).state={location:e.history.location},t._isMounted=!1,t._pendingLocation=null,e.staticContext||(t.unlisten=e.history.listen((function(e){t._isMounted?t.setState({location:e}):t._pendingLocation=e}))),t}a(t,n),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var r=t.prototype;return r.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},r.componentWillUnmount=function(){this.unlisten&&this.unlisten()},r.render=function(){return e.createElement(X.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},e.createElement(S.Provider,{children:this.props.children||null,value:this.props.history}))},t}(e.Component);e.Component,e.Component;var _={},I=0;function B(e,n){void 0===n&&(n={}),("string"==typeof n||Array.isArray(n))&&(n={path:n});var t=n,r=t.path,a=t.exact,l=void 0!==a&&a,o=t.strict,s=void 0!==o&&o,i=t.sensitive,c=void 0!==i&&i;return[].concat(r).reduce((function(n,t){if(!t&&""!==t)return null;if(n)return n;var r=function(e,n){var t=""+n.end+n.strict+n.sensitive,r=_[t]||(_[t]={});if(r[e])return r[e];var a=[],l={regexp:D()(e,a,n),keys:a};return I<1e4&&(r[e]=l,I++),l}(t,{end:l,strict:s,sensitive:c}),a=r.regexp,o=r.keys,i=a.exec(e);if(!i)return null;var u=i[0],f=i.slice(1),A=e===u;return l&&!A?null:{path:t,url:"/"===t&&""===u?"/":u,isExact:A,params:o.reduce((function(e,n,t){return e[n.name]=f[t],e}),{})}}),null)}var j=function(n){function t(){return n.apply(this,arguments)||this}return a(t,n),t.prototype.render=function(){var n=this;return e.createElement(X.Consumer,null,(function(t){t||u(!1);var r=n.props.location||t.location,a=s({},t,{location:r,match:n.props.computedMatch?n.props.computedMatch:n.props.path?B(r.pathname,n.props):t.match}),l=n.props,o=l.children,i=l.component,c=l.render;return Array.isArray(o)&&0===o.length&&(o=null),e.createElement(X.Provider,{value:a},a.match?o?"function"==typeof o?o(a):o:i?e.createElement(i,a):c?c(a):null:"function"==typeof o?o(a):null)}))},t}(e.Component);e.Component,e.Component,e.useContext;var P=function(n){function t(){for(var e,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return(e=n.call.apply(n,[this].concat(r))||this).history=g(e.props),e}return a(t,n),t.prototype.render=function(){return e.createElement(N,{history:this.history,children:this.props.children})},t}(e.Component);e.Component;var T=function(e,n){return"function"==typeof e?e(n):e},L=function(e,n){return"string"==typeof e?m(e,null,null,n):e},R=function(e){return e},z=e.forwardRef;void 0===z&&(z=R);var M=z((function(n,t){var r=n.innerRef,a=n.navigate,l=n.onClick,o=Y(n,["innerRef","navigate","onClick"]),i=o.target,c=s({},o,{onClick:function(e){try{l&&l(e)}catch(n){throw e.preventDefault(),n}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),a())}});return c.ref=R!==z&&t||r,e.createElement("a",c)})),U=z((function(n,t){var r=n.component,a=void 0===r?M:r,l=n.replace,o=n.to,i=n.innerRef,c=Y(n,["component","replace","to","innerRef"]);return e.createElement(X.Consumer,null,(function(n){n||u(!1);var r=n.history,f=L(T(o,n.location),n.location),A=f?r.createHref(f):"",d=s({},c,{href:A,navigate:function(){var e=T(o,n.location);(l?r.replace:r.push)(e)}});return R!==z?d.ref=t||i:d.innerRef=i,e.createElement(a,d)}))})),W=function(e){return e},V=e.forwardRef;void 0===V&&(V=W),V((function(n,t){var r=n["aria-current"],a=void 0===r?"page":r,l=n.activeClassName,o=void 0===l?"active":l,i=n.activeStyle,c=n.className,f=n.exact,A=n.isActive,d=n.location,v=n.sensitive,m=n.strict,p=n.style,h=n.to,E=n.innerRef,y=Y(n,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return e.createElement(X.Consumer,null,(function(n){n||u(!1);var r=d||n.location,l=L(T(h,r),r),w=l.pathname,b=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),g=b?B(r.pathname,{path:b,exact:f,sensitive:v,strict:m}):null,C=!!(A?A(g,r):g),O=C?function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return n.filter((function(e){return e})).join(" ")}(c,o):c,F=C?s({},p,{},i):p,k=s({"aria-current":C&&a||null,className:O,style:F,to:l},y);return W!==V?k.ref=t||E:k.innerRef=E,e.createElement(U,k)}))}));const q=function(){return e.createElement("header",null,e.createElement("nav",null,e.createElement("ul",null,e.createElement("li",null,e.createElement(U,{to:"/"},"HOME")),e.createElement("li",null,e.createElement(U,{to:"/admin"},"ADMIN")))))},$=function(){return e.createElement("ul",{className:"side-nav"},e.createElement("li",{onClick:function(){document.querySelector(".menu-container").style.right="0"}},"MENU"),e.createElement("li",{onClick:function(){document.querySelector(".reservation").style.right="0"}},"RESERVATION"),e.createElement("li",null,"LOCATION"),e.createElement("li",null,"ABOUT"))},H=function(){return e.createElement("h1",null,"Admin page")},Q=t.p+"165a2fe2c46e22857d65450c17966d33.png",K=t.p+"28f23cb34c3d7c585157fdb973a350d8.png",J=function(){return e.createElement("div",{className:"menu-container"},e.createElement("div",{className:"menu"},e.createElement("div",{className:"close",onClick:function(){document.querySelector(".menu-container").style.right="-3000px"}},"×"),e.createElement("img",{className:"logo",src:K}),e.createElement("div",{className:"menu1"},e.createElement("h2",null,"Lunch Course"),e.createElement("p",null,"45CAD pp"),e.createElement("h3",null,"Suljuksim(Amuse-bouche)"),e.createElement("p",null,"Cherry tomato marinated in ",e.createElement("br",null)," fermented korean wild raspberry sauce"),e.createElement("h3",null,"Juksang(Porridge)"),e.createElement("p",null,"Porridge with spring greens ",e.createElement("br",null)," & ",e.createElement("br",null)," Seasonal watery kimchi"),e.createElement("h3",null,"Sangmi(Salad or Cold Preparation)"),e.createElement("p",null,"Tofu Ball with spring greens ",e.createElement("br",null)," & ",e.createElement("br",null)," Seasonal greens with mungbean jelly salad"),e.createElement("h3",null,"Ipgasim(Dessert)"),e.createElement("p",null,"Spring mugwort tea ",e.createElement("br",null),"& ",e.createElement("br",null),"Korean traditional fruits jelly")),e.createElement("div",{className:"menu2"},e.createElement("h2",null,"Dinner Course"),e.createElement("p",null,"55CAD pp"),e.createElement("h3",null,"Suljuksim(Amuse-bouche)"),e.createElement("p",null,"Temple recipe vege-chips ",e.createElement("br",null),"&",e.createElement("br",null)," Fermented Pickly Ash pepper Tea"),e.createElement("h3",null,"Juksang(Porridge)"),e.createElement("p",null,"Porridge with spring greens ",e.createElement("br",null),"& ",e.createElement("br",null),"Seasonal watery kimchi"),e.createElement("h3",null,"Sangmi(Salad or Cold Preparation)"),e.createElement("p",null,"Tofu Ball with spring greens ",e.createElement("br",null),"&",e.createElement("br",null)," Seasonal greens with mungbean jelly salad"),e.createElement("h3",null,"Ipgasim(Dessert)"),e.createElement("p",null,"Spring mugwort tea ",e.createElement("br",null),"& ",e.createElement("br",null),"Korean traditional fruits jelly"))),e.createElement("p",{className:"menu-footer"},"*VAT included"))};function G(){return Array.prototype.slice.call(arguments).reduce((function(e,n){return"string"==typeof n||Array.isArray(n)?e.concat(n):e}),[]).filter(Boolean).join(" ")}var Z=t(917),ee=t.n(Z),ne=ee()((function(){var e=[];return"undefined"!=typeof window&&(window.navigator.languages&&(e=e.concat(window.navigator.languages)),window.navigator.language&&e.push(window.navigator.language),window.navigator.userLanguage&&e.push(window.navigator.userLanguage),window.navigator.browserLanguage&&e.push(window.navigator.browserLanguage),window.navigator.systemLanguage&&e.push(window.navigator.systemLanguage)),e.push("en-US"),function(e){return e.map((function(e){if(!e||-1===e.indexOf("-")||e.toLowerCase()!==e)return e;var n=e.split("-");return"".concat(n[0],"-").concat(n[1].toUpperCase())}))}(e.filter((function(e,n,t){return t.indexOf(e)===n})))})),te=ee()((function(){return ne()[0]}));const re=te;function ae(e,n,t){return function(r){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,l=e(r)+a;return n(l)}}function le(e){return function(n){return new Date(e(n).getTime()-1)}}function oe(e){return function(n){return e.map((function(e){return e(n)}))}}function se(e){if(e instanceof Date)return e.getFullYear();if("number"==typeof e)return e;var n=parseInt(e,10);if("string"==typeof e&&!isNaN(n))return n;throw new Error("Failed to get year from date: ".concat(e,"."))}function ie(e){if(e instanceof Date)return e.getMonth();throw new Error("Failed to get month from date: ".concat(e,"."))}function ce(e){if(e instanceof Date)return e.getDate();throw new Error("Failed to get year from date: ".concat(e,"."))}function ue(e){var n=se(e),t=n+(1-n)%100,r=new Date;return r.setFullYear(t,0,1),r.setHours(0,0,0,0),r}var fe=ae(se,ue,-100),Ae=ae(se,ue,100),de=le(Ae),ve=ae(se,de,-100),me=(ae(se,de,100),oe([ue,de]));function pe(e){var n=se(e),t=n+(1-n)%10,r=new Date;return r.setFullYear(t,0,1),r.setHours(0,0,0,0),r}var he=ae(se,pe,-10),Ee=ae(se,pe,10),ye=le(Ee),we=ae(se,ye,-10),be=(ae(se,ye,10),oe([pe,ye]));function ge(e){var n=se(e),t=new Date;return t.setFullYear(n,0,1),t.setHours(0,0,0,0),t}var Ce=ae(se,ge,-1),Oe=ae(se,ge,1),Fe=le(Oe),ke=ae(se,Fe,-1),xe=(ae(se,Fe,1),oe([ge,Fe]));function De(e,n){return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n,a=se(t),l=ie(t)+r,o=new Date;return o.setFullYear(a,l,1),o.setHours(0,0,0,0),e(o)}}function Ye(e){var n=se(e),t=ie(e),r=new Date;return r.setFullYear(n,t,1),r.setHours(0,0,0,0),r}var Se=De(Ye,-1),Xe=De(Ye,1),Ne=le(Xe),_e=De(Ne,-1),Ie=(De(Ne,1),oe([Ye,Ne]));function Be(e,n){return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n,a=se(t),l=ie(t),o=ce(t)+r,s=new Date;return s.setFullYear(a,l,o),s.setHours(0,0,0,0),e(s)}}function je(e){var n=se(e),t=ie(e),r=ce(e),a=new Date;return a.setFullYear(n,t,r),a.setHours(0,0,0,0),a}Be(je,-1);var Pe,Te=le(Be(je,1)),Le=(Be(Te,-1),Be(Te,1),oe([je,Te]));function Re(e){return ce(Ne(e))}function ze(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function Me(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var Ue,We={ARABIC:"Arabic",HEBREW:"Hebrew",ISO_8601:"ISO 8601",US:"US"},Ve=(Me(Pe={},We.US,["en-CA","en-US","es-AR","es-BO","es-CL","es-CO","es-CR","es-DO","es-EC","es-GT","es-HN","es-MX","es-NI","es-PA","es-PE","es-PR","es-SV","es-VE","pt-BR"]),Me(Pe,We.ARABIC,["ar","ar-AE","ar-BH","ar-DZ","ar-EG","ar-IQ","ar-JO","ar-KW","ar-LY","ar-OM","ar-QA","ar-SA","ar-SD","ar-SY","ar-YE","dv","dv-MV","ps","ps-AR"]),Me(Pe,We.HEBREW,["he","he-IL"]),Pe),qe=(Ue=Array(7),function(e){if(Array.isArray(e))return ze(e)}(Ue)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(Ue)||function(e,n){if(e){if("string"==typeof e)return ze(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ze(e,n):void 0}}(Ue)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(e,n){return n}));function $e(e){return function(n,t){return function(e){return function(n,t){return t.toLocaleString(n||re(),e)}}(e)(n,function(e){var n=new Date(e);return new Date(n.setHours(12))}(t))}}$e({day:"numeric",month:"numeric",year:"numeric"});var He=$e({day:"numeric"}),Qe=$e({day:"numeric",month:"long",year:"numeric"}),Ke=$e({month:"long"}),Je=$e({month:"long",year:"numeric"}),Ge=$e({weekday:"short"}),Ze=$e({weekday:"long"}),en=$e({year:"numeric"}),nn=qe[0],tn=qe[5],rn=qe[6];function an(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:We.ISO_8601,t=e.getDay();switch(n){case We.ISO_8601:return(t+6)%7;case We.ARABIC:return(t+1)%7;case We.HEBREW:case We.US:return t;default:throw new Error("Unsupported calendar type.")}}function ln(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:We.ISO_8601,t=se(e),r=ie(e),a=e.getDate()-an(e,n);return new Date(t,r,a)}function on(e,n){switch(e){case"century":return ue(n);case"decade":return pe(n);case"year":return ge(n);case"month":return Ye(n);case"day":return je(n);default:throw new Error("Invalid rangeType: ".concat(e))}}function sn(e,n){switch(e){case"century":return Ae(n);case"decade":return Ee(n);case"year":return Oe(n);case"month":return Xe(n);default:throw new Error("Invalid rangeType: ".concat(e))}}function cn(e,n){switch(e){case"century":return de(n);case"decade":return ye(n);case"year":return Fe(n);case"month":return Ne(n);case"day":return Te(n);default:throw new Error("Invalid rangeType: ".concat(e))}}function un(e,n){switch(e){case"century":return me(n);case"decade":return be(n);case"year":return xe(n);case"month":return Ie(n);case"day":return Le(n);default:throw new Error("Invalid rangeType: ".concat(e))}}function fn(e,n,t){var r=[n,t].sort((function(e,n){return e-n}));return[on(e,r[0]),cn(e,r[1])]}function An(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:en,t=arguments.length>2?arguments[2]:void 0;return t.map((function(t){return n(e,t)})).join(" – ")}function dn(e,n,t){return An(e,n,be(t))}function vn(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:We.ISO_8601,t=e.getDay();switch(n){case We.ARABIC:case We.HEBREW:return t===tn||t===rn;case We.ISO_8601:case We.US:return t===rn||t===nn;default:throw new Error("Unsupported calendar type.")}}function mn(e){return(mn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var pn=Object.values(We),hn=["century","decade","year","month"],En=o().oneOf(pn),yn=o().oneOfType([o().string,o().arrayOf(o().string)]),wn=function(e,n,t){var r=e[n];if(!r)return null;if(!(r instanceof Date))return new Error("Invalid prop `".concat(n,"` of type `").concat(mn(r),"` supplied to `").concat(t,"`, expected instance of `Date`."));var a=e.maxDate;return a&&r>a?new Error("Invalid prop `".concat(n,"` of type `").concat(mn(r),"` supplied to `").concat(t,"`, minDate cannot be larger than maxDate.")):null},bn=function(e,n,t){var r=e[n];if(!r)return null;if(!(r instanceof Date))return new Error("Invalid prop `".concat(n,"` of type `").concat(mn(r),"` supplied to `").concat(t,"`, expected instance of `Date`."));var a=e.minDate;return a&&r<a?new Error("Invalid prop `".concat(n,"` of type `").concat(mn(r),"` supplied to `").concat(t,"`, maxDate cannot be smaller than minDate.")):null},gn=o().oneOfType([o().func,o().shape({current:o().any})]),Cn=o().oneOfType([o().instanceOf(Date),o().arrayOf(o().instanceOf(Date))]),On=o().arrayOf(o().oneOf(hn)),Fn=function(e,n,t){var r=e[n],a=e.views||hn;return void 0!==r&&-1===a.indexOf(r)?new Error("Invalid prop `".concat(n,"` of value `").concat(r,"` supplied to `").concat(t,"`, expected one of [").concat(a.map((function(e){return'"'.concat(e,'"')})).join(", "),"].")):null};Fn.isRequired=function(e,n,t){var r=e[n];return r?Fn(e,n,t):new Error("The prop `".concat(n,"` is marked as required in `").concat(t,"`, but its value is `").concat(r,"`."))};var kn={activeStartDate:o().instanceOf(Date).isRequired,hover:o().instanceOf(Date),locale:o().string,maxDate:bn,minDate:wn,onClick:o().func,onMouseOver:o().func,tileClassName:o().oneOfType([o().func,yn]),tileContent:o().oneOfType([o().func,o().node]),value:Cn,valueType:o().string},xn={activeStartDate:o().instanceOf(Date).isRequired,classes:o().arrayOf(o().string).isRequired,date:o().instanceOf(Date).isRequired,locale:o().string,maxDate:bn,minDate:wn,onClick:o().func,onMouseOver:o().func,style:o().objectOf(o().oneOfType([o().string,o().number])),tileClassName:o().oneOfType([o().func,yn]),tileContent:o().oneOfType([o().func,o().node]),tileDisabled:o().func},Dn="react-calendar__navigation";function Yn(n){var t,r=n.activeStartDate,a=n.drillUp,l=n.formatMonthYear,o=void 0===l?Je:l,s=n.formatYear,i=void 0===s?en:s,c=n.locale,u=n.maxDate,f=n.minDate,A=n.navigationAriaLabel,d=void 0===A?"":A,v=n.navigationLabel,m=n.next2AriaLabel,p=void 0===m?"":m,h=n.next2Label,E=void 0===h?"»":h,y=n.nextAriaLabel,w=void 0===y?"":y,b=n.nextLabel,g=void 0===b?"›":b,C=n.prev2AriaLabel,O=void 0===C?"":C,F=n.prev2Label,k=void 0===F?"«":F,x=n.prevAriaLabel,D=void 0===x?"":x,Y=n.prevLabel,S=void 0===Y?"‹":Y,X=n.setActiveStartDate,N=n.showDoubleView,_=n.view,I=n.views.indexOf(_)>0,B="century"!==_,j=function(e,n){switch(e){case"century":return fe(n);case"decade":return he(n);case"year":return Ce(n);case"month":return Se(n);default:throw new Error("Invalid rangeType: ".concat(e))}}(_,r),P=B&&function(e,n){switch(e){case"decade":return he(n,-100);case"year":return Ce(n,-10);case"month":return Se(n,-12);default:throw new Error("Invalid rangeType: ".concat(e))}}(_,r),T=sn(_,r),L=B&&function(e,n){switch(e){case"decade":return Ee(n,100);case"year":return Oe(n,10);case"month":return Xe(n,12);default:throw new Error("Invalid rangeType: ".concat(e))}}(_,r),R=function(){if(j.getFullYear()<0)return!0;var e=function(e,n){switch(e){case"century":return ve(n);case"decade":return we(n);case"year":return ke(n);case"month":return _e(n);default:throw new Error("Invalid rangeType: ".concat(e))}}(_,r);return f&&f>=e}(),z=B&&function(){if(P.getFullYear()<0)return!0;var e=function(e,n){switch(e){case"decade":return we(n,-100);case"year":return ke(n,-10);case"month":return _e(n,-12);default:throw new Error("Invalid rangeType: ".concat(e))}}(_,r);return f&&f>=e}(),M=u&&u<=T,U=B&&u&&u<=L;function W(e){var n=function(){switch(_){case"century":return function(e,n,t){return An(e,n,me(t))}(c,i,e);case"decade":return dn(c,i,e);case"year":return i(c,e);case"month":return o(c,e);default:throw new Error("Invalid view: ".concat(_,"."))}}();return v?v({date:e,label:n,locale:c||te(),view:_}):n}return e.createElement("div",{className:Dn,style:{display:"flex"}},null!==k&&B&&e.createElement("button",{"aria-label":O,className:"".concat(Dn,"__arrow ").concat(Dn,"__prev2-button"),disabled:z,onClick:function(){X(P)},type:"button"},k),null!==S&&e.createElement("button",{"aria-label":D,className:"".concat(Dn,"__arrow ").concat(Dn,"__prev-button"),disabled:R,onClick:function(){X(j)},type:"button"},S),(t="".concat(Dn,"__label"),e.createElement("button",{"aria-label":d,className:t,disabled:!I,onClick:a,style:{flexGrow:1},type:"button"},e.createElement("span",{className:"".concat(t,"__labelText ").concat(t,"__labelText--from")},W(r)),N&&e.createElement(e.Fragment,null,e.createElement("span",{className:"".concat(t,"__divider")}," ","–"," "),e.createElement("span",{className:"".concat(t,"__labelText ").concat(t,"__labelText--to")},W(T))))),null!==g&&e.createElement("button",{"aria-label":w,className:"".concat(Dn,"__arrow ").concat(Dn,"__next-button"),disabled:M,onClick:function(){X(T)},type:"button"},g),null!==E&&B&&e.createElement("button",{"aria-label":p,className:"".concat(Dn,"__arrow ").concat(Dn,"__next2-button"),disabled:U,onClick:function(){X(L)},type:"button"},E))}function Sn(){return(Sn=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function Xn(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function Nn(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Xn(Object(t),!0).forEach((function(n){_n(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Xn(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function _n(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function In(e){return"".concat(e,"%")}function Bn(n){var t=n.children,r=n.className,a=n.direction,l=n.count,o=n.offset,s=n.style,i=n.wrap,c=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(n,["children","className","direction","count","offset","style","wrap"]);return e.createElement("div",Sn({className:r,style:Nn({display:"flex",flexDirection:a,flexWrap:i?"wrap":"no-wrap"},s)},c),e.Children.map(t,(function(n,t){return e.cloneElement(n,Nn(Nn({},n.props),{},{style:{flexBasis:In(100/l),maxWidth:In(100/l),overflow:"hidden",marginLeft:o&&0===t?In(100*o/l):null}}))})))}function jn(e){return function(e){if(Array.isArray(e))return Pn(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return Pn(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Pn(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Pn(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function Tn(e,n){return n[0]<=e&&n[1]>=e}function Ln(e,n){return e[0]<=n[0]&&e[1]>=n[1]}function Rn(e,n){return Tn(e[0],n)||Tn(e[1],n)}function zn(e,n,t){var r=[];if(Rn(n,e)){r.push(t);var a=Tn(e[0],n),l=Tn(e[1],n);a&&r.push("".concat(t,"Start")),l&&r.push("".concat(t,"End")),a&&l&&r.push("".concat(t,"BothEnds"))}return r}function Mn(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.value,t=e.valueType,r=e.date,a=e.dateType,l=e.hover,o="react-calendar__tile",s=[o];if(!r)return s;if(!Array.isArray(r)&&!a)throw new Error("getTileClasses(): Unable to get tile activity classes because one or more required arguments were not passed.");var i=new Date,c=Array.isArray(r)?r:un(a,r);if(Tn(i,c)&&s.push("".concat(o,"--now")),!n)return s;if(!Array.isArray(n)&&!t)throw new Error("getTileClasses(): Unable to get tile activity classes because one or more required arguments were not passed.");var u=Array.isArray(n)?n:un(t,n);Ln(u,c)?s.push("".concat(o,"--active")):Rn(u,c)&&s.push("".concat(o,"--hasActive"));var f=zn(u,c,"".concat(o,"--range"));if(s.push.apply(s,jn(f)),l){var A=l>u[1]?[u[1],l]:[l,u[0]],d=zn(A,c,"".concat(o,"--hover"));s.push.apply(s,jn(d))}return s}function Un(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function Wn(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Un(Object(t),!0).forEach((function(n){Vn(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Un(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function Vn(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function qn(){return(qn=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function $n(n){for(var t=n.className,r=n.count,a=void 0===r?3:r,l=n.dateTransform,o=n.dateType,s=n.end,i=n.hover,c=n.offset,u=n.start,f=n.step,A=void 0===f?1:f,d=n.tile,v=n.value,m=n.valueType,p=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(n,["className","count","dateTransform","dateType","end","hover","offset","start","step","tile","value","valueType"]),h=[],E=u;E<=s;E+=A){var y=l(E);h.push(e.createElement(d,qn({key:y.getTime(),classes:Mn({value:v,valueType:m,date:y,dateType:o,hover:i}),date:y,point:E},p)))}return e.createElement(Bn,{className:t,count:a,offset:c,wrap:!0},h)}function Hn(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function Qn(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Hn(Object(t),!0).forEach((function(n){rt(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Hn(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function Kn(e){return(Kn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Jn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Gn(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Zn(e,n){return(Zn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function et(e,n){return!n||"object"!==Kn(n)&&"function"!=typeof n?nt(e):n}function nt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function tt(e){return(tt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function rt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function at(e,n){var t=e.activeStartDate,r=e.date,a=e.view;return"function"==typeof n?n({activeStartDate:t,date:r,view:a}):n}Yn.propTypes={activeStartDate:o().instanceOf(Date).isRequired,drillUp:o().func.isRequired,formatMonthYear:o().func,formatYear:o().func,locale:o().string,maxDate:o().instanceOf(Date),minDate:o().instanceOf(Date),navigationAriaLabel:o().string,navigationLabel:o().func,next2AriaLabel:o().string,next2Label:o().node,nextAriaLabel:o().string,nextLabel:o().node,prev2AriaLabel:o().string,prev2Label:o().node,prevAriaLabel:o().string,prevLabel:o().node,setActiveStartDate:o().func.isRequired,showDoubleView:o().bool,view:Fn.isRequired,views:On.isRequired},Bn.propTypes={children:o().node,className:o().string,count:o().number.isRequired,direction:o().string,offset:o().number,style:o().objectOf(o().oneOfType([o().string,o().number])),wrap:o().bool},$n.propTypes=Wn(Wn({},kn),{},{activeStartDate:o().instanceOf(Date),count:o().number,dateTransform:o().func.isRequired,dateType:o().string,offset:o().number,step:o().number,tile:o().func.isRequired});var lt=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Zn(e,n)}(i,n);var t,r,a,l,o,s=(l=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=tt(l);if(o){var t=tt(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return et(this,e)});function i(){var e;Jn(this,i);for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return rt(nt(e=s.call.apply(s,[this].concat(t))),"state",{}),e}return t=i,a=[{key:"getDerivedStateFromProps",value:function(e,n){var t=e.tileClassName,r=e.tileContent,a={};return t!==n.tileClassNameProps&&(a.tileClassName=at(e,t),a.tileClassNameProps=t),r!==n.tileContentProps&&(a.tileContent=at(e,r),a.tileContentProps=r),a}}],(r=[{key:"render",value:function(){var n=this.props,t=n.activeStartDate,r=n.children,a=n.classes,l=n.date,o=n.formatAbbr,s=n.locale,i=n.maxDate,c=n.maxDateTransform,u=n.minDate,f=n.minDateTransform,A=n.onClick,d=n.onMouseOver,v=n.style,m=n.tileDisabled,p=n.view,h=this.state,E=h.tileClassName,y=h.tileContent;return e.createElement("button",{className:G(a,E),disabled:u&&f(u)>l||i&&c(i)<l||m&&m({activeStartDate:t,date:l,view:p}),onClick:A&&function(e){return A(l,e)},onFocus:d&&function(){return d(l)},onMouseOver:d&&function(){return d(l)},style:v,type:"button"},o?e.createElement("abbr",{"aria-label":o(s,l)},r):r,y)}}])&&Gn(t.prototype,r),a&&Gn(t,a),i}(e.Component);function ot(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function st(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?ot(Object(t),!0).forEach((function(n){it(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ot(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function it(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function ct(){return(ct=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function ut(n){var t=n.classes,r=n.formatYear,a=void 0===r?en:r,l=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(n,["classes","formatYear"]),o=l.date,s=l.locale;return e.createElement(lt,ct({},l,{classes:[].concat(t,"react-calendar__century-view__decades__decade"),maxDateTransform:ye,minDateTransform:pe,view:"century"}),dn(s,a,o))}function ft(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function At(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function dt(){return(dt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function vt(n){var t=se(ue(n.activeStartDate)),r=t+99;return e.createElement($n,dt({},n,{className:"react-calendar__century-view__decades",dateTransform:pe,dateType:"decade",end:r,start:t,step:10,tile:ut}))}function mt(n){return e.createElement("div",{className:"react-calendar__century-view"},e.createElement(vt,n))}function pt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function ht(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?pt(Object(t),!0).forEach((function(n){Et(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):pt(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function Et(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function yt(){return(yt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function wt(n){var t=n.classes,r=n.formatYear,a=void 0===r?en:r,l=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(n,["classes","formatYear"]),o=l.date,s=l.locale;return e.createElement(lt,yt({},l,{classes:[].concat(t,"react-calendar__decade-view__years__year"),maxDateTransform:Fe,minDateTransform:ge,view:"decade"}),a(s,o))}function bt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function gt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Ct(){return(Ct=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function Ot(n){var t=se(pe(n.activeStartDate)),r=t+9;return e.createElement($n,Ct({},n,{className:"react-calendar__decade-view__years",dateTransform:function(e){var n=new Date;return n.setFullYear(e,0,1),n.setHours(0,0,0,0),n},dateType:"year",end:r,start:t,tile:wt}))}function Ft(n){return e.createElement("div",{className:"react-calendar__decade-view"},e.createElement(Ot,n))}function kt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function xt(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?kt(Object(t),!0).forEach((function(n){Dt(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):kt(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function Dt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Yt(){return(Yt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function St(n){var t=n.classes,r=n.formatMonth,a=void 0===r?Ke:r,l=n.formatMonthYear,o=void 0===l?Je:l,s=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(n,["classes","formatMonth","formatMonthYear"]),i=s.date,c=s.locale;return e.createElement(lt,Yt({},s,{classes:[].concat(t,"react-calendar__year-view__months__month"),formatAbbr:o,maxDateTransform:Ne,minDateTransform:Ye,view:"year"}),a(c,i))}function Xt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function Nt(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Xt(Object(t),!0).forEach((function(n){_t(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Xt(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function _t(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function It(){return(It=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function Bt(n){var t=se(n.activeStartDate);return e.createElement($n,It({},n,{className:"react-calendar__year-view__months",dateTransform:function(e){var n=new Date;return n.setFullYear(t,e,1),n.setHours(0,0,0,0),n},dateType:"month",end:11,start:0,tile:St}))}function jt(n){return e.createElement("div",{className:"react-calendar__year-view"},e.createElement(Bt,n))}function Pt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function Tt(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Pt(Object(t),!0).forEach((function(n){Lt(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Pt(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function Lt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Rt(){return(Rt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}lt.propTypes=Qn(Qn({},xn),{},{children:o().node.isRequired,formatAbbr:o().func,maxDateTransform:o().func.isRequired,minDateTransform:o().func.isRequired}),ut.propTypes=st(st({},xn),{},{formatYear:o().func}),vt.propTypes=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?ft(Object(t),!0).forEach((function(n){At(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ft(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},kn),wt.propTypes=ht(ht({},xn),{},{formatYear:o().func}),Ot.propTypes=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?bt(Object(t),!0).forEach((function(n){gt(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):bt(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},kn),St.propTypes=xt(xt({},xn),{},{formatMonth:o().func,formatMonthYear:o().func}),Bt.propTypes=Nt(Nt({},kn),{},{locale:o().string});var zt="react-calendar__month-view__days__day";function Mt(n){var t=n.formatDay,r=void 0===t?He:t,a=n.formatLongDate,l=void 0===a?Qe:a,o=n.calendarType,s=n.classes,i=n.currentMonthIndex,c=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(n,["formatDay","formatLongDate","calendarType","classes","currentMonthIndex"]),u=c.date,f=c.locale;return e.createElement(lt,Rt({},c,{classes:[].concat(s,zt,vn(u,o)?"".concat(zt,"--weekend"):null,u.getMonth()!==i?"".concat(zt,"--neighboringMonth"):null),formatAbbr:l,maxDateTransform:Te,minDateTransform:je,view:"month"}),r(f,u))}function Ut(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function Wt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Vt(){return(Vt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function qt(n){var t=n.activeStartDate,r=n.calendarType,a=n.showFixedNumberOfWeeks,l=n.showNeighboringMonth,o=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(n,["showFixedNumberOfWeeks","showNeighboringMonth"]),s=se(t),i=ie(t),c=a||l,u=an(t,r),f=c?0:u,A=1+(c?-u:0),d=function(){if(a)return A+42-1;var e=Re(t);if(l){var n=new Date;return n.setFullYear(s,i,e),n.setHours(0,0,0,0),e+(7-an(n,r)-1)}return e}();return e.createElement($n,Vt({},o,{className:"react-calendar__month-view__days",count:7,currentMonthIndex:i,dateTransform:function(e){var n=new Date;return n.setFullYear(s,i,e),n.setHours(0,0,0,0),n},dateType:"day",end:d,offset:f,start:A,tile:Mt}))}Mt.propTypes=Tt(Tt({},xn),{},{currentMonthIndex:o().number.isRequired,formatDay:o().func,formatLongDate:o().func}),qt.propTypes=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Ut(Object(t),!0).forEach((function(n){Wt(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Ut(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({calendarType:En.isRequired,showFixedNumberOfWeeks:o().bool,showNeighboringMonth:o().bool},kn);var $t="react-calendar__month-view__weekdays";function Ht(n){for(var t=n.calendarType,r=n.formatShortWeekday,a=void 0===r?Ge:r,l=n.locale,o=n.onMouseLeave,s=Ye(new Date),i=se(s),c=ie(s),u=[],f=1;f<=7;f+=1){var A=new Date(i,c,f-an(s,t)),d=Ze(l,A);u.push(e.createElement("div",{key:f,className:"".concat($t,"__weekday")},e.createElement("abbr",{"aria-label":d,title:d},a(l,A).replace(".",""))))}return e.createElement(Bn,{className:$t,count:7,onFocus:o,onMouseOver:o},u)}function Qt(){return(Qt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function Kt(n){var t=n.date,r=n.onClickWeekNumber,a=n.weekNumber,l={className:"react-calendar__tile",style:{flexGrow:1}},o=e.createElement("span",null,a);return r?e.createElement("button",Qt({},l,{onClick:function(e){return r(a,t,e)},type:"button"}),o):e.createElement("div",l,o)}function Jt(n){var t=n.activeStartDate,r=n.calendarType,a=n.onClickWeekNumber,l=n.onMouseLeave,o=n.showFixedNumberOfWeeks,s=function(){if(o)return 6;var e=Re(t)-(7-an(t,r));return 1+Math.ceil(e/7)}(),i=function(){for(var e=se(t),n=ie(t),a=ce(t),l=[],o=0;o<s;o+=1)l.push(ln(new Date(e,n,a+7*o),r));return l}(),c=i.map((function(e){return function(e){var n,t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:We.ISO_8601)===We.US?We.US:We.ISO_8601,r=ln(e,t),a=se(e)+1;do{n=ln(new Date(a,0,t===We.ISO_8601?4:1),t),a-=1}while(e-n<0);return Math.round((r-n)/6048e5)+1}(e,r)}));return e.createElement(Bn,{className:"react-calendar__month-view__weekNumbers",count:s,direction:"column",onFocus:l,onMouseOver:l,style:{flexBasis:"calc(100% * (1 / 8)",flexShrink:0}},c.map((function(n,t){return e.createElement(Kt,{key:n,date:i[t],onClickWeekNumber:a,weekNumber:n})})))}function Gt(){return(Gt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function Zt(n){var t=n.activeStartDate,r=n.locale,a=n.onMouseLeave,l=n.showFixedNumberOfWeeks,o=n.calendarType,s=void 0===o?function(e){return Object.keys(Ve).find((function(n){return Ve[n].includes(e)}))||We.ISO_8601}(r):o,i=n.formatShortWeekday,c=n.onClickWeekNumber,u=n.showWeekNumbers,f=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(n,["calendarType","formatShortWeekday","onClickWeekNumber","showWeekNumbers"]),A="react-calendar__month-view";return e.createElement("div",{className:G(A,u?"".concat(A,"--weekNumbers"):"")},e.createElement("div",{style:{display:"flex",alignItems:"flex-end"}},u?e.createElement(Jt,{activeStartDate:t,calendarType:s,onClickWeekNumber:c,onMouseLeave:a,showFixedNumberOfWeeks:l}):null,e.createElement("div",{style:{flexGrow:1,width:"100%"}},e.createElement(Ht,{calendarType:s,formatShortWeekday:i,locale:r,onMouseLeave:a}),e.createElement(qt,Gt({calendarType:s},f)))))}function er(){return(er=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function nr(e){return(nr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function tr(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function rr(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ar(e,n){return(ar=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function lr(e,n){return!n||"object"!==nr(n)&&"function"!=typeof n?or(e):n}function or(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function sr(e){return(sr=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ir(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function cr(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?ir(Object(t),!0).forEach((function(n){ur(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ir(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function ur(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function fr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}Ht.propTypes={calendarType:En.isRequired,formatShortWeekday:o().func,locale:o().string,onMouseLeave:o().func},Kt.propTypes={date:o().instanceOf(Date).isRequired,onClickWeekNumber:o().func,weekNumber:o().node.isRequired},Jt.propTypes={activeStartDate:o().instanceOf(Date).isRequired,calendarType:En.isRequired,onClickWeekNumber:o().func,onMouseLeave:o().func,showFixedNumberOfWeeks:o().bool},Zt.propTypes={activeStartDate:o().instanceOf(Date).isRequired,calendarType:En,formatShortWeekday:o().func,locale:o().string,onClickWeekNumber:o().func,onMouseLeave:o().func,showFixedNumberOfWeeks:o().bool,showWeekNumbers:o().bool};var Ar=new Date;Ar.setFullYear(1,0,1),Ar.setHours(0,0,0,0);var dr=new Date(864e13),vr="react-calendar",mr=["century","decade","year","month"],pr=[].concat(function(e){return function(e){if(Array.isArray(e))return fr(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return fr(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?fr(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(mr.slice(1)),["day"]);function hr(e,n){return mr.slice(mr.indexOf(e),mr.indexOf(n)+1)}function Er(e,n,t){return function(e,n,t){return-1!==hr(n,t).indexOf(e)}(e,n,t)?e:t}function yr(e){return pr[mr.indexOf(e)]}function wr(e,n){var t=e.value,r=e.minDate,a=e.maxDate,l=e.maxDetail,o=function(e,n){if(!e)return null;var t=Array.isArray(e)&&2===e.length?e[n]:e;if(!t)return null;var r=function(e){return e instanceof Date?e:new Date(e)}(t);if(isNaN(r.getTime()))throw new Error("Invalid date: ".concat(e));return r}(t,n);if(!o)return null;var s=yr(l);return function(e,n,t){return n&&n>e?n:t&&t<e?t:e}([on,cn][n](s,o),r,a)}var br=function(e){return wr(e,0)},gr=function(e){return wr(e,1)},Cr=function(e){var n=e.value;return Array.isArray(n)?n:[br,gr].map((function(n){return n(e)}))};function Or(e){var n=e.maxDate,t=e.maxDetail,r=e.minDate,a=e.minDetail,l=e.value;return on(Er(e.view,a,t),br({value:l,minDate:r,maxDate:n,maxDetail:t})||new Date)}var Fr=function(e){return e&&1===[].concat(e).length},kr=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&ar(e,n)}(s,n);var t,r,a,l,o=(a=s,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=sr(a);if(l){var t=sr(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return lr(this,e)});function s(){var e;tr(this,s);for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return ur(or(e=o.call.apply(o,[this].concat(t))),"state",{activeStartDate:e.props.defaultActiveStartDate,value:e.props.defaultValue,view:e.props.defaultView}),ur(or(e),"setStateAndCallCallbacks",(function(n,t,r){var a=or(e),l=a.activeStartDate,o=a.view,s=e.props,i=s.allowPartialRange,c=s.onActiveStartDateChange,u=s.onChange,f=s.onViewChange,A=s.selectRange,d={activeStartDate:l,view:o};e.setState(n,(function(){var a={activeStartDate:n.activeStartDate||e.activeStartDate,value:n.value||e.value,view:n.view||e.view};function l(e){return e in n&&(nr(n[e])!==nr(d[e])||(n[e]instanceof Date?n[e].getTime()!==d[e].getTime():n[e]!==d[e]))}l("activeStartDate")&&c&&c(a),l("view")&&f&&f(a),l("value")&&u&&(A&&Fr(n.value)?i&&u([n.value],t):u(n.value,t)),r&&r(a)}))})),ur(or(e),"setActiveStartDate",(function(n){e.setStateAndCallCallbacks({activeStartDate:n})})),ur(or(e),"drillDown",(function(n,t){if(e.drillDownAvailable){e.onClickTile(n,t);var r=or(e),a=r.view,l=r.views,o=e.props.onDrillDown,s=l[l.indexOf(a)+1];e.setStateAndCallCallbacks({activeStartDate:n,view:s},void 0,o)}})),ur(or(e),"drillUp",(function(){if(e.drillUpAvailable){var n=or(e),t=n.activeStartDate,r=n.view,a=n.views,l=e.props.onDrillUp,o=a[a.indexOf(r)-1],s=on(o,t);e.setStateAndCallCallbacks({activeStartDate:s,view:o},void 0,l)}})),ur(or(e),"onChange",(function(n,t){var r,a=e.props.selectRange;if(e.onClickTile(n,t),a){var l=or(e),o=l.value,s=l.valueType;r=Fr(o)?fn(s,o,n):on(s,n)}else r=e.getProcessedValue(n);var i=Or(cr(cr({},e.props),{},{value:r}));t.persist(),e.setStateAndCallCallbacks({activeStartDate:i,value:r},t)})),ur(or(e),"onClickTile",(function(n,t){var r=or(e).view,a=e.props,l=a.onClickDay,o=a.onClickDecade,s=a.onClickMonth,i=a.onClickYear,c=function(){switch(r){case"century":return o;case"decade":return i;case"year":return s;case"month":return l;default:throw new Error("Invalid view: ".concat(r,"."))}}();c&&c(n,t)})),ur(or(e),"onMouseOver",(function(n){e.setState((function(e){return e.hover&&e.hover.getTime()===n.getTime()?null:{hover:n}}))})),ur(or(e),"onMouseLeave",(function(){e.setState({hover:null})})),e}return t=s,(r=[{key:"getProcessedValue",value:function(e){var n=this.props,t=n.minDate,r=n.maxDate,a=n.maxDetail,l=n.returnValue;return function(){switch(l){case"start":return br;case"end":return gr;case"range":return Cr;default:throw new Error("Invalid returnValue.")}}()({value:e,minDate:t,maxDate:r,maxDetail:a})}},{key:"renderContent",value:function(n){var t=this.activeStartDate,r=this.onMouseOver,a=this.valueType,l=this.value,o=this.view,s=this.props,i=s.calendarType,c=s.locale,u=s.maxDate,f=s.minDate,A=s.selectRange,d=s.tileClassName,v=s.tileContent,m=s.tileDisabled,p=this.hover,h={activeStartDate:n?sn(o,t):on(o,t),hover:p,locale:c,maxDate:u,minDate:f,onClick:this.drillDownAvailable?this.drillDown:this.onChange,onMouseOver:A?r:null,tileClassName:d,tileContent:v,tileDisabled:m,value:l,valueType:a};switch(o){case"century":var E=this.props.formatYear;return e.createElement(mt,er({formatYear:E},h));case"decade":var y=this.props.formatYear;return e.createElement(Ft,er({formatYear:y},h));case"year":var w=this.props,b=w.formatMonth,g=w.formatMonthYear;return e.createElement(jt,er({formatMonth:b,formatMonthYear:g},h));case"month":var C=this.props,O=C.formatDay,F=C.formatLongDate,k=C.formatShortWeekday,x=C.onClickWeekNumber,D=C.showDoubleView,Y=C.showFixedNumberOfWeeks,S=C.showNeighboringMonth,X=C.showWeekNumbers,N=this.onMouseLeave;return e.createElement(Zt,er({calendarType:i,formatDay:O,formatLongDate:F,formatShortWeekday:k,onClickWeekNumber:x,onMouseLeave:A?N:null,showFixedNumberOfWeeks:Y||D,showNeighboringMonth:S,showWeekNumbers:X},h));default:throw new Error("Invalid view: ".concat(o,"."))}}},{key:"renderNavigation",value:function(){if(!this.props.showNavigation)return null;var n=this.activeStartDate,t=this.view,r=this.views,a=this.props,l=a.formatMonthYear,o=a.formatYear,s=a.locale,i=a.maxDate,c=a.minDate,u=a.navigationAriaLabel,f=a.navigationLabel,A=a.next2AriaLabel,d=a.next2Label,v=a.nextAriaLabel,m=a.nextLabel,p=a.prev2AriaLabel,h=a.prev2Label,E=a.prevAriaLabel,y=a.prevLabel,w=a.showDoubleView;return e.createElement(Yn,{activeStartDate:n,drillUp:this.drillUp,formatMonthYear:l,formatYear:o,locale:s,maxDate:i,minDate:c,navigationAriaLabel:u,navigationLabel:f,next2AriaLabel:A,next2Label:d,nextAriaLabel:v,nextLabel:m,prev2AriaLabel:p,prev2Label:h,prevAriaLabel:E,prevLabel:y,setActiveStartDate:this.setActiveStartDate,showDoubleView:w,view:t,views:r})}},{key:"render",value:function(){var n=this.props,t=n.className,r=n.inputRef,a=n.selectRange,l=n.showDoubleView,o=this.onMouseLeave,s=this.value,i=[].concat(s);return e.createElement("div",{className:G(vr,a&&1===i.length&&"".concat(vr,"--selectRange"),l&&"".concat(vr,"--doubleView"),t),ref:r},this.renderNavigation(),e.createElement("div",{className:"".concat(vr,"__viewContainer"),onBlur:a?o:null,onMouseLeave:a?o:null},this.renderContent(),l&&this.renderContent(!0)))}},{key:"activeStartDate",get:function(){var e,n,t,r,a,l,o,s,i,c,u,f,A=this.props.activeStartDate,d=this.state.activeStartDate;return A||d||(n=(e=this.props).activeStartDate,t=e.defaultActiveStartDate,r=e.defaultValue,a=e.defaultView,l=e.maxDetail,o=e.minDetail,s=e.value,i=e.view,c=function(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(e,["activeStartDate","defaultActiveStartDate","defaultValue","defaultView","maxDetail","minDetail","value","view"]),u=Er(i,o,l),(f=n||t)?on(u,f):Or(cr({maxDetail:l,minDetail:o,value:s||r,view:i||a},c)))}},{key:"value",get:function(){var e=this.props,n=e.selectRange,t=e.value,r=this.state.value;return n&&Fr(r)?r:void 0!==t?t:r}},{key:"valueType",get:function(){return yr(this.props.maxDetail)}},{key:"view",get:function(){var e=this.props,n=e.minDetail,t=e.maxDetail,r=e.view,a=this.state.view;return Er(r||a,n,t)}},{key:"views",get:function(){var e=this.props;return hr(e.minDetail,e.maxDetail)}},{key:"hover",get:function(){var e=this.props.selectRange,n=this.state.hover;return e?n:null}},{key:"drillDownAvailable",get:function(){var e=this.view,n=this.views;return n.indexOf(e)<n.length-1}},{key:"drillUpAvailable",get:function(){var e=this.view;return this.views.indexOf(e)>0}}])&&rr(t.prototype,r),s}(e.Component);kr.defaultProps={maxDate:dr,maxDetail:"month",minDate:Ar,minDetail:"century",returnValue:"start",showNavigation:!0,showNeighboringMonth:!0};var xr=o().instanceOf(Date),Dr=o().oneOfType([o().string,Cn]);kr.propTypes={activeStartDate:xr,allowPartialRange:o().bool,calendarType:En,className:yn,defaultActiveStartDate:xr,defaultValue:Dr,defaultView:Fn,formatDay:o().func,formatLongDate:o().func,formatMonth:o().func,formatMonthYear:o().func,formatShortWeekday:o().func,formatYear:o().func,inputRef:gn,locale:o().string,maxDate:bn,maxDetail:o().oneOf(mr),minDate:wn,minDetail:o().oneOf(mr),navigationAriaLabel:o().string,navigationLabel:o().func,next2AriaLabel:o().string,next2Label:o().node,nextAriaLabel:o().string,nextLabel:o().node,onActiveStartDateChange:o().func,onChange:o().func,onClickDay:o().func,onClickDecade:o().func,onClickMonth:o().func,onClickWeekNumber:o().func,onClickYear:o().func,onDrillDown:o().func,onDrillUp:o().func,onViewChange:o().func,prev2AriaLabel:o().string,prev2Label:o().node,prevAriaLabel:o().string,prevLabel:o().node,returnValue:o().oneOf(["start","end","range"]),selectRange:o().bool,showDoubleView:o().bool,showFixedNumberOfWeeks:o().bool,showNavigation:o().bool,showNeighboringMonth:o().bool,showWeekNumbers:o().bool,tileClassName:o().oneOfType([o().func,yn]),tileContent:o().oneOfType([o().func,o().node]),tileDisabled:o().func,value:Dr,view:Fn};const Yr=kr;function Sr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=t){var r=[],a=!0,l=!1,o=void 0;try{for(t=t.call(e),_s;!(a=(_s=t.next()).done)&&(r.push(_s.value),!n||r.length!==n);a=!0);}catch(e){l=!0,o=e}finally{try{a||null==t.return||t.return()}finally{if(l)throw o}}return r}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Xr(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Xr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const Nr=function(){var n=Sr((0,e.useState)(new Date),2),t=n[0],r=n[1],a=Sr((0,e.useState)([]),2),l=a[0],o=a[1],s=Sr((0,e.useState)("menu"),2),i=s[0],c=s[1];return e.createElement("div",{className:"reservation"},e.createElement("div",{className:"close",onClick:function(){document.querySelector(".reservation").style.right="-3000px",c("menu")}},"×"),e.createElement("nav",null,e.createElement("div",{onClick:function(){c("menu")}},e.createElement("p",null,"DATE")),e.createElement("div",{onClick:function(){c("time")}},e.createElement("p",null,"TIME")),e.createElement("div",{onClick:function(){c("people")}},e.createElement("p",null,"SIZE")),e.createElement("div",{onClick:function(){c("info")}},e.createElement("p",null,"INFO"))),"menu"===i?e.createElement("div",{className:"reservation-container"},e.createElement(Yr,{onChange:function(e){r(e);var n=e.toString().split(" "),t=[];t.push(n[3]),t.push(n[1]),t.push(n[2]),t.push(n[0]),o(t)},value:t,tileDisabled:function(e){e.activeStartDate;var n=e.date,t=(e.view,new Date),r=new Date(t);return r.setDate(r.getDate()-1),t.toDateString(),r.toDateString(),r>=n}}),e.createElement("div",{className:"reservation-date"})):"time"===i?e.createElement("div",{className:"reservation-container"},e.createElement("div",{className:"reservation-sub-container"},e.createElement("div",{className:"time"},e.createElement("p",null,"LUNCH"),e.createElement("ul",null,e.createElement("li",null,"12:00 PM"),e.createElement("li",null,"1:00 PM"),e.createElement("li",null,"2:00 PM"))),e.createElement("div",{className:"time"},e.createElement("p",null,"DINNER"),e.createElement("ul",null,e.createElement("li",null,"6:00 PM"),e.createElement("li",null,"7:00 PM"),e.createElement("li",null,"8:00 PM"))))):"people"===i?e.createElement("div",{className:"reservation-container"},e.createElement("div",{className:"reservation-sub-container"},e.createElement("div",{className:"size"},e.createElement("p",null,"PARTY SIZE"),e.createElement("ul",null,e.createElement("li",null,"1 - 2 people"),e.createElement("li",null,"3 - 4 people"),e.createElement("li",null,"5 - 6 people"),e.createElement("li",null,"over 6 people"))))):"info"===i?e.createElement("div",{className:"reservation-container"},e.createElement("form",{action:""},e.createElement("textarea",{name:"info",id:"info",cols:"50",rows:"10",placeholder:"Please let us know if you have additional requests."}))):e.createElement(e.Fragment,null),e.createElement("div",{className:"confirm-container"},e.createElement("p",null,"YOUR RESERVATION: ",l[0],"/",l[1],"/",l[2],"(",l[3],")"),e.createElement("button",{className:"reservation-botton"},"CONFIRM")))},_r=function(){return e.createElement("section",{className:"main-section"},e.createElement(J,null),e.createElement(Nr,null),e.createElement("img",{className:"logo",src:Q}))},Ir=function(){return e.createElement("footer",null,e.createElement("p",null,"Created by Jonggu Jake Baek"))},Br=function(){return e.createElement(e.Fragment,null,e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}),e.createElement("div",{className:"firefly"}))},jr=t.p+"297c2aa6f093b475f8c126473a0d13aa.jpg",Pr=t.p+"368d9e3084d9cfee008b090a46bcb109.jpg",Tr=t.p+"85364645fba35df1514d70945584bbe2.jpg",Lr=t.p+"7cc3704d1560640bc2a81f86c6661e0a.jpg";function Rr(){return e.createElement(P,null,e.createElement(q,null),e.createElement("main",null,e.createElement("img",{className:"background1",src:jr,alt:""}),e.createElement("img",{className:"background2",src:Pr,alt:""}),e.createElement("img",{className:"background3",src:Tr,alt:""}),e.createElement("img",{className:"background4",src:Lr,alt:""}),e.createElement($,null),e.createElement(j,{exact:!0,path:"/",render:_r}),e.createElement(j,{path:"/admin",component:H}),e.createElement(Br,null)),e.createElement(Ir,null))}var zr=t(379),Mr=t.n(zr),Ur=t(886);Mr()(Ur.Z,{insert:"head",singleton:!1}),Ur.Z.locals;var Wr=document.getElementById("root");n.render(e.createElement(Rr,null),Wr)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vc3JjL3N0eWxlL21haW4ubGVzcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvQ2FsZW5kYXIuY3NzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvbG9kYXNoLm9uY2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9wYXRoLXRvLXJlZ2V4cC9pbmRleC5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vc3JjL0hlYWRlci5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vc3JjL05hdi5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vc3JjL0FkbWluLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9zcmMvaW1hZ2VzL3NhY2hhbC5wbmciLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL3NyYy9pbWFnZXMvc2FjaGFsLXN1Yi5wbmciLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL3NyYy9NZW51LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvbWVyZ2UtY2xhc3MtbmFtZXMvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9nZXQtdXNlci1sb2NhbGUvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9Ad29qdGVrbWFqL2RhdGUtdXRpbHMvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9zaGFyZWQvY29uc3QuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9zaGFyZWQvZGF0ZUZvcm1hdHRlci5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL3NoYXJlZC9kYXRlcy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL3NoYXJlZC9wcm9wVHlwZXMuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9DYWxlbmRhci9OYXZpZ2F0aW9uLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXIvZGlzdC9lc20vRmxleC5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL3NoYXJlZC91dGlscy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL1RpbGVHcm91cC5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL1RpbGUuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9DZW50dXJ5Vmlldy9EZWNhZGUuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9DZW50dXJ5Vmlldy9EZWNhZGVzLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXIvZGlzdC9lc20vQ2VudHVyeVZpZXcuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9EZWNhZGVWaWV3L1llYXIuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9EZWNhZGVWaWV3L1llYXJzLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXIvZGlzdC9lc20vRGVjYWRlVmlldy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL1llYXJWaWV3L01vbnRoLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXIvZGlzdC9lc20vWWVhclZpZXcvTW9udGhzLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXIvZGlzdC9lc20vWWVhclZpZXcuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9Nb250aFZpZXcvRGF5LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXIvZGlzdC9lc20vTW9udGhWaWV3L0RheXMuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9Nb250aFZpZXcvV2Vla2RheXMuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L2VzbS9Nb250aFZpZXcvV2Vla051bWJlci5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL01vbnRoVmlldy9XZWVrTnVtYmVycy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL01vbnRoVmlldy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWNhbGVuZGFyL2Rpc3QvZXNtL0NhbGVuZGFyLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXIvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL3NyYy9SZXNlcnZhdGlvbi5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vc3JjL01haW4uanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL3NyYy9Gb290ZXIuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL3NyYy9BbmltYXRpb24uanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL3NyYy9pbWFnZXMvYmFja2dyb3VuZDEuanBnIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9zcmMvaW1hZ2VzL2JhY2tncm91bmQyLmpwZyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS1yZWFjdC13ZWJwYWNrLy4vc3JjL2ltYWdlcy9iYWNrZ3JvdW5kMy5qcGciLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL3NyYy9pbWFnZXMvYmFja2dyb3VuZDQuanBnIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9zcmMvQXBwLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLXJlYWN0LXdlYnBhY2svLi9zcmMvc3R5bGUvbWFpbi5sZXNzP2FjYWUiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUtcmVhY3Qtd2VicGFjay8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsImkiLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsImNvbmNhdCIsImpvaW4iLCJtb2R1bGVzIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJsZW5ndGgiLCJfaSIsIl9hcnJheUxpa2VUb0FycmF5IiwiYXJyIiwibGVuIiwiYXJyMiIsIkFycmF5IiwiX2l0ZW0iLCJpc0FycmF5IiwiX2FycmF5V2l0aEhvbGVzIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJPYmplY3QiLCJfYXJyIiwiX24iLCJfZCIsIl9lIiwidW5kZWZpbmVkIiwiX3MiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwiZXJyIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibyIsIm1pbkxlbiIsIm4iLCJwcm90b3R5cGUiLCJjYWxsIiwic2xpY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIlR5cGVFcnJvciIsIl9ub25JdGVyYWJsZVJlc3QiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwicmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJ0eXBlIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyZ3VtZW50cyIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJrZXlzIiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJrZXkiLCJkZXNjcmlwdG9yIiwiZSIsInJlVHJpbSIsInJlSXNCYWRIZXgiLCJyZUlzQmluYXJ5IiwicmVJc09jdGFsIiwiZnJlZVBhcnNlSW50IiwicGFyc2VJbnQiLCJvYmplY3RUb1N0cmluZyIsImlzT2JqZWN0IiwiZnVuYyIsInJlc3VsdCIsImlzT2JqZWN0TGlrZSIsImlzU3ltYm9sIiwib3RoZXIiLCJ2YWx1ZU9mIiwicmVwbGFjZSIsImlzQmluYXJ5IiwidG9OdW1iZXIiLCJ0b0Zpbml0ZSIsInJlbWFpbmRlciIsInRvSW50ZWdlciIsImFwcGx5IiwiYmVmb3JlIiwiaGFzT3duUHJvcGVydHkiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInN5bWJvbHMiLCJ0byIsInMiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcHMiLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsIkVycm9yIiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsIm0iLCJyIiwieSIsImEiLCJiIiwiYyIsImJhIiwiU2V0IiwiY2EiLCJkYSIsImVhIiwiYWRkIiwiZmEiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJoYSIsImlhIiwiamEiLCJrYSIsIkIiLCJkIiwiZiIsImciLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJyZW1vdmVFbXB0eVN0cmluZyIsIkQiLCJ0b0xvd2VyQ2FzZSIsIm9hIiwicGEiLCJ0b1VwcGVyQ2FzZSIsInFhIiwibWEiLCJpc05hTiIsIm5hIiwibGEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInhsaW5rSHJlZiIsInJhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJzYSIsInRhIiwidWEiLCJ3YSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiZm9yIiwiRSIsIk1hIiwiS2EiLCJMYSIsIk5hIiwic3RhY2siLCJ0cmltIiwibWF0Y2giLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiayIsImgiLCJRYSIsInRhZyIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiZ2V0IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYSIsIldhIiwiY2hlY2tlZCIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiZGIiLCJmYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiZ2IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImhiIiwiaWIiLCJqYiIsInRleHRDb250ZW50Iiwia2IiLCJsYiIsIm1iIiwibmIiLCJvYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJxYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicmIiLCJzYiIsInRiIiwic3R5bGUiLCJpbmRleE9mIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJ1YiIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInZiIiwid2IiLCJpcyIsInhiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiQ2IiLCJzdGF0ZU5vZGUiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk9iIiwiUGIiLCJRYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUmIiLCJsIiwib25FcnJvciIsIlNiIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlpiIiwiYWx0ZXJuYXRlIiwicmV0dXJuIiwiZmxhZ3MiLCIkYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiYWMiLCJjYyIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJiYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJNYXAiLCJvYyIsInBjIiwicWMiLCJyYyIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsInRhcmdldENvbnRhaW5lcnMiLCJzYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsInRjIiwidmMiLCJ3YyIsImxhbmVQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJ4YyIsInljIiwic2hpZnQiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsIk1hdGgiLCJjbHozMiIsImJkIiwiY2QiLCJsb2ciLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJiaW5kIiwidWMiLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwiY29kZSIsInJlcGVhdCIsImxvY2FsZSIsIndoaWNoIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIlpkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiT2UiLCJjb250ZW50RWRpdGFibGUiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJWZSIsIldlIiwiWGUiLCJZZSIsIlplIiwiWWIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiRyIsIiRlIiwiaGFzIiwiYWYiLCJiZiIsInJhbmRvbSIsImNmIiwiZGYiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIk5iIiwieCIsInciLCJ6IiwidSIsInEiLCJ0IiwidiIsImVmIiwiZmYiLCJwYXJlbnRXaW5kb3ciLCJnZiIsImhmIiwiSiIsIksiLCJRIiwiTCIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsImpmIiwia2YiLCJsZiIsIm1mIiwiYXV0b0ZvY3VzIiwibmYiLCJfX2h0bWwiLCJvZiIsInNldFRpbWVvdXQiLCJwZiIsImNsZWFyVGltZW91dCIsInFmIiwicmYiLCJzZiIsInByZXZpb3VzU2libGluZyIsInRmIiwidmYiLCJ3ZiIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJIIiwiSSIsIkNmIiwiTSIsIk4iLCJEZiIsIkVmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJnZXRDaGlsZENvbnRleHQiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJRZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiUmYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJTZiIsIlRmIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJVZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiVmYiLCJXZiIsIlhmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJZZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsIk8iLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJfY3VycmVudFZhbHVlIiwic2ciLCJjaGlsZExhbmVzIiwidGciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsInVnIiwidmciLCJjb250ZXh0Iiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsIndnIiwieGciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImZpcnN0QmFzZVVwZGF0ZSIsImxhc3RCYXNlVXBkYXRlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ5ZyIsInpnIiwiZXZlbnRUaW1lIiwibGFuZSIsInBheWxvYWQiLCJjYWxsYmFjayIsIkFnIiwiQmciLCJDZyIsIkEiLCJwIiwiQyIsIkRnIiwiRWciLCJGZyIsIkNvbXBvbmVudCIsInJlZnMiLCJHZyIsIktnIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiSGciLCJJZyIsIkpnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIkxnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJNZyIsInN0YXRlIiwidXBkYXRlciIsIk5nIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiT2ciLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlBnIiwiUWciLCJyZWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiUmciLCJTZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJpbmRleCIsIlRnIiwiVWciLCJtb2RlIiwiVmciLCJpbXBsZW1lbnRhdGlvbiIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJJaCIsIkpoIiwiS2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJMaCIsIk1oIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwibXV0YWJsZVJlYWRMYW5lcyIsIk5oIiwiVSIsInVzZVN0YXRlIiwiZ2V0U25hcHNob3QiLCJzdWJzY3JpYmUiLCJ1c2VFZmZlY3QiLCJzZXRTbmFwc2hvdCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiY3JlYXRlIiwiZGVzdHJveSIsImRlcHMiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZU9wYXF1ZUlkZW50aWZpZXIiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJ1ZiIsImVpIiwiUmVhY3RDdXJyZW50T3duZXIiLCJmaSIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwiYmFzZUxhbmVzIiwibmkiLCJvaSIsInBpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicWkiLCJyaSIsInBlbmRpbmdDb250ZXh0IiwiQmkiLCJEaSIsIkVpIiwic2kiLCJyZXRyeUxhbmUiLCJ0aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ1aSIsInVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxNb2RlIiwiQWkiLCJGaSIsIkdpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwiViIsIkhpIiwiSWkiLCJXIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJtZXNzYWdlIiwiTmkiLCJjb25zb2xlIiwiZXJyb3IiLCJPaSIsIldlYWtNYXAiLCJQaSIsIlFpIiwiUmkiLCJTaSIsImNvbXBvbmVudERpZENhdGNoIiwiVGkiLCJjb21wb25lbnRTdGFjayIsIlVpIiwiV2Vha1NldCIsIlZpIiwiV2kiLCJYaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiWWkiLCJaaSIsIiRpIiwiZm9jdXMiLCJhaiIsImRpc3BsYXkiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjaiIsImRqIiwiZWoiLCJmaiIsImdqIiwiaGoiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaWoiLCJqaiIsImtqIiwibGoiLCJ0aGVuIiwibWoiLCJuaiIsImNlaWwiLCJvaiIsInBqIiwiWCIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJaIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJTYyIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJUYyIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlVqIiwidGltZW91dEhhbmRsZSIsIldqIiwiWGoiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJrayIsImxrIiwibWsiLCJuayIsIm9rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwidWsiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIlZqIiwidmsiLCJFdmVudHMiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJGcmFnbWVudCIsIkxhenkiLCJQb3J0YWwiLCJQcm9maWxlciIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsImlzVmFsaWRFbGVtZW50VHlwZSIsInR5cGVPZiIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXRoIiwiUmVnRXhwIiwiZ3JvdXBzIiwicHJlZml4IiwiZGVsaW1pdGVyIiwib3B0aW9uYWwiLCJwYXJ0aWFsIiwiYXN0ZXJpc2siLCJwYXR0ZXJuIiwiYXR0YWNoS2V5cyIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwidG9rZW5zVG9SZWdFeHAiLCJwYXJzZSIsInN0cmluZ1RvUmVnZXhwIiwiY29tcGlsZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJQQVRIX1JFR0VYUCIsInJlcyIsInRva2VucyIsImRlZmF1bHREZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsImdyb3VwIiwibW9kaWZpZXIiLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsImNoYXJDb2RlQXQiLCJtYXRjaGVzIiwib2JqIiwib3B0cyIsImVuY29kZSIsInByZXR0eSIsInRva2VuIiwic2VnbWVudCIsImoiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiZXNjYXBlIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJkZWZhdWx0IiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJjb3VudCIsInRvQXJyYXkiLCJvbmx5IiwiUHVyZUNvbXBvbmVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIm1lbW8iLCJwZXJmb3JtYW5jZSIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwicG9wIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiZ2V0VGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJpbnNlcnQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiYXBwbHlUb1RhZyIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwiYWxsIiwiYXRvYiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJzcGxpY2UiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwiX3NldFByb3RvdHlwZU9mIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsInNwbGljZU9uZSIsImNvbmRpdGlvbiIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJoYXNCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJoYXNoIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImhhc1RyYWlsaW5nU2xhc2giLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJ1cCIsInBhcnQiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImNhblVzZURPTSIsImdldENvbmZpcm1hdGlvbiIsImNvbmZpcm0iLCJQb3BTdGF0ZUV2ZW50IiwiSGFzaENoYW5nZUV2ZW50IiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiTUFYX1NJR05FRF8zMV9CSVRfSU5UIiwiY29tbW9uanNHbG9iYWwiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiZW1pdHRlciIsIl9wcm90byIsIm5leHRQcm9wcyIsIm9sZFZhbHVlIiwiX0NvbXBvbmVudDIiLCJfdGhpczIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJoaXN0b3J5Q29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCQxIiwiUm91dGVyIiwiX1JlYWN0JENvbXBvbmVudCIsIl9pc01vdW50ZWQiLCJfcGVuZGluZ0xvY2F0aW9uIiwic3RhdGljQ29udGV4dCIsImNvbXB1dGVSb290TWF0Y2giLCJwYXJhbXMiLCJpc0V4YWN0IiwiY2FjaGUkMSIsImNhY2hlQ291bnQkMSIsIm1hdGNoUGF0aCIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJyZWR1Y2UiLCJtYXRjaGVkIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwidmFsdWVzIiwiUm91dGUiLCJjb250ZXh0JDEiLCJjb21wdXRlZE1hdGNoIiwiX3RoaXMkcHJvcHMiLCJCcm93c2VyUm91dGVyIiwicmVzb2x2ZVRvTG9jYXRpb24iLCJub3JtYWxpemVUb0xvY2F0aW9uIiwiZm9yd2FyZFJlZlNoaW0iLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwicmVzdCIsImV4IiwiaXNNb2RpZmllZEV2ZW50IiwiTGluayIsIl9yZWYyIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiY2xhc3NOYW1lIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJyaWdodCIsInNyYyIsIkxvZ28iLCJtZXJnZUNsYXNzTmFtZXMiLCJjbGFzc0xpc3QiLCJhcmciLCJnZXRVc2VyTG9jYWxlcyIsImxhbmd1YWdlTGlzdCIsImxhbmd1YWdlcyIsImxhbmd1YWdlIiwidXNlckxhbmd1YWdlIiwiYnJvd3Nlckxhbmd1YWdlIiwic3lzdGVtTGFuZ3VhZ2UiLCJlbCIsInNwbGl0RWwiLCJmaXhMb3dlcmNhc2VQcm9wZXJ0aWVzIiwic2VsZiIsImdldFVzZXJMb2NhbGUiLCJtYWtlR2V0RWRnZU9mTmVpZ2hib3IiLCJnZXRQZXJpb2QiLCJnZXRFZGdlT2ZQZXJpb2QiLCJkZWZhdWx0T2Zmc2V0IiwicHJldmlvdXNQZXJpb2QiLCJtYWtlR2V0RW5kIiwiZ2V0QmVnaW5PZk5leHRQZXJpb2QiLCJnZXRUaW1lIiwibWFrZUdldFJhbmdlIiwiZnVuY3Rpb25zIiwiZ2V0WWVhciIsImdldEZ1bGxZZWFyIiwieWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldENlbnR1cnlTdGFydCIsImNlbnR1cnlTdGFydFllYXIiLCJjZW50dXJ5U3RhcnREYXRlIiwic2V0RnVsbFllYXIiLCJzZXRIb3VycyIsImdldFByZXZpb3VzQ2VudHVyeVN0YXJ0IiwiZ2V0TmV4dENlbnR1cnlTdGFydCIsImdldENlbnR1cnlFbmQiLCJnZXRQcmV2aW91c0NlbnR1cnlFbmQiLCJnZXRDZW50dXJ5UmFuZ2UiLCJnZXREZWNhZGVTdGFydCIsImRlY2FkZVN0YXJ0WWVhciIsImRlY2FkZVN0YXJ0RGF0ZSIsImdldFByZXZpb3VzRGVjYWRlU3RhcnQiLCJnZXROZXh0RGVjYWRlU3RhcnQiLCJnZXREZWNhZGVFbmQiLCJnZXRQcmV2aW91c0RlY2FkZUVuZCIsImdldERlY2FkZVJhbmdlIiwiZ2V0WWVhclN0YXJ0IiwieWVhclN0YXJ0RGF0ZSIsImdldFByZXZpb3VzWWVhclN0YXJ0IiwiZ2V0TmV4dFllYXJTdGFydCIsImdldFllYXJFbmQiLCJnZXRQcmV2aW91c1llYXJFbmQiLCJnZXRZZWFyUmFuZ2UiLCJtYWtlR2V0RWRnZU9mTmVpZ2hib3JNb250aCIsImdldE1vbnRoU3RhcnQiLCJtb250aFN0YXJ0RGF0ZSIsImdldFByZXZpb3VzTW9udGhTdGFydCIsImdldE5leHRNb250aFN0YXJ0IiwiZ2V0TW9udGhFbmQiLCJnZXRQcmV2aW91c01vbnRoRW5kIiwiZ2V0TW9udGhSYW5nZSIsIm1ha2VHZXRFZGdlT2ZOZWlnaGJvckRheSIsImRheSIsImdldERheVN0YXJ0IiwiZGF5U3RhcnREYXRlIiwiX0NBTEVOREFSX1RZUEVfTE9DQUxFIiwiZ2V0RGF5RW5kIiwiZ2V0RGF5UmFuZ2UiLCJnZXREYXlzSW5Nb250aCIsIl9kZWZpbmVQcm9wZXJ0eSIsIndyaXRhYmxlIiwiQ0FMRU5EQVJfVFlQRVMiLCJBUkFCSUMiLCJIRUJSRVciLCJJU09fODYwMSIsIlVTIiwiQ0FMRU5EQVJfVFlQRV9MT0NBTEVTIiwiV0VFS0RBWVMiLCJfYXJyYXlXaXRob3V0SG9sZXMiLCJpdGVyIiwiX2l0ZXJhYmxlVG9BcnJheSIsIl9ub25JdGVyYWJsZVNwcmVhZCIsImdldFNhZmVGb3JtYXR0ZXIiLCJ0b0xvY2FsZVN0cmluZyIsImdldEZvcm1hdHRlciIsInNhZmVEYXRlIiwidG9TYWZlSG91ciIsIndlZWtkYXkiLCJmb3JtYXRXZWVrZGF5IiwiU1VOREFZIiwiRlJJREFZIiwiU0FUVVJEQVkiLCJnZXREYXlPZldlZWsiLCJjYWxlbmRhclR5cGUiLCJnZXREYXkiLCJnZXRCZWdpbk9mV2VlayIsIm1vbnRoSW5kZXgiLCJnZXRCZWdpbiIsInJhbmdlVHlwZSIsImdldEJlZ2luTmV4dCIsImdldEVuZCIsImdldFJhbmdlIiwiZ2V0VmFsdWVSYW5nZSIsImRhdGUxIiwiZGF0ZTIiLCJyYXdOZXh0VmFsdWUiLCJzb3J0IiwidG9ZZWFyTGFiZWwiLCJmb3JtYXRZZWFyIiwiZGF0ZXMiLCJnZXREZWNhZGVMYWJlbCIsImlzV2Vla2VuZCIsIl90eXBlb2YiLCJjYWxlbmRhclR5cGVzIiwiYWxsVmlld3MiLCJpc0NhbGVuZGFyVHlwZSIsImlzQ2xhc3NOYW1lIiwiaXNNaW5EYXRlIiwibWluRGF0ZSIsIm1heERhdGUiLCJpc01heERhdGUiLCJpc1JlZiIsImlzVmFsdWUiLCJpc1ZpZXdzIiwiaXNWaWV3IiwiYWxsb3dlZFZpZXdzIiwidmlld3MiLCJ0aWxlR3JvdXBQcm9wcyIsImFjdGl2ZVN0YXJ0RGF0ZSIsImhvdmVyIiwib25Nb3VzZU92ZXIiLCJ0aWxlQ2xhc3NOYW1lIiwidGlsZUNvbnRlbnQiLCJ2YWx1ZVR5cGUiLCJ0aWxlUHJvcHMiLCJjbGFzc2VzIiwidGlsZURpc2FibGVkIiwiTmF2aWdhdGlvbiIsImxhYmVsQ2xhc3NOYW1lIiwiZHJpbGxVcCIsIl9yZWYkZm9ybWF0TW9udGhZZWFyIiwiZm9ybWF0TW9udGhZZWFyIiwiX3JlZiRmb3JtYXRZZWFyIiwiX3JlZiRuYXZpZ2F0aW9uQXJpYUxhIiwibmF2aWdhdGlvbkFyaWFMYWJlbCIsIm5hdmlnYXRpb25MYWJlbCIsIl9yZWYkbmV4dDJBcmlhTGFiZWwiLCJuZXh0MkFyaWFMYWJlbCIsIl9yZWYkbmV4dDJMYWJlbCIsIm5leHQyTGFiZWwiLCJfcmVmJG5leHRBcmlhTGFiZWwiLCJuZXh0QXJpYUxhYmVsIiwiX3JlZiRuZXh0TGFiZWwiLCJuZXh0TGFiZWwiLCJfcmVmJHByZXYyQXJpYUxhYmVsIiwicHJldjJBcmlhTGFiZWwiLCJfcmVmJHByZXYyTGFiZWwiLCJwcmV2MkxhYmVsIiwiX3JlZiRwcmV2QXJpYUxhYmVsIiwicHJldkFyaWFMYWJlbCIsIl9yZWYkcHJldkxhYmVsIiwicHJldkxhYmVsIiwic2V0QWN0aXZlU3RhcnREYXRlIiwic2hvd0RvdWJsZVZpZXciLCJkcmlsbFVwQXZhaWxhYmxlIiwic2hvdWxkU2hvd1ByZXZOZXh0MkJ1dHRvbnMiLCJwcmV2aW91c0FjdGl2ZVN0YXJ0RGF0ZSIsImdldEJlZ2luUHJldmlvdXMiLCJwcmV2aW91c0FjdGl2ZVN0YXJ0RGF0ZTIiLCJnZXRCZWdpblByZXZpb3VzMiIsIm5leHRBY3RpdmVTdGFydERhdGUiLCJuZXh0QWN0aXZlU3RhcnREYXRlMiIsImdldEJlZ2luTmV4dDIiLCJwcmV2QnV0dG9uRGlzYWJsZWQiLCJwcmV2aW91c0FjdGl2ZUVuZERhdGUiLCJnZXRFbmRQcmV2aW91cyIsInByZXYyQnV0dG9uRGlzYWJsZWQiLCJnZXRFbmRQcmV2aW91czIiLCJuZXh0QnV0dG9uRGlzYWJsZWQiLCJuZXh0MkJ1dHRvbkRpc2FibGVkIiwicmVuZGVyTGFiZWwiLCJsYWJlbCIsImdldENlbnR1cnlMYWJlbCIsIm93bktleXMiLCJlbnVtZXJhYmxlT25seSIsInN5bSIsIl9vYmplY3RTcHJlYWQiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsInRvUGVyY2VudCIsIm51bSIsIkZsZXgiLCJkaXJlY3Rpb24iLCJ3cmFwIiwib3RoZXJQcm9wcyIsInNvdXJjZVN5bWJvbEtleXMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJmbGV4RGlyZWN0aW9uIiwiZmxleFdyYXAiLCJmbGV4QmFzaXMiLCJtYXhXaWR0aCIsIm92ZXJmbG93IiwibWFyZ2luTGVmdCIsImlzVmFsdWVXaXRoaW5SYW5nZSIsImlzUmFuZ2VXaXRoaW5SYW5nZSIsImdyZWF0ZXJSYW5nZSIsInNtYWxsZXJSYW5nZSIsImRvUmFuZ2VzT3ZlcmxhcCIsInJhbmdlMSIsInJhbmdlMiIsImdldFJhbmdlQ2xhc3NOYW1lcyIsInZhbHVlUmFuZ2UiLCJkYXRlUmFuZ2UiLCJiYXNlQ2xhc3NOYW1lIiwiaXNSYW5nZVN0YXJ0IiwiaXNSYW5nZUVuZCIsImdldFRpbGVDbGFzc2VzIiwiZGF0ZVR5cGUiLCJ2YWx1ZVJhbmdlQ2xhc3NOYW1lcyIsImhvdmVyUmFuZ2UiLCJob3ZlclJhbmdlQ2xhc3NOYW1lcyIsIlRpbGVHcm91cCIsIl9yZWYkY291bnQiLCJkYXRlVHJhbnNmb3JtIiwiX3JlZiRzdGVwIiwic3RlcCIsIlRpbGUiLCJ0aWxlIiwidGlsZXMiLCJwb2ludCIsIl9jbGFzc0NhbGxDaGVjayIsIkNvbnN0cnVjdG9yIiwiX2RlZmluZVByb3BlcnRpZXMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJSZWZlcmVuY2VFcnJvciIsIl9nZXRQcm90b3R5cGVPZiIsIl9pbmhlcml0cyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX3N1cGVyIiwic2hhbSIsIlByb3h5IiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlN1cGVyIiwiTmV3VGFyZ2V0IiwicHJldlN0YXRlIiwidGlsZUNsYXNzTmFtZVByb3BzIiwidGlsZUNvbnRlbnRQcm9wcyIsImZvcm1hdEFiYnIiLCJtYXhEYXRlVHJhbnNmb3JtIiwibWluRGF0ZVRyYW5zZm9ybSIsIl90aGlzJHN0YXRlIiwib25Gb2N1cyIsIkRlY2FkZSIsIkRlY2FkZXMiLCJDZW50dXJ5VmlldyIsIlllYXIiLCJZZWFycyIsIkRlY2FkZVZpZXciLCJNb250aCIsIl9yZWYkZm9ybWF0TW9udGgiLCJmb3JtYXRNb250aCIsIk1vbnRocyIsIlllYXJWaWV3IiwiRGF5IiwiX3JlZiRmb3JtYXREYXkiLCJmb3JtYXREYXkiLCJfcmVmJGZvcm1hdExvbmdEYXRlIiwiZm9ybWF0TG9uZ0RhdGUiLCJjdXJyZW50TW9udGhJbmRleCIsIkRheXMiLCJzaG93Rml4ZWROdW1iZXJPZldlZWtzIiwic2hvd05laWdoYm9yaW5nTW9udGgiLCJoYXNGaXhlZE51bWJlck9mV2Vla3MiLCJkYXlPZldlZWsiLCJkYXlzSW5Nb250aCIsImFjdGl2ZUVuZERhdGUiLCJXZWVrZGF5cyIsIl9wcm9wcyRmb3JtYXRTaG9ydFdlZSIsImZvcm1hdFNob3J0V2Vla2RheSIsIm9uTW91c2VMZWF2ZSIsImJlZ2luT2ZNb250aCIsIndlZWtkYXlzIiwid2Vla2RheURhdGUiLCJhYmJyIiwidGl0bGUiLCJXZWVrTnVtYmVyIiwib25DbGlja1dlZWtOdW1iZXIiLCJ3ZWVrTnVtYmVyIiwiV2Vla051bWJlcnMiLCJudW1iZXJPZldlZWtzIiwiZGF5cyIsIndlZWtOdW1iZXJzIiwiYmVnaW5PZkZpcnN0V2VlayIsImNhbGVuZGFyVHlwZUZvcldlZWtOdW1iZXIiLCJiZWdpbk9mV2VlayIsInJvdW5kIiwiZ2V0V2Vla051bWJlciIsIndlZWtJbmRleCIsIk1vbnRoVmlldyIsIl9wcm9wcyRjYWxlbmRhclR5cGUiLCJmaW5kIiwiaW5jbHVkZXMiLCJnZXRDYWxlbmRhclR5cGVGcm9tTG9jYWxlIiwic2hvd1dlZWtOdW1iZXJzIiwiY2hpbGRQcm9wcyIsImFsaWduSXRlbXMiLCJkZWZhdWx0TWluRGF0ZSIsImRlZmF1bHRNYXhEYXRlIiwiYWxsVmFsdWVUeXBlcyIsImdldExpbWl0ZWRWaWV3cyIsIm1pbkRldGFpbCIsIm1heERldGFpbCIsImdldFZpZXciLCJpc1ZpZXdBbGxvd2VkIiwiZ2V0VmFsdWVUeXBlIiwiZ2V0RGV0YWlsVmFsdWUiLCJ2YWx1ZVBpZWNlIiwicmF3VmFsdWUiLCJ2YWx1ZURhdGUiLCJ0b0RhdGUiLCJtYXgiLCJiZXR3ZWVuIiwiZ2V0RGV0YWlsVmFsdWVGcm9tIiwiZ2V0RGV0YWlsVmFsdWVUbyIsImdldERldGFpbFZhbHVlQXJyYXkiLCJnZXRBY3RpdmVTdGFydERhdGUiLCJnZXRJc1NpbmdsZVZhbHVlIiwiQ2FsZW5kYXIiLCJfYXJncyIsImRlZmF1bHRBY3RpdmVTdGFydERhdGUiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemUiLCJwcmV2aW91c1ZpZXciLCJhbGxvd1BhcnRpYWxSYW5nZSIsIm9uQWN0aXZlU3RhcnREYXRlQ2hhbmdlIiwib25DaGFuZ2UiLCJvblZpZXdDaGFuZ2UiLCJzZWxlY3RSYW5nZSIsInByZXZBcmdzIiwic2hvdWxkVXBkYXRlIiwic2V0U3RhdGVBbmRDYWxsQ2FsbGJhY2tzIiwiZHJpbGxEb3duQXZhaWxhYmxlIiwib25DbGlja1RpbGUiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemUyIiwib25EcmlsbERvd24iLCJuZXh0VmlldyIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZTMiLCJvbkRyaWxsVXAiLCJuZXh0VmFsdWUiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemU0IiwicHJldmlvdXNWYWx1ZSIsImdldFByb2Nlc3NlZFZhbHVlIiwiX3RoaXMkcHJvcHMyIiwib25DbGlja0RheSIsIm9uQ2xpY2tEZWNhZGUiLCJvbkNsaWNrTW9udGgiLCJvbkNsaWNrWWVhciIsIl90aGlzJHByb3BzMyIsInByb2Nlc3NGdW5jdGlvbiIsImN1cnJlbnRBY3RpdmVTdGFydERhdGUiLCJfdGhpcyRwcm9wczQiLCJjb21tb25Qcm9wcyIsImRyaWxsRG93biIsIl9mb3JtYXRZZWFyIiwiX3RoaXMkcHJvcHM1IiwiX3RoaXMkcHJvcHM2Iiwic2hvd05hdmlnYXRpb24iLCJfdGhpcyRwcm9wczciLCJfdGhpcyRwcm9wczgiLCJpbnB1dFJlZiIsInZhbHVlQXJyYXkiLCJyZW5kZXJOYXZpZ2F0aW9uIiwib25CbHVyIiwicmVuZGVyQ29udGVudCIsInZhbHVlRnJvbSIsImFjdGl2ZVN0YXJ0RGF0ZVByb3BzIiwiYWN0aXZlU3RhcnREYXRlU3RhdGUiLCJfdGhpcyRwcm9wczkiLCJ2YWx1ZVByb3BzIiwidmFsdWVTdGF0ZSIsIl90aGlzJHByb3BzMTAiLCJ2aWV3UHJvcHMiLCJ2aWV3U3RhdGUiLCJfdGhpcyRwcm9wczExIiwiaXNBY3RpdmVTdGFydERhdGUiLCJpc0xvb3NlVmFsdWUiLCJzZXREYXRlIiwicGlja2VkRGF0ZSIsInNldFBpY2tlZERhdGUiLCJyZXNlcnZhdGlvblBhZ2UiLCJzZXRSZXNlcnZhdGlvblBhZ2UiLCJkYXRlQXJyYXkiLCJkYXRlQXJyYXlGb3JEaXNwbGF5IiwidG9kYXkiLCJ5ZXN0ZXJkYXkiLCJ0b0RhdGVTdHJpbmciLCJjb2xzIiwicm93cyIsInBsYWNlaG9sZGVyIiwiQXBwIiwiQmFja2dyb3VuZDEiLCJhbHQiLCJCYWNrZ3JvdW5kMiIsIkJhY2tncm91bmQzIiwiQmFja2dyb3VuZDQiLCJNYWluIiwiQWRtaW4iLCJhcHBFbGVtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJSZWFjdERPTSJdLCJtYXBwaW5ncyI6Ijt5R0FJSUEsRUFBMEIsSUFBNEIsS0FDMURBLEVBQXdCQyxFQUFFLEtBRTFCRCxFQUF3QkUsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLDZoekNBQThoekMsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsNEVBQTRFLGtDQUFrQyxtQ0FBbUMsdUNBQXVDLHFDQUFxQyxNQUFRLEdBQUcsU0FBVyxvc2JBQW9zYixlQUFpQixDQUFDLGlQQUFpUCxneU1BQWd5TSx5dUZBQXl1Rix1dGhDQUF5dGhDLHVDQUF1QyxXQUFhLE1BRWxqakcsVywwRUNOSUosRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JFLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSx5MkZBQTAyRixHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyw2REFBNkQsTUFBUSxHQUFHLFNBQVcsbzVCQUFvNUIsZUFBaUIsQ0FBQywwMkZBQTAyRixXQUFhLE1BRTl4TixXLHFCQ0NBRCxFQUFPRSxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0F1RFgsT0FyREFBLEVBQUtDLFNBQVcsV0FDZCxPQUFPQyxLQUFLQyxLQUFJLFNBQVVDLEdBQ3hCLElBQUlDLEVBQVVOLEVBQXVCSyxHQUVyQyxPQUFJQSxFQUFLLEdBQ0EsVUFBVUUsT0FBT0YsRUFBSyxHQUFJLE1BQU1FLE9BQU9ELEVBQVMsS0FHbERBLEtBQ05FLEtBQUssS0FLVlAsRUFBS04sRUFBSSxTQUFVYyxFQUFTQyxFQUFZQyxHQUNmLGlCQUFaRixJQUVUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxFQUFTLE1BRzdCLElBQUlHLEVBQXlCLEdBRTdCLEdBQUlELEVBQ0YsSUFBSyxJQUFJaEIsRUFBSSxFQUFHQSxFQUFJUSxLQUFLVSxPQUFRbEIsSUFBSyxDQUVwQyxJQUFJRyxFQUFL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ZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtY2FsZW5kYXIvZGlzdC9DYWxlbmRhci5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8gU2xhYic7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogMzAwO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgc3JjOiB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3JvYm90b3NsYWIvdjEzL0JuZ2JVWFpZVFhQSXZJQmdKSlNiNnMzQnpsUlJmS09GYnZqbzBvU1dhQS50dGYpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG59XFxuaHRtbCB7XFxuICBsaW5lLWhlaWdodDogMS4xNTtcXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xcbn1cXG5ib2R5IHtcXG4gIG1hcmdpbjogMDtcXG59XFxuYXJ0aWNsZSxcXG5hc2lkZSxcXG5mb290ZXIsXFxuaGVhZGVyLFxcbm5hdixcXG5zZWN0aW9uIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5oMSB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIG1hcmdpbjogMC42N2VtIDA7XFxufVxcbmZpZ2NhcHRpb24sXFxuZmlndXJlLFxcbm1haW4ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcbmZpZ3VyZSB7XFxuICBtYXJnaW46IDFlbSA0MHB4O1xcbn1cXG5ociB7XFxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcXG4gIGhlaWdodDogMDtcXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xcbn1cXG5wcmUge1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSxtb25vc3BhY2U7XFxuICBmb250LXNpemU6IDFlbTtcXG59XFxuYSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XFxufVxcbmFiYnJbdGl0bGVdIHtcXG4gIGJvcmRlci1ib3R0b206IG5vbmU7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcXG59XFxuYixcXG5zdHJvbmcge1xcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XFxufVxcbmIsXFxuc3Ryb25nIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcbmNvZGUsXFxua2JkLFxcbnNhbXAge1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSxtb25vc3BhY2U7XFxuICBmb250LXNpemU6IDFlbTtcXG59XFxuZGZuIHtcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcXG59XFxubWFyayB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xcbiAgY29sb3I6ICMwMDA7XFxufVxcbnNtYWxsIHtcXG4gIGZvbnQtc2l6ZTogODAlO1xcbn1cXG5zdWIsXFxuc3VwIHtcXG4gIGZvbnQtc2l6ZTogNzUlO1xcbiAgbGluZS1oZWlnaHQ6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcbnN1YiB7XFxuICBib3R0b206IC0wLjI1ZW07XFxufVxcbnN1cCB7XFxuICB0b3A6IC0wLjVlbTtcXG59XFxuYXVkaW8sXFxudmlkZW8ge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGhlaWdodDogMDtcXG59XFxuaW1nIHtcXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcXG59XFxuc3ZnOm5vdCg6cm9vdCkge1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuYnV0dG9uLFxcbmlucHV0LFxcbm9wdGdyb3VwLFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogMTAwJTtcXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5idXR0b24sXFxuaW5wdXQge1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7XFxufVxcbmJ1dHRvbixcXG5zZWxlY3Qge1xcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XFxufVxcbmJ1dHRvbixcXG5odG1sIFt0eXBlPWJ1dHRvbl0sXFxuW3R5cGU9cmVzZXRdLFxcblt0eXBlPXN1Ym1pdF0ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XFxufVxcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1idXR0b25dOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPXJlc2V0XTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVyIHtcXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcXG4gIHBhZGRpbmc6IDA7XFxufVxcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1idXR0b25dOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPXJlc2V0XTotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1zdWJtaXRdOi1tb3otZm9jdXNyaW5nIHtcXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcXG59XFxuZmllbGRzZXQge1xcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xcbn1cXG5sZWdlbmQge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgZGlzcGxheTogdGFibGU7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiAwO1xcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcXG59XFxucHJvZ3Jlc3Mge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcbn1cXG50ZXh0YXJlYSB7XFxuICBvdmVyZmxvdzogYXV0bztcXG59XFxuW3R5cGU9Y2hlY2tib3hdLFxcblt0eXBlPXJhZGlvXSB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgcGFkZGluZzogMDtcXG59XFxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcXG5bdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuW3R5cGU9c2VhcmNoXSB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xcbn1cXG5bdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxcblt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbn1cXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xcbiAgZm9udDogaW5oZXJpdDtcXG59XFxuZGV0YWlscyxcXG5tZW51IHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5zdW1tYXJ5IHtcXG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcXG59XFxuY2FudmFzIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxudGVtcGxhdGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuW2hpZGRlbl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuLmNsZWFyZml4OmFmdGVyIHtcXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgZm9udC1zaXplOiAwO1xcbiAgY29udGVudDogJyc7XFxuICBjbGVhcjogYm90aDtcXG4gIGhlaWdodDogMDtcXG59XFxuKiB7XFxuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG4udmlzdWFsbHlIaWRkZW46bm90KDpmb2N1cyk6bm90KDphY3RpdmUpIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAxcHg7XFxuICBoZWlnaHQ6IDFweDtcXG4gIG1hcmdpbjogLTFweDtcXG4gIGJvcmRlcjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgY2xpcC1wYXRoOiBpbnNldCgxMDAlKTtcXG4gIGNsaXA6IHJlY3QoMCAwIDApO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuLnNyLW9ubHkge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDFweDtcXG4gIGhlaWdodDogMXB4O1xcbiAgbWFyZ2luOiAtMXB4O1xcbiAgYm9yZGVyOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICBjbGlwLXBhdGg6IGluc2V0KDEwMCUpO1xcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcbi5maXJlZmx5IHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRvcDogNTAlO1xcbiAgd2lkdGg6IDAuNHZ3O1xcbiAgaGVpZ2h0OiAwLjR2dztcXG4gIG1hcmdpbjogLTAuMnZ3IDAgMCA5Ljh2dztcXG4gIGFuaW1hdGlvbjogZWFzZSAyMDBzIGFsdGVybmF0ZSBpbmZpbml0ZTtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG4uZmlyZWZseTo6YmVmb3JlLFxcbi5maXJlZmx5OjphZnRlciB7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgdHJhbnNmb3JtLW9yaWdpbjogLTEwdnc7XFxufVxcbi5maXJlZmx5OjpiZWZvcmUge1xcbiAgYmFja2dyb3VuZDogYmxhY2s7XFxuICBvcGFjaXR5OiAwLjQ7XFxuICBhbmltYXRpb246IGRyaWZ0IGVhc2UgYWx0ZXJuYXRlIGluZmluaXRlO1xcbn1cXG4uZmlyZWZseTo6YWZ0ZXIge1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxuICBvcGFjaXR5OiAwO1xcbiAgYm94LXNoYWRvdzogMCAwIDB2dyAwdncgeWVsbG93O1xcbiAgYW5pbWF0aW9uOiBkcmlmdCBlYXNlIGFsdGVybmF0ZSBpbmZpbml0ZSwgZmxhc2ggZWFzZSBpbmZpbml0ZTtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEpIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlMTtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxOHM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxKTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxOHMsIDg3NDFtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCAyMDY4bXM7XFxufVxcbkBrZXlmcmFtZXMgbW92ZTEge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE0dncpIHRyYW5zbGF0ZVkoMTh2aCkgc2NhbGUoMC45MSk7XFxuICB9XFxuICA1LjI2MzE1Nzg5NDclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zdncpIHRyYW5zbGF0ZVkoLTIwdmgpIHNjYWxlKDAuNDMpO1xcbiAgfVxcbiAgMTAuNTI2MzE1Nzg5NSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTd2dykgdHJhbnNsYXRlWSgyNHZoKSBzY2FsZSgwLjU0KTtcXG4gIH1cXG4gIDE1Ljc4OTQ3MzY4NDIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ1dncpIHRyYW5zbGF0ZVkoMzZ2aCkgc2NhbGUoMC42NCk7XFxuICB9XFxuICAyMS4wNTI2MzE1Nzg5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjd2dykgdHJhbnNsYXRlWSgtNDZ2aCkgc2NhbGUoMC41Nyk7XFxuICB9XFxuICAyNi4zMTU3ODk0NzM3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMXZ3KSB0cmFuc2xhdGVZKC0yOXZoKSBzY2FsZSgwLjYzKTtcXG4gIH1cXG4gIDMxLjU3ODk0NzM2ODQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00MXZ3KSB0cmFuc2xhdGVZKDM1dmgpIHNjYWxlKDAuODMpO1xcbiAgfVxcbiAgMzYuODQyMTA1MjYzMiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzZ2dykgdHJhbnNsYXRlWSgtMjJ2aCkgc2NhbGUoMC42Nyk7XFxuICB9XFxuICA0Mi4xMDUyNjMxNTc5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHZ3KSB0cmFuc2xhdGVZKC00MHZoKSBzY2FsZSgwLjM3KTtcXG4gIH1cXG4gIDQ3LjM2ODQyMTA1MjYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIydncpIHRyYW5zbGF0ZVkoMTB2aCkgc2NhbGUoMC41OCk7XFxuICB9XFxuICA1Mi42MzE1Nzg5NDc0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDd2dykgdHJhbnNsYXRlWSgzNHZoKSBzY2FsZSgwLjkxKTtcXG4gIH1cXG4gIDU3Ljg5NDczNjg0MjElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00NnZ3KSB0cmFuc2xhdGVZKC05dmgpIHNjYWxlKDAuOTcpO1xcbiAgfVxcbiAgNjMuMTU3ODk0NzM2OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDN2dykgdHJhbnNsYXRlWSgyMHZoKSBzY2FsZSgwLjQpO1xcbiAgfVxcbiAgNjguNDIxMDUyNjMxNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDd2dykgdHJhbnNsYXRlWSg0MXZoKSBzY2FsZSgwLjc1KTtcXG4gIH1cXG4gIDczLjY4NDIxMDUyNjMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIzdncpIHRyYW5zbGF0ZVkoLTd2aCkgc2NhbGUoMC40OCk7XFxuICB9XFxuICA3OC45NDczNjg0MjExJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMnZ3KSB0cmFuc2xhdGVZKDM2dmgpIHNjYWxlKDAuNTEpO1xcbiAgfVxcbiAgODQuMjEwNTI2MzE1OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjJ2dykgdHJhbnNsYXRlWSgzM3ZoKSBzY2FsZSgwLjgpO1xcbiAgfVxcbiAgODkuNDczNjg0MjEwNSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoN3Z3KSB0cmFuc2xhdGVZKC0xNXZoKSBzY2FsZSgwLjc4KTtcXG4gIH1cXG4gIDk0LjczNjg0MjEwNTMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00MXZ3KSB0cmFuc2xhdGVZKC0zMXZoKSBzY2FsZSgwLjcpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwdncpIHRyYW5zbGF0ZVkoMjJ2aCkgc2NhbGUoMC45Nik7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgyKSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTI7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgyKTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTRzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMik6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTRzLCA4MDQ0bXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgMTgwOG1zO1xcbn1cXG5Aa2V5ZnJhbWVzIG1vdmUyIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDB2dykgdHJhbnNsYXRlWSg0NnZoKSBzY2FsZSgwLjc4KTtcXG4gIH1cXG4gIDUuMjYzMTU3ODk0NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQzdncpIHRyYW5zbGF0ZVkoLTEwdmgpIHNjYWxlKDAuNjMpO1xcbiAgfVxcbiAgMTAuNTI2MzE1Nzg5NSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTh2dykgdHJhbnNsYXRlWSgtMTh2aCkgc2NhbGUoMC44NSk7XFxuICB9XFxuICAxNS43ODk0NzM2ODQyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1dncpIHRyYW5zbGF0ZVkoLTExdmgpIHNjYWxlKDAuMzQpO1xcbiAgfVxcbiAgMjEuMDUyNjMxNTc4OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHZ3KSB0cmFuc2xhdGVZKC0xNnZoKSBzY2FsZSgwLjcxKTtcXG4gIH1cXG4gIDI2LjMxNTc4OTQ3MzclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00NXZ3KSB0cmFuc2xhdGVZKDE0dmgpIHNjYWxlKDAuNTUpO1xcbiAgfVxcbiAgMzEuNTc4OTQ3MzY4NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjh2dykgdHJhbnNsYXRlWSgxMHZoKSBzY2FsZSgwLjY0KTtcXG4gIH1cXG4gIDM2Ljg0MjEwNTI2MzIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zN3Z3KSB0cmFuc2xhdGVZKC0xMHZoKSBzY2FsZSgwLjY5KTtcXG4gIH1cXG4gIDQyLjEwNTI2MzE1NzklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00MnZ3KSB0cmFuc2xhdGVZKC0zNnZoKSBzY2FsZSgwLjM0KTtcXG4gIH1cXG4gIDQ3LjM2ODQyMTA1MjYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM1dncpIHRyYW5zbGF0ZVkoLTI4dmgpIHNjYWxlKDAuNDEpO1xcbiAgfVxcbiAgNTIuNjMxNTc4OTQ3NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM2dncpIHRyYW5zbGF0ZVkoMjd2aCkgc2NhbGUoMC40Nik7XFxuICB9XFxuICA1Ny44OTQ3MzY4NDIxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMXZ3KSB0cmFuc2xhdGVZKDExdmgpIHNjYWxlKDAuNTgpO1xcbiAgfVxcbiAgNjMuMTU3ODk0NzM2OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTR2dykgdHJhbnNsYXRlWSgtNXZoKSBzY2FsZSgwLjY0KTtcXG4gIH1cXG4gIDY4LjQyMTA1MjYzMTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xNHZ3KSB0cmFuc2xhdGVZKC0xOXZoKSBzY2FsZSgwLjY0KTtcXG4gIH1cXG4gIDczLjY4NDIxMDUyNjMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMydncpIHRyYW5zbGF0ZVkoLTF2aCkgc2NhbGUoMC43Nyk7XFxuICB9XFxuICA3OC45NDczNjg0MjExJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDZ2dykgdHJhbnNsYXRlWSgzdmgpIHNjYWxlKDAuMzkpO1xcbiAgfVxcbiAgODQuMjEwNTI2MzE1OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTZ2dykgdHJhbnNsYXRlWSgtNDZ2aCkgc2NhbGUoMC42Mik7XFxuICB9XFxuICA4OS40NzM2ODQyMTA1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NHZ3KSB0cmFuc2xhdGVZKDI0dmgpIHNjYWxlKDAuODkpO1xcbiAgfVxcbiAgOTQuNzM2ODQyMTA1MyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM4dncpIHRyYW5zbGF0ZVkoMzR2aCkgc2NhbGUoMC43Nik7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xNnZ3KSB0cmFuc2xhdGVZKC0zOXZoKSBzY2FsZSgwLjg2KTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDMpIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlMztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDMpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxN3M7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgzKTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxN3MsIDEwNzE0bXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgMTcxNm1zO1xcbn1cXG5Aa2V5ZnJhbWVzIG1vdmUzIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQzdncpIHRyYW5zbGF0ZVkoMzR2aCkgc2NhbGUoMC41Myk7XFxuICB9XFxuICA1Ljg4MjM1Mjk0MTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM0dncpIHRyYW5zbGF0ZVkoLTEwdmgpIHNjYWxlKDAuNDkpO1xcbiAgfVxcbiAgMTEuNzY0NzA1ODgyNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNnZ3KSB0cmFuc2xhdGVZKC0xOXZoKSBzY2FsZSgwLjQ1KTtcXG4gIH1cXG4gIDE3LjY0NzA1ODgyMzUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNnZ3KSB0cmFuc2xhdGVZKC0xMnZoKSBzY2FsZSgwLjUzKTtcXG4gIH1cXG4gIDIzLjUyOTQxMTc2NDclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ0dncpIHRyYW5zbGF0ZVkoNDN2aCkgc2NhbGUoMC42NCk7XFxuICB9XFxuICAyOS40MTE3NjQ3MDU5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNnZ3KSB0cmFuc2xhdGVZKC0zMnZoKSBzY2FsZSgwLjgzKTtcXG4gIH1cXG4gIDM1LjI5NDExNzY0NzElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ1dncpIHRyYW5zbGF0ZVkoLTE0dmgpIHNjYWxlKDAuOTMpO1xcbiAgfVxcbiAgNDEuMTc2NDcwNTg4MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzN2dykgdHJhbnNsYXRlWSgtNDN2aCkgc2NhbGUoMC42Myk7XFxuICB9XFxuICA0Ny4wNTg4MjM1Mjk0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtOHZ3KSB0cmFuc2xhdGVZKDI2dmgpIHNjYWxlKDAuNjYpO1xcbiAgfVxcbiAgNTIuOTQxMTc2NDcwNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzR2dykgdHJhbnNsYXRlWSgzMXZoKSBzY2FsZSgwLjcyKTtcXG4gIH1cXG4gIDU4LjgyMzUyOTQxMTglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMydncpIHRyYW5zbGF0ZVkoMjB2aCkgc2NhbGUoMC41Nik7XFxuICB9XFxuICA2NC43MDU4ODIzNTI5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjV2dykgdHJhbnNsYXRlWSgyMHZoKSBzY2FsZSgwLjkpO1xcbiAgfVxcbiAgNzAuNTg4MjM1Mjk0MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIxdncpIHRyYW5zbGF0ZVkoMnZoKSBzY2FsZSgwLjczKTtcXG4gIH1cXG4gIDc2LjQ3MDU4ODIzNTMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMnZ3KSB0cmFuc2xhdGVZKDEwdmgpIHNjYWxlKDAuNDYpO1xcbiAgfVxcbiAgODIuMzUyOTQxMTc2NSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTB2dykgdHJhbnNsYXRlWSgxM3ZoKSBzY2FsZSgwLjk0KTtcXG4gIH1cXG4gIDg4LjIzNTI5NDExNzYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDh2dykgdHJhbnNsYXRlWSgtMzJ2aCkgc2NhbGUoMC40NSk7XFxuICB9XFxuICA5NC4xMTc2NDcwNTg4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MHZ3KSB0cmFuc2xhdGVZKDMxdmgpIHNjYWxlKDAuNTEpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzOHZ3KSB0cmFuc2xhdGVZKC0yNnZoKSBzY2FsZSgwLjY0KTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDQpIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlNDtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDQpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMXM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg0KTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMXMsIDYwNzJtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCAxNDU5bXM7XFxufVxcbkBrZXlmcmFtZXMgbW92ZTQge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQzdncpIHRyYW5zbGF0ZVkoMTB2aCkgc2NhbGUoMC41Mik7XFxuICB9XFxuICA1LjU1NTU1NTU1NTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDd2dykgdHJhbnNsYXRlWSg4dmgpIHNjYWxlKDAuNDMpO1xcbiAgfVxcbiAgMTEuMTExMTExMTExMSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzJ2dykgdHJhbnNsYXRlWSgtNDR2aCkgc2NhbGUoMC43Mik7XFxuICB9XFxuICAxNi42NjY2NjY2NjY3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxN3Z3KSB0cmFuc2xhdGVZKC0yMXZoKSBzY2FsZSgwLjI4KTtcXG4gIH1cXG4gIDIyLjIyMjIyMjIyMjIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0dncpIHRyYW5zbGF0ZVkoNDJ2aCkgc2NhbGUoMC4zNik7XFxuICB9XFxuICAyNy43Nzc3Nzc3Nzc4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNHZ3KSB0cmFuc2xhdGVZKDQ2dmgpIHNjYWxlKDAuNTEpO1xcbiAgfVxcbiAgMzMuMzMzMzMzMzMzMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjl2dykgdHJhbnNsYXRlWSgtMzF2aCkgc2NhbGUoMC40Myk7XFxuICB9XFxuICAzOC44ODg4ODg4ODg5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzdncpIHRyYW5zbGF0ZVkoLTIxdmgpIHNjYWxlKDAuNik7XFxuICB9XFxuICA0NC40NDQ0NDQ0NDQ0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0MnZ3KSB0cmFuc2xhdGVZKC0xNXZoKSBzY2FsZSgwLjI2KTtcXG4gIH1cXG4gIDUwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTR2dykgdHJhbnNsYXRlWSgyNHZoKSBzY2FsZSgwLjg2KTtcXG4gIH1cXG4gIDU1LjU1NTU1NTU1NTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zdncpIHRyYW5zbGF0ZVkoNDN2aCkgc2NhbGUoMC40OSk7XFxuICB9XFxuICA2MS4xMTExMTExMTExJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxOHZ3KSB0cmFuc2xhdGVZKDMxdmgpIHNjYWxlKDAuNTgpO1xcbiAgfVxcbiAgNjYuNjY2NjY2NjY2NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDB2dykgdHJhbnNsYXRlWSgtMTV2aCkgc2NhbGUoMC4zOCk7XFxuICB9XFxuICA3Mi4yMjIyMjIyMjIyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDl2dykgdHJhbnNsYXRlWSgyM3ZoKSBzY2FsZSgwLjQ4KTtcXG4gIH1cXG4gIDc3Ljc3Nzc3Nzc3NzglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNHZ3KSB0cmFuc2xhdGVZKDl2aCkgc2NhbGUoMC43MSk7XFxuICB9XFxuICA4My4zMzMzMzMzMzMzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjl2dykgdHJhbnNsYXRlWSgtNDF2aCkgc2NhbGUoMC45NSk7XFxuICB9XFxuICA4OC44ODg4ODg4ODg5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNXZ3KSB0cmFuc2xhdGVZKC0xdmgpIHNjYWxlKDAuMyk7XFxuICB9XFxuICA5NC40NDQ0NDQ0NDQ0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTZ2dykgdHJhbnNsYXRlWSgyMHZoKSBzY2FsZSgwLjQzKTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDF2dykgdHJhbnNsYXRlWSgtMTZ2aCkgc2NhbGUoMC45OSk7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg1KSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTU7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg1KTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTVzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoNSk6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTVzLCA4ODg0bXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgNzczMm1zO1xcbn1cXG5Aa2V5ZnJhbWVzIG1vdmU1IHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDN2dykgdHJhbnNsYXRlWSg0N3ZoKSBzY2FsZSgwLjczKTtcXG4gIH1cXG4gIDQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMHZ3KSB0cmFuc2xhdGVZKC00OHZoKSBzY2FsZSgwLjg1KTtcXG4gIH1cXG4gIDglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNnZ3KSB0cmFuc2xhdGVZKC0zNHZoKSBzY2FsZSgwLjUpO1xcbiAgfVxcbiAgMTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zN3Z3KSB0cmFuc2xhdGVZKC0yNHZoKSBzY2FsZSgwLjcpO1xcbiAgfVxcbiAgMTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0dncpIHRyYW5zbGF0ZVkoMXZoKSBzY2FsZSgwLjk5KTtcXG4gIH1cXG4gIDIwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTF2dykgdHJhbnNsYXRlWSgtM3ZoKSBzY2FsZSgwLjgpO1xcbiAgfVxcbiAgMjQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMnZ3KSB0cmFuc2xhdGVZKC00NnZoKSBzY2FsZSgwLjM1KTtcXG4gIH1cXG4gIDI4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDl2dykgdHJhbnNsYXRlWSg0MXZoKSBzY2FsZSgwLjc2KTtcXG4gIH1cXG4gIDMyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHZ3KSB0cmFuc2xhdGVZKC0xOXZoKSBzY2FsZSgwLjU2KTtcXG4gIH1cXG4gIDM2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyOXZ3KSB0cmFuc2xhdGVZKDQydmgpIHNjYWxlKDAuNCk7XFxuICB9XFxuICA0MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTd2dykgdHJhbnNsYXRlWSgxOXZoKSBzY2FsZSgwLjc5KTtcXG4gIH1cXG4gIDQ0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDl2dykgdHJhbnNsYXRlWSg0MHZoKSBzY2FsZSgwLjkxKTtcXG4gIH1cXG4gIDQ4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0N3Z3KSB0cmFuc2xhdGVZKC00NnZoKSBzY2FsZSgwLjUzKTtcXG4gIH1cXG4gIDUyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTR2dykgdHJhbnNsYXRlWSgxOHZoKSBzY2FsZSgwLjI5KTtcXG4gIH1cXG4gIDU2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNHZ3KSB0cmFuc2xhdGVZKC0xN3ZoKSBzY2FsZSgwLjU4KTtcXG4gIH1cXG4gIDYwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtOHZ3KSB0cmFuc2xhdGVZKC03dmgpIHNjYWxlKDAuNDgpO1xcbiAgfVxcbiAgNjQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDh2dykgdHJhbnNsYXRlWSgzMXZoKSBzY2FsZSgwLjQ4KTtcXG4gIH1cXG4gIDY4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjl2dykgdHJhbnNsYXRlWSgtNDZ2aCkgc2NhbGUoMC45Nyk7XFxuICB9XFxuICA3MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTB2dykgdHJhbnNsYXRlWSgzNXZoKSBzY2FsZSgwLjI5KTtcXG4gIH1cXG4gIDc2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0dncpIHRyYW5zbGF0ZVkoNDN2aCkgc2NhbGUoMC41OCk7XFxuICB9XFxuICA4MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzl2dykgdHJhbnNsYXRlWSgtMzh2aCkgc2NhbGUoMC4zOCk7XFxuICB9XFxuICA4NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDl2dykgdHJhbnNsYXRlWSgyOHZoKSBzY2FsZSgwLjY1KTtcXG4gIH1cXG4gIDg4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtOXZ3KSB0cmFuc2xhdGVZKC0zNXZoKSBzY2FsZSgwLjkzKTtcXG4gIH1cXG4gIDkyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTl2dykgdHJhbnNsYXRlWSgzOHZoKSBzY2FsZSgwLjU0KTtcXG4gIH1cXG4gIDk2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0MXZ3KSB0cmFuc2xhdGVZKC0xMXZoKSBzY2FsZSgwLjc4KTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjB2dykgdHJhbnNsYXRlWSg0MXZoKSBzY2FsZSgwLjQpO1xcbiAgfVxcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoNikge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmU2O1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoNik6OmJlZm9yZSB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE3cztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDYpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE3cywgNjQzM21zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDIzMzNtcztcXG59XFxuQGtleWZyYW1lcyBtb3ZlNiB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMHZ3KSB0cmFuc2xhdGVZKDM2dmgpIHNjYWxlKDAuNDgpO1xcbiAgfVxcbiAgNC4zNDc4MjYwODclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDd2dykgdHJhbnNsYXRlWSgxNXZoKSBzY2FsZSgwLjUzKTtcXG4gIH1cXG4gIDguNjk1NjUyMTczOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzd2dykgdHJhbnNsYXRlWSgydmgpIHNjYWxlKDAuMzkpO1xcbiAgfVxcbiAgMTMuMDQzNDc4MjYwOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIxdncpIHRyYW5zbGF0ZVkoMzZ2aCkgc2NhbGUoMC44NCk7XFxuICB9XFxuICAxNy4zOTEzMDQzNDc4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDF2dykgdHJhbnNsYXRlWSgyNXZoKSBzY2FsZSgwLjU3KTtcXG4gIH1cXG4gIDIxLjczOTEzMDQzNDglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDR2dykgdHJhbnNsYXRlWSgtMzJ2aCkgc2NhbGUoMC4zNik7XFxuICB9XFxuICAyNi4wODY5NTY1MjE3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTR2dykgdHJhbnNsYXRlWSgydmgpIHNjYWxlKDAuODgpO1xcbiAgfVxcbiAgMzAuNDM0NzgyNjA4NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI0dncpIHRyYW5zbGF0ZVkoMzJ2aCkgc2NhbGUoMC4yOSk7XFxuICB9XFxuICAzNC43ODI2MDg2OTU3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MHZ3KSB0cmFuc2xhdGVZKDE0dmgpIHNjYWxlKDAuNTcpO1xcbiAgfVxcbiAgMzkuMTMwNDM0NzgyNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjV2dykgdHJhbnNsYXRlWSgyMnZoKSBzY2FsZSgwLjUpO1xcbiAgfVxcbiAgNDMuNDc4MjYwODY5NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTl2dykgdHJhbnNsYXRlWSgzNXZoKSBzY2FsZSgwLjMpO1xcbiAgfVxcbiAgNDcuODI2MDg2OTU2NSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDB2dykgdHJhbnNsYXRlWSgyMHZoKSBzY2FsZSgwLjUzKTtcXG4gIH1cXG4gIDUyLjE3MzkxMzA0MzUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ5dncpIHRyYW5zbGF0ZVkoLTMwdmgpIHNjYWxlKDEpO1xcbiAgfVxcbiAgNTYuNTIxNzM5MTMwNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTZ2dykgdHJhbnNsYXRlWSgxNHZoKSBzY2FsZSgwLjU1KTtcXG4gIH1cXG4gIDYwLjg2OTU2NTIxNzQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQydncpIHRyYW5zbGF0ZVkoLTEwdmgpIHNjYWxlKDAuNTEpO1xcbiAgfVxcbiAgNjUuMjE3MzkxMzA0MyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI0dncpIHRyYW5zbGF0ZVkoLTI5dmgpIHNjYWxlKDAuMzMpO1xcbiAgfVxcbiAgNjkuNTY1MjE3MzkxMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDZ2dykgdHJhbnNsYXRlWSgyOHZoKSBzY2FsZSgwLjU1KTtcXG4gIH1cXG4gIDczLjkxMzA0MzQ3ODMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDR2dykgdHJhbnNsYXRlWSgtMTR2aCkgc2NhbGUoMC4yOCk7XFxuICB9XFxuICA3OC4yNjA4Njk1NjUyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzR2dykgdHJhbnNsYXRlWSg5dmgpIHNjYWxlKDAuNTQpO1xcbiAgfVxcbiAgODIuNjA4Njk1NjUyMiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTB2dykgdHJhbnNsYXRlWSgtNDl2aCkgc2NhbGUoMC41OSk7XFxuICB9XFxuICA4Ni45NTY1MjE3MzkxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzN2dykgdHJhbnNsYXRlWSgwdmgpIHNjYWxlKDAuNjUpO1xcbiAgfVxcbiAgOTEuMzA0MzQ3ODI2MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE2dncpIHRyYW5zbGF0ZVkoMHZoKSBzY2FsZSgwLjMpO1xcbiAgfVxcbiAgOTUuNjUyMTczOTEzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjd2dykgdHJhbnNsYXRlWSgtMTZ2aCkgc2NhbGUoMC45Mik7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM0dncpIHRyYW5zbGF0ZVkoMHZoKSBzY2FsZSgwLjM2KTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDcpIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlNztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDcpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxNXM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg3KTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxNXMsIDY2NjRtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCA1NTg3bXM7XFxufVxcbkBrZXlmcmFtZXMgbW92ZTcge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMXZ3KSB0cmFuc2xhdGVZKDE3dmgpIHNjYWxlKDAuOTUpO1xcbiAgfVxcbiAgNC4zNDc4MjYwODclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM5dncpIHRyYW5zbGF0ZVkoMzN2aCkgc2NhbGUoMC45Mik7XFxuICB9XFxuICA4LjY5NTY1MjE3MzklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xNXZ3KSB0cmFuc2xhdGVZKC0xM3ZoKSBzY2FsZSgwLjUpO1xcbiAgfVxcbiAgMTMuMDQzNDc4MjYwOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMXZ3KSB0cmFuc2xhdGVZKC00M3ZoKSBzY2FsZSgwLjkxKTtcXG4gIH1cXG4gIDE3LjM5MTMwNDM0NzglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00OXZ3KSB0cmFuc2xhdGVZKDI0dmgpIHNjYWxlKDAuMzMpO1xcbiAgfVxcbiAgMjEuNzM5MTMwNDM0OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDN2dykgdHJhbnNsYXRlWSg0MnZoKSBzY2FsZSgwLjk4KTtcXG4gIH1cXG4gIDI2LjA4Njk1NjUyMTclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNXZ3KSB0cmFuc2xhdGVZKDQ0dmgpIHNjYWxlKDAuNzQpO1xcbiAgfVxcbiAgMzAuNDM0NzgyNjA4NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTF2dykgdHJhbnNsYXRlWSgtMzh2aCkgc2NhbGUoMC42OSk7XFxuICB9XFxuICAzNC43ODI2MDg2OTU3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzZ2dykgdHJhbnNsYXRlWSgyOXZoKSBzY2FsZSgwLjU2KTtcXG4gIH1cXG4gIDM5LjEzMDQzNDc4MjYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMXZ3KSB0cmFuc2xhdGVZKC00NXZoKSBzY2FsZSgwLjI3KTtcXG4gIH1cXG4gIDQzLjQ3ODI2MDg2OTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0dncpIHRyYW5zbGF0ZVkoNDF2aCkgc2NhbGUoMC43Mik7XFxuICB9XFxuICA0Ny44MjYwODY5NTY1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MHZ3KSB0cmFuc2xhdGVZKC00NHZoKSBzY2FsZSgwLjkzKTtcXG4gIH1cXG4gIDUyLjE3MzkxMzA0MzUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIxdncpIHRyYW5zbGF0ZVkoLTQ5dmgpIHNjYWxlKDAuMjYpO1xcbiAgfVxcbiAgNTYuNTIxNzM5MTMwNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMXZ3KSB0cmFuc2xhdGVZKC00OHZoKSBzY2FsZSgwLjUzKTtcXG4gIH1cXG4gIDYwLjg2OTU2NTIxNzQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zOHZ3KSB0cmFuc2xhdGVZKC00MnZoKSBzY2FsZSgwLjM3KTtcXG4gIH1cXG4gIDY1LjIxNzM5MTMwNDMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00dncpIHRyYW5zbGF0ZVkoLTQ0dmgpIHNjYWxlKDAuNDMpO1xcbiAgfVxcbiAgNjkuNTY1MjE3MzkxMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI5dncpIHRyYW5zbGF0ZVkoMzB2aCkgc2NhbGUoMC45KTtcXG4gIH1cXG4gIDczLjkxMzA0MzQ3ODMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01dncpIHRyYW5zbGF0ZVkoMHZoKSBzY2FsZSgwLjc5KTtcXG4gIH1cXG4gIDc4LjI2MDg2OTU2NTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwdncpIHRyYW5zbGF0ZVkoMTh2aCkgc2NhbGUoMC41NSk7XFxuICB9XFxuICA4Mi42MDg2OTU2NTIyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNXZ3KSB0cmFuc2xhdGVZKDE2dmgpIHNjYWxlKDAuNjcpO1xcbiAgfVxcbiAgODYuOTU2NTIxNzM5MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE1dncpIHRyYW5zbGF0ZVkoLTQ5dmgpIHNjYWxlKDAuOTYpO1xcbiAgfVxcbiAgOTEuMzA0MzQ3ODI2MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXZ3KSB0cmFuc2xhdGVZKDQ0dmgpIHNjYWxlKDAuODEpO1xcbiAgfVxcbiAgOTUuNjUyMTczOTEzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMnZ3KSB0cmFuc2xhdGVZKDF2aCkgc2NhbGUoMC4zMyk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEzdncpIHRyYW5zbGF0ZVkoLTMwdmgpIHNjYWxlKDAuODUpO1xcbiAgfVxcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoOCkge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmU4O1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoOCk6OmJlZm9yZSB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE0cztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDgpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE0cywgNjc0Mm1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDU0NzltcztcXG59XFxuQGtleWZyYW1lcyBtb3ZlOCB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjN2dykgdHJhbnNsYXRlWSg0NXZoKSBzY2FsZSgwLjgpO1xcbiAgfVxcbiAgNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTh2dykgdHJhbnNsYXRlWSg1dmgpIHNjYWxlKDAuNDMpO1xcbiAgfVxcbiAgOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXZ3KSB0cmFuc2xhdGVZKDEydmgpIHNjYWxlKDAuOTUpO1xcbiAgfVxcbiAgMTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zM3Z3KSB0cmFuc2xhdGVZKC0yOXZoKSBzY2FsZSgwLjgpO1xcbiAgfVxcbiAgMTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQydncpIHRyYW5zbGF0ZVkoOHZoKSBzY2FsZSgwLjI4KTtcXG4gIH1cXG4gIDIwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtM3Z3KSB0cmFuc2xhdGVZKDIxdmgpIHNjYWxlKDAuNTgpO1xcbiAgfVxcbiAgMjQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00NHZ3KSB0cmFuc2xhdGVZKC0yNHZoKSBzY2FsZSgwLjg4KTtcXG4gIH1cXG4gIDI4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0OXZ3KSB0cmFuc2xhdGVZKC0ydmgpIHNjYWxlKDAuNTkpO1xcbiAgfVxcbiAgMzIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDV2dykgdHJhbnNsYXRlWSgyOXZoKSBzY2FsZSgwLjI4KTtcXG4gIH1cXG4gIDM2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMnZ3KSB0cmFuc2xhdGVZKC0yNXZoKSBzY2FsZSgwLjM2KTtcXG4gIH1cXG4gIDQwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0N3Z3KSB0cmFuc2xhdGVZKC0xM3ZoKSBzY2FsZSgwLjQxKTtcXG4gIH1cXG4gIDQ0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NnZ3KSB0cmFuc2xhdGVZKC0yM3ZoKSBzY2FsZSgwLjM5KTtcXG4gIH1cXG4gIDQ4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNnZ3KSB0cmFuc2xhdGVZKC0yMnZoKSBzY2FsZSgwLjUpO1xcbiAgfVxcbiAgNTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yOHZ3KSB0cmFuc2xhdGVZKC0zNnZoKSBzY2FsZSgwLjQ0KTtcXG4gIH1cXG4gIDU2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0MXZ3KSB0cmFuc2xhdGVZKC0yOHZoKSBzY2FsZSgwLjQxKTtcXG4gIH1cXG4gIDYwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzl2dykgdHJhbnNsYXRlWSgzNXZoKSBzY2FsZSgwLjU5KTtcXG4gIH1cXG4gIDY0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHZ3KSB0cmFuc2xhdGVZKC0zM3ZoKSBzY2FsZSgwLjkpO1xcbiAgfVxcbiAgNjglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00MHZ3KSB0cmFuc2xhdGVZKC0xNXZoKSBzY2FsZSgwLjgzKTtcXG4gIH1cXG4gIDcyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoMjl2aCkgc2NhbGUoMC4zNyk7XFxuICB9XFxuICA3NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwdncpIHRyYW5zbGF0ZVkoNnZoKSBzY2FsZSgwLjM0KTtcXG4gIH1cXG4gIDgwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNnZ3KSB0cmFuc2xhdGVZKDQzdmgpIHNjYWxlKDAuNzIpO1xcbiAgfVxcbiAgODQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDExdncpIHRyYW5zbGF0ZVkoLTI4dmgpIHNjYWxlKDAuMzYpO1xcbiAgfVxcbiAgODglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDh2dykgdHJhbnNsYXRlWSg0MXZoKSBzY2FsZSgwLjQ2KTtcXG4gIH1cXG4gIDkyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MHZ3KSB0cmFuc2xhdGVZKC0zMHZoKSBzY2FsZSgwLjk3KTtcXG4gIH1cXG4gIDk2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzF2dykgdHJhbnNsYXRlWSgwdmgpIHNjYWxlKDAuMjgpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzF2dykgdHJhbnNsYXRlWSgzMHZoKSBzY2FsZSgwLjcpO1xcbiAgfVxcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoOSkge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmU5O1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoOSk6OmJlZm9yZSB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDEwcztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDkpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDEwcywgNjI0MG1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDcxNTdtcztcXG59XFxuQGtleWZyYW1lcyBtb3ZlOSB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjB2dykgdHJhbnNsYXRlWSgtMTN2aCkgc2NhbGUoMC4yNyk7XFxuICB9XFxuICAzLjg0NjE1Mzg0NjIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC02dncpIHRyYW5zbGF0ZVkoLTQ1dmgpIHNjYWxlKDAuOTIpO1xcbiAgfVxcbiAgNy42OTIzMDc2OTIzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyM3Z3KSB0cmFuc2xhdGVZKC0yMXZoKSBzY2FsZSgwLjc3KTtcXG4gIH1cXG4gIDExLjUzODQ2MTUzODUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zOHZ3KSB0cmFuc2xhdGVZKDE0dmgpIHNjYWxlKDAuOTMpO1xcbiAgfVxcbiAgMTUuMzg0NjE1Mzg0NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMnZ3KSB0cmFuc2xhdGVZKDI5dmgpIHNjYWxlKDAuODMpO1xcbiAgfVxcbiAgMTkuMjMwNzY5MjMwOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE1dncpIHRyYW5zbGF0ZVkoMTd2aCkgc2NhbGUoMC44NCk7XFxuICB9XFxuICAyMy4wNzY5MjMwNzY5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NXZ3KSB0cmFuc2xhdGVZKDI4dmgpIHNjYWxlKDAuMzUpO1xcbiAgfVxcbiAgMjYuOTIzMDc2OTIzMSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQzdncpIHRyYW5zbGF0ZVkoMTB2aCkgc2NhbGUoMC4zMSk7XFxuICB9XFxuICAzMC43NjkyMzA3NjkyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMnZ3KSB0cmFuc2xhdGVZKDZ2aCkgc2NhbGUoMC45NCk7XFxuICB9XFxuICAzNC42MTUzODQ2MTU0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzOXZ3KSB0cmFuc2xhdGVZKC0yM3ZoKSBzY2FsZSgwLjY0KTtcXG4gIH1cXG4gIDM4LjQ2MTUzODQ2MTUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMHZ3KSB0cmFuc2xhdGVZKC0xMnZoKSBzY2FsZSgwLjYpO1xcbiAgfVxcbiAgNDIuMzA3NjkyMzA3NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMwdncpIHRyYW5zbGF0ZVkoLTd2aCkgc2NhbGUoMC4zNyk7XFxuICB9XFxuICA0Ni4xNTM4NDYxNTM4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDd2dykgdHJhbnNsYXRlWSgxdmgpIHNjYWxlKDAuODgpO1xcbiAgfVxcbiAgNTAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0dncpIHRyYW5zbGF0ZVkoLTMwdmgpIHNjYWxlKDAuNDQpO1xcbiAgfVxcbiAgNTMuODQ2MTUzODQ2MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMzdncpIHRyYW5zbGF0ZVkoMTV2aCkgc2NhbGUoMC40MSk7XFxuICB9XFxuICA1Ny42OTIzMDc2OTIzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTJ2dykgdHJhbnNsYXRlWSgtMzd2aCkgc2NhbGUoMC44NCk7XFxuICB9XFxuICA2MS41Mzg0NjE1Mzg1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNHZ3KSB0cmFuc2xhdGVZKC00NHZoKSBzY2FsZSgwLjQzKTtcXG4gIH1cXG4gIDY1LjM4NDYxNTM4NDYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zM3Z3KSB0cmFuc2xhdGVZKC0xMHZoKSBzY2FsZSgwLjQ3KTtcXG4gIH1cXG4gIDY5LjIzMDc2OTIzMDglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yOXZ3KSB0cmFuc2xhdGVZKC04dmgpIHNjYWxlKDAuMzgpO1xcbiAgfVxcbiAgNzMuMDc2OTIzMDc2OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM3dncpIHRyYW5zbGF0ZVkoMTd2aCkgc2NhbGUoMC43NCk7XFxuICB9XFxuICA3Ni45MjMwNzY5MjMxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjZ2dykgdHJhbnNsYXRlWSgtMTN2aCkgc2NhbGUoMC40Mik7XFxuICB9XFxuICA4MC43NjkyMzA3NjkyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoMjJ2aCkgc2NhbGUoMC43Nik7XFxuICB9XFxuICA4NC42MTUzODQ2MTU0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NXZ3KSB0cmFuc2xhdGVZKC0zNXZoKSBzY2FsZSgwLjg0KTtcXG4gIH1cXG4gIDg4LjQ2MTUzODQ2MTUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC02dncpIHRyYW5zbGF0ZVkoMzR2aCkgc2NhbGUoMC41Nik7XFxuICB9XFxuICA5Mi4zMDc2OTIzMDc3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjN2dykgdHJhbnNsYXRlWSgtMTJ2aCkgc2NhbGUoMC44Nyk7XFxuICB9XFxuICA5Ni4xNTM4NDYxNTM4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNXZ3KSB0cmFuc2xhdGVZKC00OXZoKSBzY2FsZSgwLjk3KTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoM3Z3KSB0cmFuc2xhdGVZKDExdmgpIHNjYWxlKDAuNyk7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxMCkge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmUxMDtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEwKTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTFzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTApOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDExcywgMTAxNTBtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCA2ODE0bXM7XFxufVxcbkBrZXlmcmFtZXMgbW92ZTEwIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI0dncpIHRyYW5zbGF0ZVkoLTQ3dmgpIHNjYWxlKDAuOTkpO1xcbiAgfVxcbiAgNC43NjE5MDQ3NjE5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDR2dykgdHJhbnNsYXRlWSgtMjR2aCkgc2NhbGUoMC4zOCk7XFxuICB9XFxuICA5LjUyMzgwOTUyMzglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ4dncpIHRyYW5zbGF0ZVkoMTd2aCkgc2NhbGUoMC40Nyk7XFxuICB9XFxuICAxNC4yODU3MTQyODU3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzN2dykgdHJhbnNsYXRlWSgtMTJ2aCkgc2NhbGUoMC44OSk7XFxuICB9XFxuICAxOS4wNDc2MTkwNDc2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDV2dykgdHJhbnNsYXRlWSg0dmgpIHNjYWxlKDAuMjYpO1xcbiAgfVxcbiAgMjMuODA5NTIzODA5NSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTd2dykgdHJhbnNsYXRlWSgtMjl2aCkgc2NhbGUoMSk7XFxuICB9XFxuICAyOC41NzE0Mjg1NzE0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzOHZ3KSB0cmFuc2xhdGVZKDE3dmgpIHNjYWxlKDAuODEpO1xcbiAgfVxcbiAgMzMuMzMzMzMzMzMzMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTd2dykgdHJhbnNsYXRlWSg0OHZoKSBzY2FsZSgwLjM1KTtcXG4gIH1cXG4gIDM4LjA5NTIzODA5NTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI3dncpIHRyYW5zbGF0ZVkoMjR2aCkgc2NhbGUoMC41OSk7XFxuICB9XFxuICA0Mi44NTcxNDI4NTcxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjB2dykgdHJhbnNsYXRlWSgyMnZoKSBzY2FsZSgwLjkxKTtcXG4gIH1cXG4gIDQ3LjYxOTA0NzYxOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE4dncpIHRyYW5zbGF0ZVkoNDV2aCkgc2NhbGUoMC41OSk7XFxuICB9XFxuICA1Mi4zODA5NTIzODElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMwdncpIHRyYW5zbGF0ZVkoLTM0dmgpIHNjYWxlKDAuNjIpO1xcbiAgfVxcbiAgNTcuMTQyODU3MTQyOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzF2dykgdHJhbnNsYXRlWSgzMnZoKSBzY2FsZSgwLjk1KTtcXG4gIH1cXG4gIDYxLjkwNDc2MTkwNDglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMnZ3KSB0cmFuc2xhdGVZKC00MXZoKSBzY2FsZSgwLjM3KTtcXG4gIH1cXG4gIDY2LjY2NjY2NjY2NjclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ydncpIHRyYW5zbGF0ZVkoLTl2aCkgc2NhbGUoMC43NCk7XFxuICB9XFxuICA3MS40Mjg1NzE0Mjg2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDh2dykgdHJhbnNsYXRlWSgtMzd2aCkgc2NhbGUoMC43OSk7XFxuICB9XFxuICA3Ni4xOTA0NzYxOTA1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNnZ3KSB0cmFuc2xhdGVZKC00M3ZoKSBzY2FsZSgwLjcxKTtcXG4gIH1cXG4gIDgwLjk1MjM4MDk1MjQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDExdncpIHRyYW5zbGF0ZVkoLTQ1dmgpIHNjYWxlKDAuNDIpO1xcbiAgfVxcbiAgODUuNzE0Mjg1NzE0MyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzh2dykgdHJhbnNsYXRlWSgtMTl2aCkgc2NhbGUoMC42Myk7XFxuICB9XFxuICA5MC40NzYxOTA0NzYyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDZ2dykgdHJhbnNsYXRlWSgxNnZoKSBzY2FsZSgwLjM3KTtcXG4gIH1cXG4gIDk1LjIzODA5NTIzODElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDh2dykgdHJhbnNsYXRlWSgtNDF2aCkgc2NhbGUoMC43Nik7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI3dncpIHRyYW5zbGF0ZVkoNDF2aCkgc2NhbGUoMC45Nyk7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxMSkge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmUxMTtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDExKTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTJzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTEpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDEycywgNjUwMm1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDQ3OTBtcztcXG59XFxuQGtleWZyYW1lcyBtb3ZlMTEge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMxdncpIHRyYW5zbGF0ZVkoMjZ2aCkgc2NhbGUoMC41OSk7XFxuICB9XFxuICA0LjU0NTQ1NDU0NTUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xdncpIHRyYW5zbGF0ZVkoMzZ2aCkgc2NhbGUoMC42NSk7XFxuICB9XFxuICA5LjA5MDkwOTA5MDklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDJ2dykgdHJhbnNsYXRlWSgtMTl2aCkgc2NhbGUoMC41MSk7XFxuICB9XFxuICAxMy42MzYzNjM2MzY0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NXZ3KSB0cmFuc2xhdGVZKC00MXZoKSBzY2FsZSgxKTtcXG4gIH1cXG4gIDE4LjE4MTgxODE4MTglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE2dncpIHRyYW5zbGF0ZVkoLTIydmgpIHNjYWxlKDAuNzUpO1xcbiAgfVxcbiAgMjIuNzI3MjcyNzI3MyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTd2dykgdHJhbnNsYXRlWSgyMHZoKSBzY2FsZSgwLjgxKTtcXG4gIH1cXG4gIDI3LjI3MjcyNzI3MjclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM0dncpIHRyYW5zbGF0ZVkoMTl2aCkgc2NhbGUoMC43NSk7XFxuICB9XFxuICAzMS44MTgxODE4MTgyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoNXZoKSBzY2FsZSgwLjY1KTtcXG4gIH1cXG4gIDM2LjM2MzYzNjM2MzYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDh2dykgdHJhbnNsYXRlWSg0M3ZoKSBzY2FsZSgwLjQ1KTtcXG4gIH1cXG4gIDQwLjkwOTA5MDkwOTElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMHZ3KSB0cmFuc2xhdGVZKC0yNHZoKSBzY2FsZSgwLjg5KTtcXG4gIH1cXG4gIDQ1LjQ1NDU0NTQ1NDUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ4dncpIHRyYW5zbGF0ZVkoLTMwdmgpIHNjYWxlKDAuNDgpO1xcbiAgfVxcbiAgNTAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIzdncpIHRyYW5zbGF0ZVkoNDJ2aCkgc2NhbGUoMC45KTtcXG4gIH1cXG4gIDU0LjU0NTQ1NDU0NTUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI0dncpIHRyYW5zbGF0ZVkoM3ZoKSBzY2FsZSgwLjQ0KTtcXG4gIH1cXG4gIDU5LjA5MDkwOTA5MDklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDl2dykgdHJhbnNsYXRlWSgtNDl2aCkgc2NhbGUoMC40NSk7XFxuICB9XFxuICA2My42MzYzNjM2MzY0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNnZ3KSB0cmFuc2xhdGVZKDQ3dmgpIHNjYWxlKDAuNzcpO1xcbiAgfVxcbiAgNjguMTgxODE4MTgxOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDl2dykgdHJhbnNsYXRlWSgtMjB2aCkgc2NhbGUoMC43Mik7XFxuICB9XFxuICA3Mi43MjcyNzI3MjczJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtN3Z3KSB0cmFuc2xhdGVZKDQxdmgpIHNjYWxlKDAuNjgpO1xcbiAgfVxcbiAgNzcuMjcyNzI3MjcyNyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDJ2dykgdHJhbnNsYXRlWSg4dmgpIHNjYWxlKDAuNDgpO1xcbiAgfVxcbiAgODEuODE4MTgxODE4MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM4dncpIHRyYW5zbGF0ZVkoLTd2aCkgc2NhbGUoMC45Nyk7XFxuICB9XFxuICA4Ni4zNjM2MzYzNjM2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTB2dykgdHJhbnNsYXRlWSg0N3ZoKSBzY2FsZSgwLjI4KTtcXG4gIH1cXG4gIDkwLjkwOTA5MDkwOTElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xN3Z3KSB0cmFuc2xhdGVZKDEwdmgpIHNjYWxlKDAuNzgpO1xcbiAgfVxcbiAgOTUuNDU0NTQ1NDU0NSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjF2dykgdHJhbnNsYXRlWSgzNXZoKSBzY2FsZSgxKTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDZ2dykgdHJhbnNsYXRlWSg1MHZoKSBzY2FsZSgwLjUxKTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEyKSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTEyO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTIpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxNnM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxMik6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTZzLCA1NjYwbXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgNjExNW1zO1xcbn1cXG5Aa2V5ZnJhbWVzIG1vdmUxMiB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzN3Z3KSB0cmFuc2xhdGVZKC00M3ZoKSBzY2FsZSgwLjI4KTtcXG4gIH1cXG4gIDMuNTcxNDI4NTcxNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTR2dykgdHJhbnNsYXRlWSgzNnZoKSBzY2FsZSgwLjc5KTtcXG4gIH1cXG4gIDcuMTQyODU3MTQyOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEydncpIHRyYW5zbGF0ZVkoLTIxdmgpIHNjYWxlKDAuNzgpO1xcbiAgfVxcbiAgMTAuNzE0Mjg1NzE0MyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTV2dykgdHJhbnNsYXRlWSgyMHZoKSBzY2FsZSgwLjgzKTtcXG4gIH1cXG4gIDE0LjI4NTcxNDI4NTclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI1dncpIHRyYW5zbGF0ZVkoLTM1dmgpIHNjYWxlKDAuODMpO1xcbiAgfVxcbiAgMTcuODU3MTQyODU3MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwdncpIHRyYW5zbGF0ZVkoLTIxdmgpIHNjYWxlKDAuNDYpO1xcbiAgfVxcbiAgMjEuNDI4NTcxNDI4NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQwdncpIHRyYW5zbGF0ZVkoLTMxdmgpIHNjYWxlKDAuNzMpO1xcbiAgfVxcbiAgMjUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00dncpIHRyYW5zbGF0ZVkoLTIzdmgpIHNjYWxlKDAuOTgpO1xcbiAgfVxcbiAgMjguNTcxNDI4NTcxNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHZ3KSB0cmFuc2xhdGVZKC0zMXZoKSBzY2FsZSgwLjkpO1xcbiAgfVxcbiAgMzIuMTQyODU3MTQyOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjR2dykgdHJhbnNsYXRlWSgxOHZoKSBzY2FsZSgwLjM1KTtcXG4gIH1cXG4gIDM1LjcxNDI4NTcxNDMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yM3Z3KSB0cmFuc2xhdGVZKDM1dmgpIHNjYWxlKDAuNzYpO1xcbiAgfVxcbiAgMzkuMjg1NzE0Mjg1NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTl2dykgdHJhbnNsYXRlWSgtMjF2aCkgc2NhbGUoMC43Myk7XFxuICB9XFxuICA0Mi44NTcxNDI4NTcxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMnZ3KSB0cmFuc2xhdGVZKC0yM3ZoKSBzY2FsZSgwLjgpO1xcbiAgfVxcbiAgNDYuNDI4NTcxNDI4NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTR2dykgdHJhbnNsYXRlWSgzMHZoKSBzY2FsZSgwLjM5KTtcXG4gIH1cXG4gIDUwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHZ3KSB0cmFuc2xhdGVZKC0xMHZoKSBzY2FsZSgwLjk1KTtcXG4gIH1cXG4gIDUzLjU3MTQyODU3MTQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDd2dykgdHJhbnNsYXRlWSgtMjF2aCkgc2NhbGUoMC40MSk7XFxuICB9XFxuICA1Ny4xNDI4NTcxNDI5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTZ2dykgdHJhbnNsYXRlWSg0NnZoKSBzY2FsZSgwLjk1KTtcXG4gIH1cXG4gIDYwLjcxNDI4NTcxNDMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMXZ3KSB0cmFuc2xhdGVZKDM5dmgpIHNjYWxlKDAuNzUpO1xcbiAgfVxcbiAgNjQuMjg1NzE0Mjg1NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMxdncpIHRyYW5zbGF0ZVkoMjN2aCkgc2NhbGUoMC44NCk7XFxuICB9XFxuICA2Ny44NTcxNDI4NTcxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0M3Z3KSB0cmFuc2xhdGVZKDM2dmgpIHNjYWxlKDAuOTgpO1xcbiAgfVxcbiAgNzEuNDI4NTcxNDI4NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTR2dykgdHJhbnNsYXRlWSgwdmgpIHNjYWxlKDAuNDEpO1xcbiAgfVxcbiAgNzUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDV2dykgdHJhbnNsYXRlWSgtMzN2aCkgc2NhbGUoMC40MSk7XFxuICB9XFxuICA3OC41NzE0Mjg1NzE0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwdncpIHRyYW5zbGF0ZVkoMjF2aCkgc2NhbGUoMC4zOCk7XFxuICB9XFxuICA4Mi4xNDI4NTcxNDI5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0M3Z3KSB0cmFuc2xhdGVZKC0yNXZoKSBzY2FsZSgwLjQ3KTtcXG4gIH1cXG4gIDg1LjcxNDI4NTcxNDMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMnZ3KSB0cmFuc2xhdGVZKDIxdmgpIHNjYWxlKDAuNCk7XFxuICB9XFxuICA4OS4yODU3MTQyODU3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTR2dykgdHJhbnNsYXRlWSgxMnZoKSBzY2FsZSgwLjM4KTtcXG4gIH1cXG4gIDkyLjg1NzE0Mjg1NzElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00MnZ3KSB0cmFuc2xhdGVZKDR2aCkgc2NhbGUoMC4zNik7XFxuICB9XFxuICA5Ni40Mjg1NzE0Mjg2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxN3Z3KSB0cmFuc2xhdGVZKC0xN3ZoKSBzY2FsZSgwLjM0KTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTl2dykgdHJhbnNsYXRlWSgtN3ZoKSBzY2FsZSgwLjczKTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEzKSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTEzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTMpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiA5cztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEzKTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiA5cywgODIxNm1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDIyOTFtcztcXG59XFxuQGtleWZyYW1lcyBtb3ZlMTMge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ2dncpIHRyYW5zbGF0ZVkoMzR2aCkgc2NhbGUoMC41Mik7XFxuICB9XFxuICA1Ljg4MjM1Mjk0MTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00OHZ3KSB0cmFuc2xhdGVZKDl2aCkgc2NhbGUoMC41Nyk7XFxuICB9XFxuICAxMS43NjQ3MDU4ODI0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtOHZ3KSB0cmFuc2xhdGVZKDE4dmgpIHNjYWxlKDAuNik7XFxuICB9XFxuICAxNy42NDcwNTg4MjM1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjd2dykgdHJhbnNsYXRlWSgxNXZoKSBzY2FsZSgwLjc2KTtcXG4gIH1cXG4gIDIzLjUyOTQxMTc2NDclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yOXZ3KSB0cmFuc2xhdGVZKDM5dmgpIHNjYWxlKDAuNTgpO1xcbiAgfVxcbiAgMjkuNDExNzY0NzA1OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDR2dykgdHJhbnNsYXRlWSgxOHZoKSBzY2FsZSgwLjQzKTtcXG4gIH1cXG4gIDM1LjI5NDExNzY0NzElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM2dncpIHRyYW5zbGF0ZVkoLTE3dmgpIHNjYWxlKDAuMzIpO1xcbiAgfVxcbiAgNDEuMTc2NDcwNTg4MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTV2dykgdHJhbnNsYXRlWSgtMjV2aCkgc2NhbGUoMC42OSk7XFxuICB9XFxuICA0Ny4wNTg4MjM1Mjk0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzd2dykgdHJhbnNsYXRlWSgtMzB2aCkgc2NhbGUoMC40Myk7XFxuICB9XFxuICA1Mi45NDExNzY0NzA2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHZ3KSB0cmFuc2xhdGVZKDQ1dmgpIHNjYWxlKDAuNyk7XFxuICB9XFxuICA1OC44MjM1Mjk0MTE4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjN2dykgdHJhbnNsYXRlWSg5dmgpIHNjYWxlKDAuOTUpO1xcbiAgfVxcbiAgNjQuNzA1ODgyMzUyOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzJ2dykgdHJhbnNsYXRlWSgtMjZ2aCkgc2NhbGUoMC42KTtcXG4gIH1cXG4gIDcwLjU4ODIzNTI5NDElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNHZ3KSB0cmFuc2xhdGVZKDB2aCkgc2NhbGUoMC41MSk7XFxuICB9XFxuICA3Ni40NzA1ODgyMzUzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTJ2dykgdHJhbnNsYXRlWSgtOXZoKSBzY2FsZSgwLjU2KTtcXG4gIH1cXG4gIDgyLjM1Mjk0MTE3NjUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM5dncpIHRyYW5zbGF0ZVkoMHZoKSBzY2FsZSgwLjg4KTtcXG4gIH1cXG4gIDg4LjIzNTI5NDExNzYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwdncpIHRyYW5zbGF0ZVkoMjl2aCkgc2NhbGUoMC4zNik7XFxuICB9XFxuICA5NC4xMTc2NDcwNTg4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzB2dykgdHJhbnNsYXRlWSgtMzV2aCkgc2NhbGUoMC4zNSk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIydncpIHRyYW5zbGF0ZVkoMzJ2aCkgc2NhbGUoMC4zKTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDE0KSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTE0O1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTQpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxN3M7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxNCk6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTdzLCA2NTA4bXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgMTQ5Mm1zO1xcbn1cXG5Aa2V5ZnJhbWVzIG1vdmUxNCB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg5dncpIHRyYW5zbGF0ZVkoLTE0dmgpIHNjYWxlKDAuNDEpO1xcbiAgfVxcbiAgNS44ODIzNTI5NDEyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzh2dykgdHJhbnNsYXRlWSg0MHZoKSBzY2FsZSgwLjg3KTtcXG4gIH1cXG4gIDExLjc2NDcwNTg4MjQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zdncpIHRyYW5zbGF0ZVkoMzR2aCkgc2NhbGUoMC41Nik7XFxuICB9XFxuICAxNy42NDcwNTg4MjM1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDl2dykgdHJhbnNsYXRlWSgtMXZoKSBzY2FsZSgwLjUyKTtcXG4gIH1cXG4gIDIzLjUyOTQxMTc2NDclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC05dncpIHRyYW5zbGF0ZVkoMzh2aCkgc2NhbGUoMC43Nik7XFxuICB9XFxuICAyOS40MTE3NjQ3MDU5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDN2dykgdHJhbnNsYXRlWSg4dmgpIHNjYWxlKDAuNTIpO1xcbiAgfVxcbiAgMzUuMjk0MTE3NjQ3MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDN2dykgdHJhbnNsYXRlWSgtMTl2aCkgc2NhbGUoMC4zKTtcXG4gIH1cXG4gIDQxLjE3NjQ3MDU4ODIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE1dncpIHRyYW5zbGF0ZVkoMTV2aCkgc2NhbGUoMC44NCk7XFxuICB9XFxuICA0Ny4wNTg4MjM1Mjk0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjB2dykgdHJhbnNsYXRlWSgzMHZoKSBzY2FsZSgwLjU2KTtcXG4gIH1cXG4gIDUyLjk0MTE3NjQ3MDYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zNnZ3KSB0cmFuc2xhdGVZKC0yNHZoKSBzY2FsZSgwLjkxKTtcXG4gIH1cXG4gIDU4LjgyMzUyOTQxMTglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ1dncpIHRyYW5zbGF0ZVkoNTB2aCkgc2NhbGUoMC42Mik7XFxuICB9XFxuICA2NC43MDU4ODIzNTI5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDR2dykgdHJhbnNsYXRlWSg0MXZoKSBzY2FsZSgwLjk0KTtcXG4gIH1cXG4gIDcwLjU4ODIzNTI5NDElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI1dncpIHRyYW5zbGF0ZVkoMTJ2aCkgc2NhbGUoMC44Mik7XFxuICB9XFxuICA3Ni40NzA1ODgyMzUzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDl2dykgdHJhbnNsYXRlWSgtOXZoKSBzY2FsZSgwLjQzKTtcXG4gIH1cXG4gIDgyLjM1Mjk0MTE3NjUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI5dncpIHRyYW5zbGF0ZVkoMjJ2aCkgc2NhbGUoMC44NSk7XFxuICB9XFxuICA4OC4yMzUyOTQxMTc2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjJ2dykgdHJhbnNsYXRlWSgtMzl2aCkgc2NhbGUoMC4yNik7XFxuICB9XFxuICA5NC4xMTc2NDcwNTg4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzR2dykgdHJhbnNsYXRlWSgtNDJ2aCkgc2NhbGUoMC4zOCk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMHZ3KSB0cmFuc2xhdGVZKC00OXZoKSBzY2FsZSgwLjczKTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDE1KSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTE1O1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTUpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxNHM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxNSk6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTRzLCA1ODExbXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgNTMyMW1zO1xcbn1cXG5Aa2V5ZnJhbWVzIG1vdmUxNSB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzV2dykgdHJhbnNsYXRlWSg2dmgpIHNjYWxlKDAuMzUpO1xcbiAgfVxcbiAgNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDl2dykgdHJhbnNsYXRlWSgtMzZ2aCkgc2NhbGUoMC40NSk7XFxuICB9XFxuICA4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNHZ3KSB0cmFuc2xhdGVZKC03dmgpIHNjYWxlKDAuODQpO1xcbiAgfVxcbiAgMTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMxdncpIHRyYW5zbGF0ZVkoN3ZoKSBzY2FsZSgwLjgyKTtcXG4gIH1cXG4gIDE2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzZ2dykgdHJhbnNsYXRlWSgtOXZoKSBzY2FsZSgwLjU2KTtcXG4gIH1cXG4gIDIwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0OXZ3KSB0cmFuc2xhdGVZKDF2aCkgc2NhbGUoMC41MSk7XFxuICB9XFxuICAyNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMxdncpIHRyYW5zbGF0ZVkoLTQzdmgpIHNjYWxlKDAuNjIpO1xcbiAgfVxcbiAgMjglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zM3Z3KSB0cmFuc2xhdGVZKDQzdmgpIHNjYWxlKDAuMzIpO1xcbiAgfVxcbiAgMzIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDd2dykgdHJhbnNsYXRlWSgtMjN2aCkgc2NhbGUoMC40NSk7XFxuICB9XFxuICAzNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTF2dykgdHJhbnNsYXRlWSgtMjJ2aCkgc2NhbGUoMC45Mik7XFxuICB9XFxuICA0MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTR2dykgdHJhbnNsYXRlWSgxMnZoKSBzY2FsZSgwLjM4KTtcXG4gIH1cXG4gIDQ0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzOXZ3KSB0cmFuc2xhdGVZKDE0dmgpIHNjYWxlKDAuOTYpO1xcbiAgfVxcbiAgNDglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNHZ3KSB0cmFuc2xhdGVZKC0xNHZoKSBzY2FsZSgwLjUxKTtcXG4gIH1cXG4gIDUyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjV2dykgdHJhbnNsYXRlWSgtNDF2aCkgc2NhbGUoMC41NCk7XFxuICB9XFxuICA1NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTR2dykgdHJhbnNsYXRlWSgtMjh2aCkgc2NhbGUoMC41KTtcXG4gIH1cXG4gIDYwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoMjN2aCkgc2NhbGUoMC42NSk7XFxuICB9XFxuICA2NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTl2dykgdHJhbnNsYXRlWSgzN3ZoKSBzY2FsZSgwLjgzKTtcXG4gIH1cXG4gIDY4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg3dncpIHRyYW5zbGF0ZVkoLTN2aCkgc2NhbGUoMC4zNCk7XFxuICB9XFxuICA3MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTl2dykgdHJhbnNsYXRlWSgyOHZoKSBzY2FsZSgwLjgpO1xcbiAgfVxcbiAgNzYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE5dncpIHRyYW5zbGF0ZVkoMTJ2aCkgc2NhbGUoMC45Nyk7XFxuICB9XFxuICA4MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI2dncpIHRyYW5zbGF0ZVkoMHZoKSBzY2FsZSgwLjY5KTtcXG4gIH1cXG4gIDg0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDh2dykgdHJhbnNsYXRlWSgzM3ZoKSBzY2FsZSgwLjkyKTtcXG4gIH1cXG4gIDg4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDd2dykgdHJhbnNsYXRlWSgtNDZ2aCkgc2NhbGUoMC45Nyk7XFxuICB9XFxuICA5MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMxdncpIHRyYW5zbGF0ZVkoNDh2aCkgc2NhbGUoMC41OCk7XFxuICB9XFxuICA5NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ4dncpIHRyYW5zbGF0ZVkoNDB2aCkgc2NhbGUoMC45Nyk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0dncpIHRyYW5zbGF0ZVkoLTh2aCkgc2NhbGUoMC45OSk7XFxuICB9XFxufVxcbkBrZXlmcmFtZXMgZHJpZnQge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xcbiAgfVxcbn1cXG5Aa2V5ZnJhbWVzIGZsYXNoIHtcXG4gIDAlLFxcbiAgMzAlLFxcbiAgMTAwJSB7XFxuICAgIG9wYWNpdHk6IDA7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwdncgMHZ3IHllbGxvdztcXG4gIH1cXG4gIDUlIHtcXG4gICAgb3BhY2l0eTogMTtcXG4gICAgYm94LXNoYWRvdzogMCAwIDJ2dyAwLjR2dyB5ZWxsb3c7XFxuICB9XFxufVxcbmgxIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMzZDNkO1xcbn1cXG5ib2R5IHtcXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcXG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvIFNsYWInLCBzZXJpZjtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogMTAwdmg7XFxufVxcbmgxLFxcbnVsIHtcXG4gIG1hcmdpbjogMDtcXG59XFxudWwge1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuYSxcXG5idXR0b24ge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICB0cmFuc2l0aW9uOiBjb2xvciAwLjRzIGVhc2Utb3V0O1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG5oZWFkZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDBweDtcXG59XFxuaGVhZGVyIHVsIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcXG4gIHBhZGRpbmc6IDEwcHggMzBweDtcXG59XFxuaGVhZGVyIHVsIGxpIHtcXG4gIG1hcmdpbjogMCAyMHB4O1xcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xcbn1cXG4uc2lkZS1uYXYge1xcbiAgbWFyZ2luOiAzMHB4IDEwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGxlZnQ6IDA7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG4uc2lkZS1uYXYgbGkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgb3BhY2l0eTogMC44O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI5MjMxODtcXG4gIGJvcmRlcjogMnB4IHNvbGlkICM1NTMzMUI7XFxuICBmb250LXNpemU6IDFyZW07XFxuICBtYXJnaW46IDIwcHggMDtcXG4gIHBhZGRpbmc6IDE1cHg7XFxufVxcbm1haW4ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgbWF4LXdpZHRoOiAxMzAwcHg7XFxufVxcbm1haW4gLmJhY2tncm91bmQxLFxcbm1haW4gLmJhY2tncm91bmQyLFxcbm1haW4gLmJhY2tncm91bmQzLFxcbm1haW4gLmJhY2tncm91bmQ0IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogYXV0bztcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgei1pbmRleDogLTE7XFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoNTAlKTtcXG4gIGFuaW1hdGlvbi1uYW1lOiBjZjNGYWRlSW5PdXQ7XFxuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcXG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlO1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMnM7XFxuICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7XFxufVxcbm1haW4gLmJhY2tncm91bmQxIHtcXG4gIGFuaW1hdGlvbi1kZWxheTogMTJzO1xcbn1cXG5tYWluIC5iYWNrZ3JvdW5kMiB7XFxuICBhbmltYXRpb24tZGVsYXk6IDhzO1xcbn1cXG5tYWluIC5iYWNrZ3JvdW5kMyB7XFxuICBhbmltYXRpb24tZGVsYXk6IDRzO1xcbn1cXG5tYWluIC5iYWNrZ3JvdW5kNCB7XFxuICBhbmltYXRpb24tZGVsYXk6IDA7XFxufVxcbkBrZXlmcmFtZXMgY2YzRmFkZUluT3V0IHtcXG4gIDAlIHtcXG4gICAgb3BhY2l0eTogMTtcXG4gIH1cXG4gIDQ1JSB7XFxuICAgIG9wYWNpdHk6IDE7XFxuICB9XFxuICA1NSUge1xcbiAgICBvcGFjaXR5OiAwO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIG9wYWNpdHk6IDA7XFxuICB9XFxufVxcbi5tYWluLXNlY3Rpb24gLmxvZ28ge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiA1MCU7XFxuICBsZWZ0OiA1MCU7XFxuICB3aWR0aDogMzAwcHg7XFxuICBoZWlnaHQ6IDMwMHB4O1xcbiAgbWFyZ2luLXRvcDogLTE1MHB4O1xcbiAgLyogSGFsZiB0aGUgaGVpZ2h0ICovXFxuICBtYXJnaW4tbGVmdDogLTE1MHB4O1xcbiAgei1pbmRleDogMztcXG59XFxuLmNsb3NlIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICByaWdodDogMTBweDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbiAgd2lkdGg6IDMwcHg7XFxuICBoZWlnaHQ6IDMwcHg7XFxuICB0b3A6IDEwcHg7XFxufVxcbi5jbG9zZTpob3ZlcixcXG4uY2xvc2U6Zm9jdXMge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4ubWVudS1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDAwcHg7XFxuICBoZWlnaHQ6IDYwMHB4O1xcbiAgbWFyZ2luOiBhdXRvO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIHJpZ2h0OiAtMzAwMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gIGNvbG9yOiBibGFjaztcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8gQ29uZGVuc2VkJywgc2Fucy1zZXJpZjtcXG4gIHRyYW5zaXRpb246IHJpZ2h0IDFzO1xcbiAgei1pbmRleDogNDtcXG59XFxuLm1lbnUtY29udGFpbmVyIGgyIHtcXG4gIG1hcmdpbi10b3A6IDUwcHg7XFxuICBmb250LXNpemU6IDFyZW07XFxuICBmb250LWZhbWlseTogJ05vdG8gU2FucycsIHNhbnMtc2VyaWY7XFxufVxcbi5tZW51LWNvbnRhaW5lciBoMyxcXG4ubWVudS1jb250YWluZXIgcCB7XFxuICBmb250LXNpemU6IDAuNzVyZW07XFxufVxcbi5tZW51LWNvbnRhaW5lciBwIHtcXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XFxufVxcbi5tZW51LWNvbnRhaW5lciAubWVudS1mb290ZXIge1xcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcXG4gIG1hcmdpbi1sZWZ0OiA1MHB4O1xcbn1cXG4ubWVudS1jb250YWluZXIgLm1lbnUge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbn1cXG4ubWVudS1jb250YWluZXIgLm1lbnUgaW1nIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogNTAlO1xcbiAgbGVmdDogNTAlO1xcbiAgd2lkdGg6IDIwMHB4O1xcbiAgaGVpZ2h0OiAyMDBweDtcXG4gIG1hcmdpbi10b3A6IC0xMDBweDtcXG4gIC8qIEhhbGYgdGhlIGhlaWdodCAqL1xcbiAgbWFyZ2luLWxlZnQ6IC0xMDBweDtcXG4gIG9wYWNpdHk6IDAuMTtcXG59XFxuLm1lbnUtY29udGFpbmVyIC5tZW51IC5tZW51MSxcXG4ubWVudS1jb250YWluZXIgLm1lbnUgLm1lbnUyIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLnJlc2VydmF0aW9uIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDgwMHB4O1xcbiAgaGVpZ2h0OiA1NTBweDtcXG4gIG1hcmdpbjogYXV0bztcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICBib3R0b206IDA7XFxuICByaWdodDogLTMwMDBweDtcXG4gIGNvbG9yOiBibGFjaztcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8gQ29uZGVuc2VkJywgc2Fucy1zZXJpZjtcXG4gIHRyYW5zaXRpb246IHJpZ2h0IDFzO1xcbiAgei1pbmRleDogNDtcXG4gIG9wYWNpdHk6IDAuOTtcXG59XFxuLnJlc2VydmF0aW9uIG5hdiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgd2lkdGg6IDgwJTtcXG4gIGhlaWdodDogODBweDtcXG4gIG1hcmdpbjogMjBweDtcXG59XFxuLnJlc2VydmF0aW9uIG5hdiA+IGRpdiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDIwJTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbn1cXG4ucmVzZXJ2YXRpb24gbmF2ID4gZGl2OmhvdmVyIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM1NTMzMUI7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcbi5yZXNlcnZhdGlvbiAuaGlkZGVuIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcbi5yZXNlcnZhdGlvbiAucmVzZXJ2YXRpb24tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDAwcHg7XFxuICBwYWRkaW5nOiA1cHggNTBweDtcXG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCBibGFjaztcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBibGFjaztcXG59XFxuLnJlc2VydmF0aW9uIC5yZXNlcnZhdGlvbi1jb250YWluZXIgLnJlc2VydmF0aW9uLXN1Yi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB3aWR0aDogNzAlO1xcbiAgaGVpZ2h0OiA5MCU7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxufVxcbi5yZXNlcnZhdGlvbiAucmVzZXJ2YXRpb24tY29udGFpbmVyIC5yZXNlcnZhdGlvbi1zdWItY29udGFpbmVyIHVsIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcbn1cXG4ucmVzZXJ2YXRpb24gLnJlc2VydmF0aW9uLWNvbnRhaW5lciAucmVzZXJ2YXRpb24tc3ViLWNvbnRhaW5lciB1bCBsaSB7XFxuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBtYXJnaW46IDEwcHg7XFxufVxcbi5yZXNlcnZhdGlvbiAucmVzZXJ2YXRpb24tY29udGFpbmVyIC5yZXNlcnZhdGlvbi1zdWItY29udGFpbmVyIHVsIGxpOmhvdmVyIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM1NTMzMUI7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcbi5yZXNlcnZhdGlvbiAuY29uZmlybS1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIG1hcmdpbjogMjBweDtcXG59XFxuLnJlc2VydmF0aW9uIC5jb25maXJtLWNvbnRhaW5lciAucmVzZXJ2YXRpb24tYm90dG9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XFxufVxcbi5yZWFjdC1jYWxlbmRhciB7XFxuICB3aWR0aDogMzAwcHg7XFxufVxcbi5yZWFjdC1jYWxlbmRhci0tZG91YmxlVmlldyB7XFxuICB3aWR0aDogNzAwcHg7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcImh0dHBzOi9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8rU2xhYjp3Z2h0QDMwMCZkaXNwbGF5PXN3YXBcIixcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS9tYWluLmxlc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS9zZXR1cC5sZXNzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUvYW5pbWF0aW9uLmxlc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS9oZWFkZXIubGVzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLDBCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0hBQUE7QUNFRjtBQ1BBO0VBQUssaUJBQUE7RUFBaUIsMEJBQUE7RUFBMEIsOEJBQUE7QURZaEQ7QUNaOEU7RUFBSyxTQUFBO0FEZW5GO0FDZjRGOzs7Ozs7RUFBd0MsY0FBQTtBRHVCcEk7QUN2QmtKO0VBQUcsY0FBQTtFQUFjLGdCQUFBO0FEMkJuSztBQzNCa0w7OztFQUF1QixjQUFBO0FEZ0N6TTtBQ2hDdU47RUFBTyxnQkFBQTtBRG1DOU47QUNuQzhPO0VBQUcsdUJBQUE7RUFBdUIsU0FBQTtFQUFTLGlCQUFBO0FEd0NqUjtBQ3hDa1M7RUFBSSxnQ0FBQTtFQUFnQyxjQUFBO0FENEN0VTtBQzVDb1Y7RUFBRSw2QkFBQTtFQUE2QixxQ0FBQTtBRGdEblg7QUNoRHdaO0VBQVksbUJBQUE7RUFBbUIsMEJBQUE7RUFBMEIsaUNBQUE7QURxRGpkO0FDckRrZjs7RUFBUyxvQkFBQTtBRHlEM2Y7QUN6RCtnQjs7RUFBUyxtQkFBQTtBRDZEeGhCO0FDN0QyaUI7OztFQUFjLGdDQUFBO0VBQWdDLGNBQUE7QURtRXpsQjtBQ25FdW1CO0VBQUksa0JBQUE7QURzRTNtQjtBQ3RFNm5CO0VBQUssc0JBQUE7RUFBc0IsV0FBQTtBRDBFeHBCO0FDMUVtcUI7RUFBTSxjQUFBO0FENkV6cUI7QUM3RXVyQjs7RUFBUSxjQUFBO0VBQWMsY0FBQTtFQUFjLGtCQUFBO0VBQWtCLHdCQUFBO0FEb0Y3dUI7QUNwRnF3QjtFQUFJLGVBQUE7QUR1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QUFBO0VBQVMsU0FBQTtFQUFXLGNBQUE7RUFDNUIsWUFBQTtFQUNBLHVCQUFBO0VBQ0EsMkNBQUE7RUFDQSxvQkFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0FBdTdDSjtBQXY4Q0E7RUFtQlEsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBdTdDUjtBQTk4Q0E7RUEwQlUsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0VBQ0EsdUJBQUE7QUF1N0NWO0FBcjdDVTtFQUNJLGVBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUF1N0NkO0FBMTlDQTtFQXlDTSxhQUFBO0FBbzdDTjtBQTc5Q0E7RUE2Q00sYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsMkJBQUE7RUFDQSw4QkFBQTtBQW03Q047QUF2K0NBO0VBdURRLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQW03Q1I7QUFqL0NBO0VBaUVVLGFBQUE7RUFDQSxtQkFBQTtBQW03Q1Y7QUFyL0NBO0VBcUVZLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7QUFtN0NaO0FBajdDWTtFQUNFLGVBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUFtN0NkO0FBLy9DQTtFQW9GTSxhQUFBO0VBQ0EsWUFBQTtBQTg2Q047QUFuZ0RBO0VBd0ZRLHNCQUFBO0FBODZDUjtBQXg2Q0E7RUFDRSxZQUFBO0FBMDZDRjtBQXY2Q0E7RUFDRSxZQUFBO0FBeTZDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvIFNsYWInO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDMwMDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIHNyYzogdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9yb2JvdG9zbGFiL3YxMy9CbmdiVVhaWVRYUEl2SUJnSkpTYjZzM0J6bFJSZktPRmJ2am8wb1NXYUEudHRmKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxufVxcblwiLFwiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvK1NsYWI6d2dodEAzMDAmZGlzcGxheT1zd2FwJyk7XFxuQGltcG9ydCAnc2V0dXAubGVzcyc7XFxuQGltcG9ydCAndmFyaWFibGVzLmxlc3MnO1xcbkBpbXBvcnQgJ2FuaW1hdGlvbi5sZXNzJztcXG5AaW1wb3J0ICdoZWFkZXIubGVzcyc7XFxuQGltcG9ydCAncmVhY3QtY2FsZW5kYXIvZGlzdC9DYWxlbmRhci5jc3MnO1xcblxcbmJvZHkge1xcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XFxuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8gU2xhYicsIHNlcmlmO1xcbiAgICBjb2xvcjogQHdoaXRlO1xcbiAgICB3aWR0aDogMTAwdnc7XFxuICAgIGhlaWdodDogMTAwdmg7XFxufVxcblxcbmgxLCB1bCB7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxudWwge1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuXFxuYSwgYnV0dG9uIHtcXG4gICAgY29sb3I6IGluaGVyaXQ7XFxuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuNHMgZWFzZS1vdXQ7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxuaGVhZGVyIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwcHg7XFxuXFxuICAgIHVsIHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMzBweDtcXG4gICAgICAgIFxcbiAgICAgICAgbGkge1xcbiAgICAgICAgICAgIG1hcmdpbjogMCAyMHB4O1xcbiAgICAgICAgICAgIGRpc3BsYXk6IGxpc3QtaXRlbTtcXG4gICAgICAgIH1cXG4gICAgfVxcbn1cXG5cXG4uc2lkZS1uYXYge1xcbiAgICBtYXJnaW46IDMwcHggMTBweDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBsZWZ0OiAwO1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcblxcbiAgICBsaSB7XFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgICAgICBvcGFjaXR5OiAwLjg7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAZGFyay1icm93bjtcXG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIEBicm93bjtcXG4gICAgICAgIGZvbnQtc2l6ZTogQHNtYWxsO1xcbiAgICAgICAgbWFyZ2luOiAyMHB4IDA7XFxuICAgICAgICBwYWRkaW5nOiAxNXB4O1xcbiAgICB9XFxufVxcblxcbi8vYmFja2dvdW5kIGltYWdlXFxubWFpbiB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBtYXgtd2lkdGg6IDEzMDBweDtcXG4gICAgLy9iYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudChyZ2JhKDAsIDAsIDAsIDAuOCksIHJnYmEoMCwgMCwgMCwgMC41KSksIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdCB1cmwoLi9iYWNrZ3JvdW5kMS5qcGcpO1xcblxcbiAgICAuYmFja2dyb3VuZDEsIC5iYWNrZ3JvdW5kMiwgLmJhY2tncm91bmQzLCAuYmFja2dyb3VuZDQge1xcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgICAgd2lkdGg6IDEwMHZ3O1xcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xcbiAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XFxuICAgICAgICB6LWluZGV4OiAtMTtcXG4gICAgICAgIGZpbHRlcjogYnJpZ2h0bmVzcyg1MCUpOyBcXG4gICAgICAgIGFuaW1hdGlvbi1uYW1lOiBjZjNGYWRlSW5PdXQ7XFxuICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcXG4gICAgICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlO1xcbiAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMnM7XFxuICAgICAgICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7XFxuICAgICAgICBcXG4gICAgfVxcblxcbiAgICAuYmFja2dyb3VuZDEge1xcbiAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiAxMnM7XFxuICAgIH1cXG4gICAgLmJhY2tncm91bmQyIHtcXG4gICAgICAgIGFuaW1hdGlvbi1kZWxheTogOHM7XFxuICAgIH1cXG4gICAgLmJhY2tncm91bmQzIHtcXG4gICAgICAgIGFuaW1hdGlvbi1kZWxheTogNHM7XFxuICAgIH1cXG4gICAgLmJhY2tncm91bmQ0IHtcXG4gICAgICAgIGFuaW1hdGlvbi1kZWxheTogMDtcXG4gICAgfVxcblxcbiAgICBAa2V5ZnJhbWVzIGNmM0ZhZGVJbk91dCB7XFxuICAgICAgICAwJSB7XFxuICAgICAgICAgICAgb3BhY2l0eToxO1xcbiAgICAgICAgfVxcbiAgICAgICAgNDUlIHtcXG4gICAgICAgICAgICBvcGFjaXR5OjE7XFxuICAgICAgICB9XFxuICAgICAgICA1NSUge1xcbiAgICAgICAgICAgIG9wYWNpdHk6MDtcXG4gICAgICAgIH1cXG4gICAgICAgIDEwMCUge1xcbiAgICAgICAgICAgIG9wYWNpdHk6MDtcXG4gICAgICAgIH1cXG4gICAgfVxcbn1cXG5cXG4vL21haW4gcGFnZVxcbi5tYWluLXNlY3Rpb24ge1xcbiAgICAubG9nbyB7XFxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgICAgICB0b3A6IDUwJTtcXG4gICAgICAgIGxlZnQ6IDUwJTtcXG4gICAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICAgIGhlaWdodDogMzAwcHg7XFxuICAgICAgICBtYXJnaW4tdG9wOiAtMTUwcHg7IC8qIEhhbGYgdGhlIGhlaWdodCAqL1xcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0xNTBweDtcXG4gICAgICAgIHotaW5kZXg6IDM7XFxuICAgIH1cXG59XFxuXFxuLy9jbG9zZSBidXR0b25cXG4uY2xvc2Uge1xcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICAgIHJpZ2h0OiAxMHB4O1xcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICAgICAgZm9udC1zaXplOiBAbWVkaXVtO1xcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuICAgICAgICB3aWR0aDogMzBweDtcXG4gICAgICAgIGhlaWdodDogMzBweDtcXG4gICAgICAgIHRvcDogMTBweDtcXG5cXG4gICAgICAgICY6aG92ZXIsICY6Zm9jdXMge1xcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4vL21lbnUgY29tcG9uZW50XFxuLm1lbnUtY29udGFpbmVyIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDEwMDBweDtcXG4gICAgaGVpZ2h0OiA2MDBweDtcXG4gICAgbWFyZ2luOiBhdXRvO1xcbiAgICB0b3A6IDA7IGxlZnQ6IDA7IGJvdHRvbTogMDsgcmlnaHQ6IC0zMDAwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvIENvbmRlbnNlZCcsIHNhbnMtc2VyaWY7XFxuICAgIHRyYW5zaXRpb246IHJpZ2h0IDFzO1xcbiAgICB6LWluZGV4OiA0O1xcbiAgICBcXG5cXG4gICAgaDIge1xcbiAgICAgICAgbWFyZ2luLXRvcDogNTBweDtcXG4gICAgICAgIGZvbnQtc2l6ZTogQHNtYWxsO1xcbiAgICAgICAgZm9udC1mYW1pbHk6ICdOb3RvIFNhbnMnLCBzYW5zLXNlcmlmO1xcbiAgICB9XFxuXFxuICAgIGgzLCBwIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogQHgtc21hbGw7XFxuICAgIH1cXG5cXG4gICAgcCB7XFxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xcbiAgICB9XFxuXFxuICAgIC5tZW51LWZvb3RlciB7XFxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDUwcHg7XFxuICAgIH1cXG5cXG4gICAgLm1lbnUge1xcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcblxcbiAgICAgICAgaW1nIHtcXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgICAgICAgICAgdG9wOiA1MCU7XFxuICAgICAgICAgICAgbGVmdDogNTAlO1xcbiAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcXG4gICAgICAgICAgICBoZWlnaHQ6IDIwMHB4O1xcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0xMDBweDsgLyogSGFsZiB0aGUgaGVpZ2h0ICovXFxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0xMDBweDtcXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjE7XFxuICAgICAgICB9XFxuXFxuICAgICAgICAubWVudTEsIC5tZW51MiB7XFxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICAgICAgfVxcbiAgICB9XFxufVxcblxcbi5yZXNlcnZhdGlvbiB7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDgwMHB4O1xcbiAgICBoZWlnaHQ6IDU1MHB4O1xcbiAgICBtYXJnaW46IGF1dG87XFxuICAgIHRvcDogMDsgbGVmdDogMDsgYm90dG9tOiAwOyByaWdodDogLTMwMDBweDtcXG4gICAgY29sb3I6IGJsYWNrO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8gQ29uZGVuc2VkJywgc2Fucy1zZXJpZjtcXG4gICAgdHJhbnNpdGlvbjogcmlnaHQgMXM7XFxuICAgIHotaW5kZXg6IDQ7XFxuICAgIG9wYWNpdHk6IDAuOTtcXG5cXG4gICAgbmF2IHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgICAgICB3aWR0aDogODAlO1xcbiAgICAgICAgaGVpZ2h0OiA4MHB4O1xcbiAgICAgICAgbWFyZ2luOiAyMHB4O1xcbiAgICAgICAgXFxuICAgICAgICA+ZGl2IHtcXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgICAgICAgIHdpZHRoOiAyMCU7XFxuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcblxcbiAgICAgICAgICAmOmhvdmVyIHtcXG4gICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBicm93bjtcXG4gICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgLmhpZGRlbiB7XFxuICAgICAgZGlzcGxheTogbm9uZTtcXG4gICAgfVxcblxcbiAgICAucmVzZXJ2YXRpb24tY29udGFpbmVyIHtcXG4gICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgaGVpZ2h0OiA0MDBweDtcXG4gICAgICBwYWRkaW5nOiA1cHggNTBweDtcXG4gICAgICBib3JkZXItdG9wOiAycHggc29saWQgYmxhY2s7XFxuICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGJsYWNrO1xcblxcbiAgICAgIC5yZXNlcnZhdGlvbi1zdWItY29udGFpbmVyIHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICAgICAgd2lkdGg6IDcwJTtcXG4gICAgICAgIGhlaWdodDogOTAlO1xcbiAgICAgICAgcGFkZGluZzogMTBweDtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6d2hpdGU7XFxuXFxuICAgICAgICB1bCB7XFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XFxuXFxuICAgICAgICAgIGxpIHtcXG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICAgICAgICAgIG1hcmdpbjogMTBweDtcXG5cXG4gICAgICAgICAgICAmOmhvdmVyIHtcXG4gICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBicm93bjtcXG4gICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgLmNvbmZpcm0tY29udGFpbmVyIHtcXG4gICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgIG1hcmdpbjogMjBweDtcXG4gICAgICBcXG4gICAgICAucmVzZXJ2YXRpb24tYm90dG9uIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XFxuICAgICAgfVxcbiAgICB9XFxufVxcblxcbi8vY2FsZW5kYXIgc3R5bGluZ1xcbi5yZWFjdC1jYWxlbmRhciB7XFxuICB3aWR0aDogMzAwcHg7XFxufVxcblxcbi5yZWFjdC1jYWxlbmRhci0tZG91YmxlVmlldyB7XFxuICB3aWR0aDogNzAwcHg7XFxufVxcblwiLFwiaHRtbHtsaW5lLWhlaWdodDoxLjE1Oy1tcy10ZXh0LXNpemUtYWRqdXN0OjEwMCU7LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OjEwMCV9Ym9keXttYXJnaW46MH1hcnRpY2xlLGFzaWRlLGZvb3RlcixoZWFkZXIsbmF2LHNlY3Rpb257ZGlzcGxheTpibG9ja31oMXtmb250LXNpemU6MmVtO21hcmdpbjouNjdlbSAwfWZpZ2NhcHRpb24sZmlndXJlLG1haW57ZGlzcGxheTpibG9ja31maWd1cmV7bWFyZ2luOjFlbSA0MHB4fWhye2JveC1zaXppbmc6Y29udGVudC1ib3g7aGVpZ2h0OjA7b3ZlcmZsb3c6dmlzaWJsZX1wcmV7Zm9udC1mYW1pbHk6bW9ub3NwYWNlLG1vbm9zcGFjZTtmb250LXNpemU6MWVtfWF7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDstd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOm9iamVjdHN9YWJiclt0aXRsZV17Ym9yZGVyLWJvdHRvbTpub25lO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSBkb3R0ZWR9YixzdHJvbmd7Zm9udC13ZWlnaHQ6aW5oZXJpdH1iLHN0cm9uZ3tmb250LXdlaWdodDpib2xkZXJ9Y29kZSxrYmQsc2FtcHtmb250LWZhbWlseTptb25vc3BhY2UsbW9ub3NwYWNlO2ZvbnQtc2l6ZToxZW19ZGZue2ZvbnQtc3R5bGU6aXRhbGljfW1hcmt7YmFja2dyb3VuZC1jb2xvcjojZmYwO2NvbG9yOiMwMDB9c21hbGx7Zm9udC1zaXplOjgwJX1zdWIsc3Vwe2ZvbnQtc2l6ZTo3NSU7bGluZS1oZWlnaHQ6MDtwb3NpdGlvbjpyZWxhdGl2ZTt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1zdWJ7Ym90dG9tOi0uMjVlbX1zdXB7dG9wOi0uNWVtfWF1ZGlvLHZpZGVve2Rpc3BsYXk6aW5saW5lLWJsb2NrfWF1ZGlvOm5vdChbY29udHJvbHNdKXtkaXNwbGF5Om5vbmU7aGVpZ2h0OjB9aW1ne2JvcmRlci1zdHlsZTpub25lfXN2Zzpub3QoOnJvb3Qpe292ZXJmbG93OmhpZGRlbn1idXR0b24saW5wdXQsb3B0Z3JvdXAsc2VsZWN0LHRleHRhcmVhe2ZvbnQtZmFtaWx5OnNhbnMtc2VyaWY7Zm9udC1zaXplOjEwMCU7bGluZS1oZWlnaHQ6MS4xNTttYXJnaW46MH1idXR0b24saW5wdXR7b3ZlcmZsb3c6dmlzaWJsZX1idXR0b24sc2VsZWN0e3RleHQtdHJhbnNmb3JtOm5vbmV9YnV0dG9uLGh0bWwgW3R5cGU9YnV0dG9uXSxbdHlwZT1yZXNldF0sW3R5cGU9c3VibWl0XXstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9ufWJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixbdHlwZT1idXR0b25dOjotbW96LWZvY3VzLWlubmVyLFt0eXBlPXJlc2V0XTo6LW1vei1mb2N1cy1pbm5lcixbdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVye2JvcmRlci1zdHlsZTpub25lO3BhZGRpbmc6MH1idXR0b246LW1vei1mb2N1c3JpbmcsW3R5cGU9YnV0dG9uXTotbW96LWZvY3VzcmluZyxbdHlwZT1yZXNldF06LW1vei1mb2N1c3JpbmcsW3R5cGU9c3VibWl0XTotbW96LWZvY3VzcmluZ3tvdXRsaW5lOjFweCBkb3R0ZWQgQnV0dG9uVGV4dH1maWVsZHNldHtwYWRkaW5nOi4zNWVtIC43NWVtIC42MjVlbX1sZWdlbmR7Ym94LXNpemluZzpib3JkZXItYm94O2NvbG9yOmluaGVyaXQ7ZGlzcGxheTp0YWJsZTttYXgtd2lkdGg6MTAwJTtwYWRkaW5nOjA7d2hpdGUtc3BhY2U6bm9ybWFsfXByb2dyZXNze2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfXRleHRhcmVhe292ZXJmbG93OmF1dG99W3R5cGU9Y2hlY2tib3hdLFt0eXBlPXJhZGlvXXtib3gtc2l6aW5nOmJvcmRlci1ib3g7cGFkZGluZzowfVt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbntoZWlnaHQ6YXV0b31bdHlwZT1zZWFyY2hdey13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7b3V0bGluZS1vZmZzZXQ6LTJweH1bdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9Ojotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbnstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9uO2ZvbnQ6aW5oZXJpdH1kZXRhaWxzLG1lbnV7ZGlzcGxheTpibG9ja31zdW1tYXJ5e2Rpc3BsYXk6bGlzdC1pdGVtfWNhbnZhc3tkaXNwbGF5OmlubGluZS1ibG9ja310ZW1wbGF0ZXtkaXNwbGF5Om5vbmV9W2hpZGRlbl17ZGlzcGxheTpub25lfVxcblxcbi5jbGVhcmZpeDphZnRlciB7dmlzaWJpbGl0eTogaGlkZGVuOyBkaXNwbGF5OiBibG9jazsgZm9udC1zaXplOiAwOyBjb250ZW50OiAnJzsgY2xlYXI6IGJvdGg7IGhlaWdodDogMDsgfVxcblxcbiogeyAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7IC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxcblxcbi52aXN1YWxseUhpZGRlbjpub3QoOmZvY3VzKTpub3QoOmFjdGl2ZSkgeyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAxcHg7IGhlaWdodDogMXB4OyBtYXJnaW46IC0xcHg7Ym9yZGVyOiAwO3BhZGRpbmc6IDA7d2hpdGUtc3BhY2U6IG5vd3JhcDtjbGlwLXBhdGg6IGluc2V0KDEwMCUpO2NsaXA6IHJlY3QoMDAgMCAwKTtvdmVyZmxvdzogaGlkZGVuO31cXG5cXG4uc3Itb25seSB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDFweDsgaGVpZ2h0OiAxcHg7IG1hcmdpbjogLTFweDsgYm9yZGVyOiAwOyBwYWRkaW5nOiAwOyB3aGl0ZS1zcGFjZTogbm93cmFwOyBjbGlwLXBhdGg6IGluc2V0KDEwMCUpOyBjbGlwOiByZWN0KDAgMCAwIDApOyBvdmVyZmxvdzogaGlkZGVuO31cIixcIi5maXJlZmx5IHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRvcDogNTAlO1xcbiAgd2lkdGg6IDAuNHZ3O1xcbiAgaGVpZ2h0OiAwLjR2dztcXG4gIG1hcmdpbjogLTAuMnZ3IDAgMCA5Ljh2dztcXG4gIGFuaW1hdGlvbjogZWFzZSAyMDBzIGFsdGVybmF0ZSBpbmZpbml0ZTtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG4uZmlyZWZseTo6YmVmb3JlLCAuZmlyZWZseTo6YWZ0ZXIge1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIHRyYW5zZm9ybS1vcmlnaW46IC0xMHZ3O1xcbn1cXG4uZmlyZWZseTo6YmVmb3JlIHtcXG4gIGJhY2tncm91bmQ6IGJsYWNrO1xcbiAgb3BhY2l0eTogMC40O1xcbiAgYW5pbWF0aW9uOiBkcmlmdCBlYXNlIGFsdGVybmF0ZSBpbmZpbml0ZTtcXG59XFxuLmZpcmVmbHk6OmFmdGVyIHtcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcbiAgb3BhY2l0eTogMDtcXG4gIGJveC1zaGFkb3c6IDAgMCAwdncgMHZ3IHllbGxvdztcXG4gIGFuaW1hdGlvbjogZHJpZnQgZWFzZSBhbHRlcm5hdGUgaW5maW5pdGUsIGZsYXNoIGVhc2UgaW5maW5pdGU7XFxufVxcblxcbi5maXJlZmx5Om50aC1jaGlsZCgxKSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTE7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxKTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMThzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMSk6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMThzLCA4NzQxbXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgMjA2OG1zO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIG1vdmUxIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xNHZ3KSB0cmFuc2xhdGVZKDE4dmgpIHNjYWxlKDAuOTEpO1xcbiAgfVxcbiAgNS4yNjMxNTc4OTQ3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtM3Z3KSB0cmFuc2xhdGVZKC0yMHZoKSBzY2FsZSgwLjQzKTtcXG4gIH1cXG4gIDEwLjUyNjMxNTc4OTUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE3dncpIHRyYW5zbGF0ZVkoMjR2aCkgc2NhbGUoMC41NCk7XFxuICB9XFxuICAxNS43ODk0NzM2ODQyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NXZ3KSB0cmFuc2xhdGVZKDM2dmgpIHNjYWxlKDAuNjQpO1xcbiAgfVxcbiAgMjEuMDUyNjMxNTc4OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI3dncpIHRyYW5zbGF0ZVkoLTQ2dmgpIHNjYWxlKDAuNTcpO1xcbiAgfVxcbiAgMjYuMzE1Nzg5NDczNyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzF2dykgdHJhbnNsYXRlWSgtMjl2aCkgc2NhbGUoMC42Myk7XFxuICB9XFxuICAzMS41Nzg5NDczNjg0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDF2dykgdHJhbnNsYXRlWSgzNXZoKSBzY2FsZSgwLjgzKTtcXG4gIH1cXG4gIDM2Ljg0MjEwNTI2MzIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM2dncpIHRyYW5zbGF0ZVkoLTIydmgpIHNjYWxlKDAuNjcpO1xcbiAgfVxcbiAgNDIuMTA1MjYzMTU3OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjB2dykgdHJhbnNsYXRlWSgtNDB2aCkgc2NhbGUoMC4zNyk7XFxuICB9XFxuICA0Ny4zNjg0MjEwNTI2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMnZ3KSB0cmFuc2xhdGVZKDEwdmgpIHNjYWxlKDAuNTgpO1xcbiAgfVxcbiAgNTIuNjMxNTc4OTQ3NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ3dncpIHRyYW5zbGF0ZVkoMzR2aCkgc2NhbGUoMC45MSk7XFxuICB9XFxuICA1Ny44OTQ3MzY4NDIxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDZ2dykgdHJhbnNsYXRlWSgtOXZoKSBzY2FsZSgwLjk3KTtcXG4gIH1cXG4gIDYzLjE1Nzg5NDczNjglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQzdncpIHRyYW5zbGF0ZVkoMjB2aCkgc2NhbGUoMC40KTtcXG4gIH1cXG4gIDY4LjQyMTA1MjYzMTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ3dncpIHRyYW5zbGF0ZVkoNDF2aCkgc2NhbGUoMC43NSk7XFxuICB9XFxuICA3My42ODQyMTA1MjYzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyM3Z3KSB0cmFuc2xhdGVZKC03dmgpIHNjYWxlKDAuNDgpO1xcbiAgfVxcbiAgNzguOTQ3MzY4NDIxMSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzJ2dykgdHJhbnNsYXRlWSgzNnZoKSBzY2FsZSgwLjUxKTtcXG4gIH1cXG4gIDg0LjIxMDUyNjMxNTglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIydncpIHRyYW5zbGF0ZVkoMzN2aCkgc2NhbGUoMC44KTtcXG4gIH1cXG4gIDg5LjQ3MzY4NDIxMDUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDd2dykgdHJhbnNsYXRlWSgtMTV2aCkgc2NhbGUoMC43OCk7XFxuICB9XFxuICA5NC43MzY4NDIxMDUzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDF2dykgdHJhbnNsYXRlWSgtMzF2aCkgc2NhbGUoMC43KTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHZ3KSB0cmFuc2xhdGVZKDIydmgpIHNjYWxlKDAuOTYpO1xcbiAgfVxcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMikge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmUyO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMik6OmJlZm9yZSB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE0cztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDIpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE0cywgODA0NG1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDE4MDhtcztcXG59XFxuXFxuQGtleWZyYW1lcyBtb3ZlMiB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwdncpIHRyYW5zbGF0ZVkoNDZ2aCkgc2NhbGUoMC43OCk7XFxuICB9XFxuICA1LjI2MzE1Nzg5NDclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00M3Z3KSB0cmFuc2xhdGVZKC0xMHZoKSBzY2FsZSgwLjYzKTtcXG4gIH1cXG4gIDEwLjUyNjMxNTc4OTUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE4dncpIHRyYW5zbGF0ZVkoLTE4dmgpIHNjYWxlKDAuODUpO1xcbiAgfVxcbiAgMTUuNzg5NDczNjg0MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXZ3KSB0cmFuc2xhdGVZKC0xMXZoKSBzY2FsZSgwLjM0KTtcXG4gIH1cXG4gIDIxLjA1MjYzMTU3ODklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDB2dykgdHJhbnNsYXRlWSgtMTZ2aCkgc2NhbGUoMC43MSk7XFxuICB9XFxuICAyNi4zMTU3ODk0NzM3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDV2dykgdHJhbnNsYXRlWSgxNHZoKSBzY2FsZSgwLjU1KTtcXG4gIH1cXG4gIDMxLjU3ODk0NzM2ODQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI4dncpIHRyYW5zbGF0ZVkoMTB2aCkgc2NhbGUoMC42NCk7XFxuICB9XFxuICAzNi44NDIxMDUyNjMyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzd2dykgdHJhbnNsYXRlWSgtMTB2aCkgc2NhbGUoMC42OSk7XFxuICB9XFxuICA0Mi4xMDUyNjMxNTc5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDJ2dykgdHJhbnNsYXRlWSgtMzZ2aCkgc2NhbGUoMC4zNCk7XFxuICB9XFxuICA0Ny4zNjg0MjEwNTI2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNXZ3KSB0cmFuc2xhdGVZKC0yOHZoKSBzY2FsZSgwLjQxKTtcXG4gIH1cXG4gIDUyLjYzMTU3ODk0NzQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zNnZ3KSB0cmFuc2xhdGVZKDI3dmgpIHNjYWxlKDAuNDYpO1xcbiAgfVxcbiAgNTcuODk0NzM2ODQyMSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTF2dykgdHJhbnNsYXRlWSgxMXZoKSBzY2FsZSgwLjU4KTtcXG4gIH1cXG4gIDYzLjE1Nzg5NDczNjglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00dncpIHRyYW5zbGF0ZVkoLTV2aCkgc2NhbGUoMC42NCk7XFxuICB9XFxuICA2OC40MjEwNTI2MzE2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTR2dykgdHJhbnNsYXRlWSgtMTl2aCkgc2NhbGUoMC42NCk7XFxuICB9XFxuICA3My42ODQyMTA1MjYzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMnZ3KSB0cmFuc2xhdGVZKC0xdmgpIHNjYWxlKDAuNzcpO1xcbiAgfVxcbiAgNzguOTQ3MzY4NDIxMSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ2dncpIHRyYW5zbGF0ZVkoM3ZoKSBzY2FsZSgwLjM5KTtcXG4gIH1cXG4gIDg0LjIxMDUyNjMxNTglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE2dncpIHRyYW5zbGF0ZVkoLTQ2dmgpIHNjYWxlKDAuNjIpO1xcbiAgfVxcbiAgODkuNDczNjg0MjEwNSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDR2dykgdHJhbnNsYXRlWSgyNHZoKSBzY2FsZSgwLjg5KTtcXG4gIH1cXG4gIDk0LjczNjg0MjEwNTMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zOHZ3KSB0cmFuc2xhdGVZKDM0dmgpIHNjYWxlKDAuNzYpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTZ2dykgdHJhbnNsYXRlWSgtMzl2aCkgc2NhbGUoMC44Nik7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgzKSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgzKTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTdzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMyk6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTdzLCAxMDcxNG1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDE3MTZtcztcXG59XFxuXFxuQGtleWZyYW1lcyBtb3ZlMyB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0M3Z3KSB0cmFuc2xhdGVZKDM0dmgpIHNjYWxlKDAuNTMpO1xcbiAgfVxcbiAgNS44ODIzNTI5NDEyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNHZ3KSB0cmFuc2xhdGVZKC0xMHZoKSBzY2FsZSgwLjQ5KTtcXG4gIH1cXG4gIDExLjc2NDcwNTg4MjQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDZ2dykgdHJhbnNsYXRlWSgtMTl2aCkgc2NhbGUoMC40NSk7XFxuICB9XFxuICAxNy42NDcwNTg4MjM1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjZ2dykgdHJhbnNsYXRlWSgtMTJ2aCkgc2NhbGUoMC41Myk7XFxuICB9XFxuICAyMy41Mjk0MTE3NjQ3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NHZ3KSB0cmFuc2xhdGVZKDQzdmgpIHNjYWxlKDAuNjQpO1xcbiAgfVxcbiAgMjkuNDExNzY0NzA1OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzZ2dykgdHJhbnNsYXRlWSgtMzJ2aCkgc2NhbGUoMC44Myk7XFxuICB9XFxuICAzNS4yOTQxMTc2NDcxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NXZ3KSB0cmFuc2xhdGVZKC0xNHZoKSBzY2FsZSgwLjkzKTtcXG4gIH1cXG4gIDQxLjE3NjQ3MDU4ODIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMzdncpIHRyYW5zbGF0ZVkoLTQzdmgpIHNjYWxlKDAuNjMpO1xcbiAgfVxcbiAgNDcuMDU4ODIzNTI5NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTh2dykgdHJhbnNsYXRlWSgyNnZoKSBzY2FsZSgwLjY2KTtcXG4gIH1cXG4gIDUyLjk0MTE3NjQ3MDYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM0dncpIHRyYW5zbGF0ZVkoMzF2aCkgc2NhbGUoMC43Mik7XFxuICB9XFxuICA1OC44MjM1Mjk0MTE4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMnZ3KSB0cmFuc2xhdGVZKDIwdmgpIHNjYWxlKDAuNTYpO1xcbiAgfVxcbiAgNjQuNzA1ODgyMzUyOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI1dncpIHRyYW5zbGF0ZVkoMjB2aCkgc2NhbGUoMC45KTtcXG4gIH1cXG4gIDcwLjU4ODIzNTI5NDElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMXZ3KSB0cmFuc2xhdGVZKDJ2aCkgc2NhbGUoMC43Myk7XFxuICB9XFxuICA3Ni40NzA1ODgyMzUzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjJ2dykgdHJhbnNsYXRlWSgxMHZoKSBzY2FsZSgwLjQ2KTtcXG4gIH1cXG4gIDgyLjM1Mjk0MTE3NjUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwdncpIHRyYW5zbGF0ZVkoMTN2aCkgc2NhbGUoMC45NCk7XFxuICB9XFxuICA4OC4yMzUyOTQxMTc2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoLTMydmgpIHNjYWxlKDAuNDUpO1xcbiAgfVxcbiAgOTQuMTE3NjQ3MDU4OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTB2dykgdHJhbnNsYXRlWSgzMXZoKSBzY2FsZSgwLjUxKTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzh2dykgdHJhbnNsYXRlWSgtMjZ2aCkgc2NhbGUoMC42NCk7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg0KSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTQ7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg0KTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTFzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoNCk6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTFzLCA2MDcybXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgMTQ1OW1zO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIG1vdmU0IHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00M3Z3KSB0cmFuc2xhdGVZKDEwdmgpIHNjYWxlKDAuNTIpO1xcbiAgfVxcbiAgNS41NTU1NTU1NTU2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg3dncpIHRyYW5zbGF0ZVkoOHZoKSBzY2FsZSgwLjQzKTtcXG4gIH1cXG4gIDExLjExMTExMTExMTElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMydncpIHRyYW5zbGF0ZVkoLTQ0dmgpIHNjYWxlKDAuNzIpO1xcbiAgfVxcbiAgMTYuNjY2NjY2NjY2NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTd2dykgdHJhbnNsYXRlWSgtMjF2aCkgc2NhbGUoMC4yOCk7XFxuICB9XFxuICAyMi4yMjIyMjIyMjIyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHZ3KSB0cmFuc2xhdGVZKDQydmgpIHNjYWxlKDAuMzYpO1xcbiAgfVxcbiAgMjcuNzc3Nzc3Nzc3OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTR2dykgdHJhbnNsYXRlWSg0NnZoKSBzY2FsZSgwLjUxKTtcXG4gIH1cXG4gIDMzLjMzMzMzMzMzMzMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI5dncpIHRyYW5zbGF0ZVkoLTMxdmgpIHNjYWxlKDAuNDMpO1xcbiAgfVxcbiAgMzguODg4ODg4ODg4OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoM3Z3KSB0cmFuc2xhdGVZKC0yMXZoKSBzY2FsZSgwLjYpO1xcbiAgfVxcbiAgNDQuNDQ0NDQ0NDQ0NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDJ2dykgdHJhbnNsYXRlWSgtMTV2aCkgc2NhbGUoMC4yNik7XFxuICB9XFxuICA1MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE0dncpIHRyYW5zbGF0ZVkoMjR2aCkgc2NhbGUoMC44Nik7XFxuICB9XFxuICA1NS41NTU1NTU1NTU2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtM3Z3KSB0cmFuc2xhdGVZKDQzdmgpIHNjYWxlKDAuNDkpO1xcbiAgfVxcbiAgNjEuMTExMTExMTExMSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTh2dykgdHJhbnNsYXRlWSgzMXZoKSBzY2FsZSgwLjU4KTtcXG4gIH1cXG4gIDY2LjY2NjY2NjY2NjclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQwdncpIHRyYW5zbGF0ZVkoLTE1dmgpIHNjYWxlKDAuMzgpO1xcbiAgfVxcbiAgNzIuMjIyMjIyMjIyMiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ5dncpIHRyYW5zbGF0ZVkoMjN2aCkgc2NhbGUoMC40OCk7XFxuICB9XFxuICA3Ny43Nzc3Nzc3Nzc4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjR2dykgdHJhbnNsYXRlWSg5dmgpIHNjYWxlKDAuNzEpO1xcbiAgfVxcbiAgODMuMzMzMzMzMzMzMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI5dncpIHRyYW5zbGF0ZVkoLTQxdmgpIHNjYWxlKDAuOTUpO1xcbiAgfVxcbiAgODguODg4ODg4ODg4OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTV2dykgdHJhbnNsYXRlWSgtMXZoKSBzY2FsZSgwLjMpO1xcbiAgfVxcbiAgOTQuNDQ0NDQ0NDQ0NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE2dncpIHRyYW5zbGF0ZVkoMjB2aCkgc2NhbGUoMC40Myk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQxdncpIHRyYW5zbGF0ZVkoLTE2dmgpIHNjYWxlKDAuOTkpO1xcbiAgfVxcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoNSkge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmU1O1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoNSk6OmJlZm9yZSB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE1cztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDUpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE1cywgODg4NG1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDc3MzJtcztcXG59XFxuXFxuQGtleWZyYW1lcyBtb3ZlNSB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzdncpIHRyYW5zbGF0ZVkoNDd2aCkgc2NhbGUoMC43Myk7XFxuICB9XFxuICA0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTB2dykgdHJhbnNsYXRlWSgtNDh2aCkgc2NhbGUoMC44NSk7XFxuICB9XFxuICA4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjZ2dykgdHJhbnNsYXRlWSgtMzR2aCkgc2NhbGUoMC41KTtcXG4gIH1cXG4gIDEyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzd2dykgdHJhbnNsYXRlWSgtMjR2aCkgc2NhbGUoMC43KTtcXG4gIH1cXG4gIDE2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHZ3KSB0cmFuc2xhdGVZKDF2aCkgc2NhbGUoMC45OSk7XFxuICB9XFxuICAyMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTExdncpIHRyYW5zbGF0ZVkoLTN2aCkgc2NhbGUoMC44KTtcXG4gIH1cXG4gIDI0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjJ2dykgdHJhbnNsYXRlWSgtNDZ2aCkgc2NhbGUoMC4zNSk7XFxuICB9XFxuICAyOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ5dncpIHRyYW5zbGF0ZVkoNDF2aCkgc2NhbGUoMC43Nik7XFxuICB9XFxuICAzMiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTR2dykgdHJhbnNsYXRlWSgtMTl2aCkgc2NhbGUoMC41Nik7XFxuICB9XFxuICAzNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjl2dykgdHJhbnNsYXRlWSg0MnZoKSBzY2FsZSgwLjQpO1xcbiAgfVxcbiAgNDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE3dncpIHRyYW5zbGF0ZVkoMTl2aCkgc2NhbGUoMC43OSk7XFxuICB9XFxuICA0NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ5dncpIHRyYW5zbGF0ZVkoNDB2aCkgc2NhbGUoMC45MSk7XFxuICB9XFxuICA0OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDd2dykgdHJhbnNsYXRlWSgtNDZ2aCkgc2NhbGUoMC41Myk7XFxuICB9XFxuICA1MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE0dncpIHRyYW5zbGF0ZVkoMTh2aCkgc2NhbGUoMC4yOSk7XFxuICB9XFxuICA1NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTR2dykgdHJhbnNsYXRlWSgtMTd2aCkgc2NhbGUoMC41OCk7XFxuICB9XFxuICA2MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTh2dykgdHJhbnNsYXRlWSgtN3ZoKSBzY2FsZSgwLjQ4KTtcXG4gIH1cXG4gIDY0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoMzF2aCkgc2NhbGUoMC40OCk7XFxuICB9XFxuICA2OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI5dncpIHRyYW5zbGF0ZVkoLTQ2dmgpIHNjYWxlKDAuOTcpO1xcbiAgfVxcbiAgNzIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwdncpIHRyYW5zbGF0ZVkoMzV2aCkgc2NhbGUoMC4yOSk7XFxuICB9XFxuICA3NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNHZ3KSB0cmFuc2xhdGVZKDQzdmgpIHNjYWxlKDAuNTgpO1xcbiAgfVxcbiAgODAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM5dncpIHRyYW5zbGF0ZVkoLTM4dmgpIHNjYWxlKDAuMzgpO1xcbiAgfVxcbiAgODQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ5dncpIHRyYW5zbGF0ZVkoMjh2aCkgc2NhbGUoMC42NSk7XFxuICB9XFxuICA4OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTl2dykgdHJhbnNsYXRlWSgtMzV2aCkgc2NhbGUoMC45Myk7XFxuICB9XFxuICA5MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE5dncpIHRyYW5zbGF0ZVkoMzh2aCkgc2NhbGUoMC41NCk7XFxuICB9XFxuICA5NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDF2dykgdHJhbnNsYXRlWSgtMTF2aCkgc2NhbGUoMC43OCk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwdncpIHRyYW5zbGF0ZVkoNDF2aCkgc2NhbGUoMC40KTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDYpIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlNjtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDYpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxN3M7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg2KTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxN3MsIDY0MzNtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCAyMzMzbXM7XFxufVxcblxcbkBrZXlmcmFtZXMgbW92ZTYge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzB2dykgdHJhbnNsYXRlWSgzNnZoKSBzY2FsZSgwLjQ4KTtcXG4gIH1cXG4gIDQuMzQ3ODI2MDg3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg3dncpIHRyYW5zbGF0ZVkoMTV2aCkgc2NhbGUoMC41Myk7XFxuICB9XFxuICA4LjY5NTY1MjE3MzklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM3dncpIHRyYW5zbGF0ZVkoMnZoKSBzY2FsZSgwLjM5KTtcXG4gIH1cXG4gIDEzLjA0MzQ3ODI2MDklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMXZ3KSB0cmFuc2xhdGVZKDM2dmgpIHNjYWxlKDAuODQpO1xcbiAgfVxcbiAgMTcuMzkxMzA0MzQ3OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQxdncpIHRyYW5zbGF0ZVkoMjV2aCkgc2NhbGUoMC41Nyk7XFxuICB9XFxuICAyMS43MzkxMzA0MzQ4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0dncpIHRyYW5zbGF0ZVkoLTMydmgpIHNjYWxlKDAuMzYpO1xcbiAgfVxcbiAgMjYuMDg2OTU2NTIxNyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE0dncpIHRyYW5zbGF0ZVkoMnZoKSBzY2FsZSgwLjg4KTtcXG4gIH1cXG4gIDMwLjQzNDc4MjYwODclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNHZ3KSB0cmFuc2xhdGVZKDMydmgpIHNjYWxlKDAuMjkpO1xcbiAgfVxcbiAgMzQuNzgyNjA4Njk1NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTB2dykgdHJhbnNsYXRlWSgxNHZoKSBzY2FsZSgwLjU3KTtcXG4gIH1cXG4gIDM5LjEzMDQzNDc4MjYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI1dncpIHRyYW5zbGF0ZVkoMjJ2aCkgc2NhbGUoMC41KTtcXG4gIH1cXG4gIDQzLjQ3ODI2MDg2OTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE5dncpIHRyYW5zbGF0ZVkoMzV2aCkgc2NhbGUoMC4zKTtcXG4gIH1cXG4gIDQ3LjgyNjA4Njk1NjUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQwdncpIHRyYW5zbGF0ZVkoMjB2aCkgc2NhbGUoMC41Myk7XFxuICB9XFxuICA1Mi4xNzM5MTMwNDM1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0OXZ3KSB0cmFuc2xhdGVZKC0zMHZoKSBzY2FsZSgxKTtcXG4gIH1cXG4gIDU2LjUyMTczOTEzMDQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE2dncpIHRyYW5zbGF0ZVkoMTR2aCkgc2NhbGUoMC41NSk7XFxuICB9XFxuICA2MC44Njk1NjUyMTc0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0MnZ3KSB0cmFuc2xhdGVZKC0xMHZoKSBzY2FsZSgwLjUxKTtcXG4gIH1cXG4gIDY1LjIxNzM5MTMwNDMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNHZ3KSB0cmFuc2xhdGVZKC0yOXZoKSBzY2FsZSgwLjMzKTtcXG4gIH1cXG4gIDY5LjU2NTIxNzM5MTMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ2dncpIHRyYW5zbGF0ZVkoMjh2aCkgc2NhbGUoMC41NSk7XFxuICB9XFxuICA3My45MTMwNDM0NzgzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0dncpIHRyYW5zbGF0ZVkoLTE0dmgpIHNjYWxlKDAuMjgpO1xcbiAgfVxcbiAgNzguMjYwODY5NTY1MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM0dncpIHRyYW5zbGF0ZVkoOXZoKSBzY2FsZSgwLjU0KTtcXG4gIH1cXG4gIDgyLjYwODY5NTY1MjIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwdncpIHRyYW5zbGF0ZVkoLTQ5dmgpIHNjYWxlKDAuNTkpO1xcbiAgfVxcbiAgODYuOTU2NTIxNzM5MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMzdncpIHRyYW5zbGF0ZVkoMHZoKSBzY2FsZSgwLjY1KTtcXG4gIH1cXG4gIDkxLjMwNDM0NzgyNjElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xNnZ3KSB0cmFuc2xhdGVZKDB2aCkgc2NhbGUoMC4zKTtcXG4gIH1cXG4gIDk1LjY1MjE3MzkxMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI3dncpIHRyYW5zbGF0ZVkoLTE2dmgpIHNjYWxlKDAuOTIpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNHZ3KSB0cmFuc2xhdGVZKDB2aCkgc2NhbGUoMC4zNik7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg3KSB7XFxuICBhbmltYXRpb24tbmFtZTogbW92ZTc7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg3KTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTVzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoNyk6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTVzLCA2NjY0bXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgNTU4N21zO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIG1vdmU3IHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDF2dykgdHJhbnNsYXRlWSgxN3ZoKSBzY2FsZSgwLjk1KTtcXG4gIH1cXG4gIDQuMzQ3ODI2MDg3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzOXZ3KSB0cmFuc2xhdGVZKDMzdmgpIHNjYWxlKDAuOTIpO1xcbiAgfVxcbiAgOC42OTU2NTIxNzM5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTV2dykgdHJhbnNsYXRlWSgtMTN2aCkgc2NhbGUoMC41KTtcXG4gIH1cXG4gIDEzLjA0MzQ3ODI2MDklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDF2dykgdHJhbnNsYXRlWSgtNDN2aCkgc2NhbGUoMC45MSk7XFxuICB9XFxuICAxNy4zOTEzMDQzNDc4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDl2dykgdHJhbnNsYXRlWSgyNHZoKSBzY2FsZSgwLjMzKTtcXG4gIH1cXG4gIDIxLjczOTEzMDQzNDglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQzdncpIHRyYW5zbGF0ZVkoNDJ2aCkgc2NhbGUoMC45OCk7XFxuICB9XFxuICAyNi4wODY5NTY1MjE3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjV2dykgdHJhbnNsYXRlWSg0NHZoKSBzY2FsZSgwLjc0KTtcXG4gIH1cXG4gIDMwLjQzNDc4MjYwODclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xdncpIHRyYW5zbGF0ZVkoLTM4dmgpIHNjYWxlKDAuNjkpO1xcbiAgfVxcbiAgMzQuNzgyNjA4Njk1NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM2dncpIHRyYW5zbGF0ZVkoMjl2aCkgc2NhbGUoMC41Nik7XFxuICB9XFxuICAzOS4xMzA0MzQ3ODI2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzF2dykgdHJhbnNsYXRlWSgtNDV2aCkgc2NhbGUoMC4yNyk7XFxuICB9XFxuICA0My40NzgyNjA4Njk2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHZ3KSB0cmFuc2xhdGVZKDQxdmgpIHNjYWxlKDAuNzIpO1xcbiAgfVxcbiAgNDcuODI2MDg2OTU2NSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTB2dykgdHJhbnNsYXRlWSgtNDR2aCkgc2NhbGUoMC45Myk7XFxuICB9XFxuICA1Mi4xNzM5MTMwNDM1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMXZ3KSB0cmFuc2xhdGVZKC00OXZoKSBzY2FsZSgwLjI2KTtcXG4gIH1cXG4gIDU2LjUyMTczOTEzMDQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDF2dykgdHJhbnNsYXRlWSgtNDh2aCkgc2NhbGUoMC41Myk7XFxuICB9XFxuICA2MC44Njk1NjUyMTc0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzh2dykgdHJhbnNsYXRlWSgtNDJ2aCkgc2NhbGUoMC4zNyk7XFxuICB9XFxuICA2NS4yMTczOTEzMDQzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNHZ3KSB0cmFuc2xhdGVZKC00NHZoKSBzY2FsZSgwLjQzKTtcXG4gIH1cXG4gIDY5LjU2NTIxNzM5MTMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yOXZ3KSB0cmFuc2xhdGVZKDMwdmgpIHNjYWxlKDAuOSk7XFxuICB9XFxuICA3My45MTMwNDM0NzgzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNXZ3KSB0cmFuc2xhdGVZKDB2aCkgc2NhbGUoMC43OSk7XFxuICB9XFxuICA3OC4yNjA4Njk1NjUyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMHZ3KSB0cmFuc2xhdGVZKDE4dmgpIHNjYWxlKDAuNTUpO1xcbiAgfVxcbiAgODIuNjA4Njk1NjUyMiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTV2dykgdHJhbnNsYXRlWSgxNnZoKSBzY2FsZSgwLjY3KTtcXG4gIH1cXG4gIDg2Ljk1NjUyMTczOTElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xNXZ3KSB0cmFuc2xhdGVZKC00OXZoKSBzY2FsZSgwLjk2KTtcXG4gIH1cXG4gIDkxLjMwNDM0NzgyNjElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDV2dykgdHJhbnNsYXRlWSg0NHZoKSBzY2FsZSgwLjgxKTtcXG4gIH1cXG4gIDk1LjY1MjE3MzkxMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjJ2dykgdHJhbnNsYXRlWSgxdmgpIHNjYWxlKDAuMzMpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxM3Z3KSB0cmFuc2xhdGVZKC0zMHZoKSBzY2FsZSgwLjg1KTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDgpIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlODtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDgpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxNHM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg4KTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxNHMsIDY3NDJtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCA1NDc5bXM7XFxufVxcblxcbkBrZXlmcmFtZXMgbW92ZTgge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIzdncpIHRyYW5zbGF0ZVkoNDV2aCkgc2NhbGUoMC44KTtcXG4gIH1cXG4gIDQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC04dncpIHRyYW5zbGF0ZVkoNXZoKSBzY2FsZSgwLjQzKTtcXG4gIH1cXG4gIDglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDV2dykgdHJhbnNsYXRlWSgxMnZoKSBzY2FsZSgwLjk1KTtcXG4gIH1cXG4gIDEyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzN2dykgdHJhbnNsYXRlWSgtMjl2aCkgc2NhbGUoMC44KTtcXG4gIH1cXG4gIDE2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0MnZ3KSB0cmFuc2xhdGVZKDh2aCkgc2NhbGUoMC4yOCk7XFxuICB9XFxuICAyMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTN2dykgdHJhbnNsYXRlWSgyMXZoKSBzY2FsZSgwLjU4KTtcXG4gIH1cXG4gIDI0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDR2dykgdHJhbnNsYXRlWSgtMjR2aCkgc2NhbGUoMC44OCk7XFxuICB9XFxuICAyOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDl2dykgdHJhbnNsYXRlWSgtMnZoKSBzY2FsZSgwLjU5KTtcXG4gIH1cXG4gIDMyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1dncpIHRyYW5zbGF0ZVkoMjl2aCkgc2NhbGUoMC4yOCk7XFxuICB9XFxuICAzNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTJ2dykgdHJhbnNsYXRlWSgtMjV2aCkgc2NhbGUoMC4zNik7XFxuICB9XFxuICA0MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDd2dykgdHJhbnNsYXRlWSgtMTN2aCkgc2NhbGUoMC40MSk7XFxuICB9XFxuICA0NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDZ2dykgdHJhbnNsYXRlWSgtMjN2aCkgc2NhbGUoMC4zOSk7XFxuICB9XFxuICA0OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzZ2dykgdHJhbnNsYXRlWSgtMjJ2aCkgc2NhbGUoMC41KTtcXG4gIH1cXG4gIDUyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjh2dykgdHJhbnNsYXRlWSgtMzZ2aCkgc2NhbGUoMC40NCk7XFxuICB9XFxuICA1NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDF2dykgdHJhbnNsYXRlWSgtMjh2aCkgc2NhbGUoMC40MSk7XFxuICB9XFxuICA2MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM5dncpIHRyYW5zbGF0ZVkoMzV2aCkgc2NhbGUoMC41OSk7XFxuICB9XFxuICA2NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjB2dykgdHJhbnNsYXRlWSgtMzN2aCkgc2NhbGUoMC45KTtcXG4gIH1cXG4gIDY4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDB2dykgdHJhbnNsYXRlWSgtMTV2aCkgc2NhbGUoMC44Myk7XFxuICB9XFxuICA3MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoOHZ3KSB0cmFuc2xhdGVZKDI5dmgpIHNjYWxlKDAuMzcpO1xcbiAgfVxcbiAgNzYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMHZ3KSB0cmFuc2xhdGVZKDZ2aCkgc2NhbGUoMC4zNCk7XFxuICB9XFxuICA4MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzZ2dykgdHJhbnNsYXRlWSg0M3ZoKSBzY2FsZSgwLjcyKTtcXG4gIH1cXG4gIDg0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMXZ3KSB0cmFuc2xhdGVZKC0yOHZoKSBzY2FsZSgwLjM2KTtcXG4gIH1cXG4gIDg4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoNDF2aCkgc2NhbGUoMC40Nik7XFxuICB9XFxuICA5MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTB2dykgdHJhbnNsYXRlWSgtMzB2aCkgc2NhbGUoMC45Nyk7XFxuICB9XFxuICA5NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMxdncpIHRyYW5zbGF0ZVkoMHZoKSBzY2FsZSgwLjI4KTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMxdncpIHRyYW5zbGF0ZVkoMzB2aCkgc2NhbGUoMC43KTtcXG4gIH1cXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDkpIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlOTtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDkpOjpiZWZvcmUge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMHM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCg5KTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMHMsIDYyNDBtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCA3MTU3bXM7XFxufVxcblxcbkBrZXlmcmFtZXMgbW92ZTkge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwdncpIHRyYW5zbGF0ZVkoLTEzdmgpIHNjYWxlKDAuMjcpO1xcbiAgfVxcbiAgMy44NDYxNTM4NDYyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNnZ3KSB0cmFuc2xhdGVZKC00NXZoKSBzY2FsZSgwLjkyKTtcXG4gIH1cXG4gIDcuNjkyMzA3NjkyMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjN2dykgdHJhbnNsYXRlWSgtMjF2aCkgc2NhbGUoMC43Nyk7XFxuICB9XFxuICAxMS41Mzg0NjE1Mzg1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzh2dykgdHJhbnNsYXRlWSgxNHZoKSBzY2FsZSgwLjkzKTtcXG4gIH1cXG4gIDE1LjM4NDYxNTM4NDYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDJ2dykgdHJhbnNsYXRlWSgyOXZoKSBzY2FsZSgwLjgzKTtcXG4gIH1cXG4gIDE5LjIzMDc2OTIzMDglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xNXZ3KSB0cmFuc2xhdGVZKDE3dmgpIHNjYWxlKDAuODQpO1xcbiAgfVxcbiAgMjMuMDc2OTIzMDc2OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDV2dykgdHJhbnNsYXRlWSgyOHZoKSBzY2FsZSgwLjM1KTtcXG4gIH1cXG4gIDI2LjkyMzA3NjkyMzElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00M3Z3KSB0cmFuc2xhdGVZKDEwdmgpIHNjYWxlKDAuMzEpO1xcbiAgfVxcbiAgMzAuNzY5MjMwNzY5MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTJ2dykgdHJhbnNsYXRlWSg2dmgpIHNjYWxlKDAuOTQpO1xcbiAgfVxcbiAgMzQuNjE1Mzg0NjE1NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzl2dykgdHJhbnNsYXRlWSgtMjN2aCkgc2NhbGUoMC42NCk7XFxuICB9XFxuICAzOC40NjE1Mzg0NjE1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTB2dykgdHJhbnNsYXRlWSgtMTJ2aCkgc2NhbGUoMC42KTtcXG4gIH1cXG4gIDQyLjMwNzY5MjMwNzclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMHZ3KSB0cmFuc2xhdGVZKC03dmgpIHNjYWxlKDAuMzcpO1xcbiAgfVxcbiAgNDYuMTUzODQ2MTUzOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ3dncpIHRyYW5zbGF0ZVkoMXZoKSBzY2FsZSgwLjg4KTtcXG4gIH1cXG4gIDUwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHZ3KSB0cmFuc2xhdGVZKC0zMHZoKSBzY2FsZSgwLjQ0KTtcXG4gIH1cXG4gIDUzLjg0NjE1Mzg0NjIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zM3Z3KSB0cmFuc2xhdGVZKDE1dmgpIHNjYWxlKDAuNDEpO1xcbiAgfVxcbiAgNTcuNjkyMzA3NjkyMyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEydncpIHRyYW5zbGF0ZVkoLTM3dmgpIHNjYWxlKDAuODQpO1xcbiAgfVxcbiAgNjEuNTM4NDYxNTM4NSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTR2dykgdHJhbnNsYXRlWSgtNDR2aCkgc2NhbGUoMC40Myk7XFxuICB9XFxuICA2NS4zODQ2MTUzODQ2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzN2dykgdHJhbnNsYXRlWSgtMTB2aCkgc2NhbGUoMC40Nyk7XFxuICB9XFxuICA2OS4yMzA3NjkyMzA4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjl2dykgdHJhbnNsYXRlWSgtOHZoKSBzY2FsZSgwLjM4KTtcXG4gIH1cXG4gIDczLjA3NjkyMzA3NjklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zN3Z3KSB0cmFuc2xhdGVZKDE3dmgpIHNjYWxlKDAuNzQpO1xcbiAgfVxcbiAgNzYuOTIzMDc2OTIzMSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI2dncpIHRyYW5zbGF0ZVkoLTEzdmgpIHNjYWxlKDAuNDIpO1xcbiAgfVxcbiAgODAuNzY5MjMwNzY5MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoOHZ3KSB0cmFuc2xhdGVZKDIydmgpIHNjYWxlKDAuNzYpO1xcbiAgfVxcbiAgODQuNjE1Mzg0NjE1NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDV2dykgdHJhbnNsYXRlWSgtMzV2aCkgc2NhbGUoMC44NCk7XFxuICB9XFxuICA4OC40NjE1Mzg0NjE1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNnZ3KSB0cmFuc2xhdGVZKDM0dmgpIHNjYWxlKDAuNTYpO1xcbiAgfVxcbiAgOTIuMzA3NjkyMzA3NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIzdncpIHRyYW5zbGF0ZVkoLTEydmgpIHNjYWxlKDAuODcpO1xcbiAgfVxcbiAgOTYuMTUzODQ2MTUzOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzV2dykgdHJhbnNsYXRlWSgtNDl2aCkgc2NhbGUoMC45Nyk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDN2dykgdHJhbnNsYXRlWSgxMXZoKSBzY2FsZSgwLjcpO1xcbiAgfVxcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTApIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlMTA7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxMCk6OmJlZm9yZSB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDExcztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEwKTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMXMsIDEwMTUwbXM7XFxuICBhbmltYXRpb24tZGVsYXk6IDBtcywgNjgxNG1zO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIG1vdmUxMCB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNHZ3KSB0cmFuc2xhdGVZKC00N3ZoKSBzY2FsZSgwLjk5KTtcXG4gIH1cXG4gIDQuNzYxOTA0NzYxOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ0dncpIHRyYW5zbGF0ZVkoLTI0dmgpIHNjYWxlKDAuMzgpO1xcbiAgfVxcbiAgOS41MjM4MDk1MjM4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0OHZ3KSB0cmFuc2xhdGVZKDE3dmgpIHNjYWxlKDAuNDcpO1xcbiAgfVxcbiAgMTQuMjg1NzE0Mjg1NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMzdncpIHRyYW5zbGF0ZVkoLTEydmgpIHNjYWxlKDAuODkpO1xcbiAgfVxcbiAgMTkuMDQ3NjE5MDQ3NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ1dncpIHRyYW5zbGF0ZVkoNHZoKSBzY2FsZSgwLjI2KTtcXG4gIH1cXG4gIDIzLjgwOTUyMzgwOTUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE3dncpIHRyYW5zbGF0ZVkoLTI5dmgpIHNjYWxlKDEpO1xcbiAgfVxcbiAgMjguNTcxNDI4NTcxNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzh2dykgdHJhbnNsYXRlWSgxN3ZoKSBzY2FsZSgwLjgxKTtcXG4gIH1cXG4gIDMzLjMzMzMzMzMzMzMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE3dncpIHRyYW5zbGF0ZVkoNDh2aCkgc2NhbGUoMC4zNSk7XFxuICB9XFxuICAzOC4wOTUyMzgwOTUyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyN3Z3KSB0cmFuc2xhdGVZKDI0dmgpIHNjYWxlKDAuNTkpO1xcbiAgfVxcbiAgNDIuODU3MTQyODU3MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwdncpIHRyYW5zbGF0ZVkoMjJ2aCkgc2NhbGUoMC45MSk7XFxuICB9XFxuICA0Ny42MTkwNDc2MTklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xOHZ3KSB0cmFuc2xhdGVZKDQ1dmgpIHNjYWxlKDAuNTkpO1xcbiAgfVxcbiAgNTIuMzgwOTUyMzgxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMHZ3KSB0cmFuc2xhdGVZKC0zNHZoKSBzY2FsZSgwLjYyKTtcXG4gIH1cXG4gIDU3LjE0Mjg1NzE0MjklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMxdncpIHRyYW5zbGF0ZVkoMzJ2aCkgc2NhbGUoMC45NSk7XFxuICB9XFxuICA2MS45MDQ3NjE5MDQ4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTJ2dykgdHJhbnNsYXRlWSgtNDF2aCkgc2NhbGUoMC4zNyk7XFxuICB9XFxuICA2Ni42NjY2NjY2NjY3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMnZ3KSB0cmFuc2xhdGVZKC05dmgpIHNjYWxlKDAuNzQpO1xcbiAgfVxcbiAgNzEuNDI4NTcxNDI4NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ4dncpIHRyYW5zbGF0ZVkoLTM3dmgpIHNjYWxlKDAuNzkpO1xcbiAgfVxcbiAgNzYuMTkwNDc2MTkwNSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzZ2dykgdHJhbnNsYXRlWSgtNDN2aCkgc2NhbGUoMC43MSk7XFxuICB9XFxuICA4MC45NTIzODA5NTI0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMXZ3KSB0cmFuc2xhdGVZKC00NXZoKSBzY2FsZSgwLjQyKTtcXG4gIH1cXG4gIDg1LjcxNDI4NTcxNDMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM4dncpIHRyYW5zbGF0ZVkoLTE5dmgpIHNjYWxlKDAuNjMpO1xcbiAgfVxcbiAgOTAuNDc2MTkwNDc2MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ2dncpIHRyYW5zbGF0ZVkoMTZ2aCkgc2NhbGUoMC4zNyk7XFxuICB9XFxuICA5NS4yMzgwOTUyMzgxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoLTQxdmgpIHNjYWxlKDAuNzYpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyN3Z3KSB0cmFuc2xhdGVZKDQxdmgpIHNjYWxlKDAuOTcpO1xcbiAgfVxcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTEpIHtcXG4gIGFuaW1hdGlvbi1uYW1lOiBtb3ZlMTE7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxMSk6OmJlZm9yZSB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDEycztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDExKTo6YWZ0ZXIge1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMnMsIDY1MDJtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCA0NzkwbXM7XFxufVxcblxcbkBrZXlmcmFtZXMgbW92ZTExIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMXZ3KSB0cmFuc2xhdGVZKDI2dmgpIHNjYWxlKDAuNTkpO1xcbiAgfVxcbiAgNC41NDU0NTQ1NDU1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMXZ3KSB0cmFuc2xhdGVZKDM2dmgpIHNjYWxlKDAuNjUpO1xcbiAgfVxcbiAgOS4wOTA5MDkwOTA5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgydncpIHRyYW5zbGF0ZVkoLTE5dmgpIHNjYWxlKDAuNTEpO1xcbiAgfVxcbiAgMTMuNjM2MzYzNjM2NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDV2dykgdHJhbnNsYXRlWSgtNDF2aCkgc2NhbGUoMSk7XFxuICB9XFxuICAxOC4xODE4MTgxODE4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNnZ3KSB0cmFuc2xhdGVZKC0yMnZoKSBzY2FsZSgwLjc1KTtcXG4gIH1cXG4gIDIyLjcyNzI3MjcyNzMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE3dncpIHRyYW5zbGF0ZVkoMjB2aCkgc2NhbGUoMC44MSk7XFxuICB9XFxuICAyNy4yNzI3MjcyNzI3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNHZ3KSB0cmFuc2xhdGVZKDE5dmgpIHNjYWxlKDAuNzUpO1xcbiAgfVxcbiAgMzEuODE4MTgxODE4MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoOHZ3KSB0cmFuc2xhdGVZKDV2aCkgc2NhbGUoMC42NSk7XFxuICB9XFxuICAzNi4zNjM2MzYzNjM2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4dncpIHRyYW5zbGF0ZVkoNDN2aCkgc2NhbGUoMC40NSk7XFxuICB9XFxuICA0MC45MDkwOTA5MDkxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTB2dykgdHJhbnNsYXRlWSgtMjR2aCkgc2NhbGUoMC44OSk7XFxuICB9XFxuICA0NS40NTQ1NDU0NTQ1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0OHZ3KSB0cmFuc2xhdGVZKC0zMHZoKSBzY2FsZSgwLjQ4KTtcXG4gIH1cXG4gIDUwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyM3Z3KSB0cmFuc2xhdGVZKDQydmgpIHNjYWxlKDAuOSk7XFxuICB9XFxuICA1NC41NDU0NTQ1NDU1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNHZ3KSB0cmFuc2xhdGVZKDN2aCkgc2NhbGUoMC40NCk7XFxuICB9XFxuICA1OS4wOTA5MDkwOTA5JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg5dncpIHRyYW5zbGF0ZVkoLTQ5dmgpIHNjYWxlKDAuNDUpO1xcbiAgfVxcbiAgNjMuNjM2MzYzNjM2NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTZ2dykgdHJhbnNsYXRlWSg0N3ZoKSBzY2FsZSgwLjc3KTtcXG4gIH1cXG4gIDY4LjE4MTgxODE4MTglIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ5dncpIHRyYW5zbGF0ZVkoLTIwdmgpIHNjYWxlKDAuNzIpO1xcbiAgfVxcbiAgNzIuNzI3MjcyNzI3MyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTd2dykgdHJhbnNsYXRlWSg0MXZoKSBzY2FsZSgwLjY4KTtcXG4gIH1cXG4gIDc3LjI3MjcyNzI3MjclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQydncpIHRyYW5zbGF0ZVkoOHZoKSBzY2FsZSgwLjQ4KTtcXG4gIH1cXG4gIDgxLjgxODE4MTgxODIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zOHZ3KSB0cmFuc2xhdGVZKC03dmgpIHNjYWxlKDAuOTcpO1xcbiAgfVxcbiAgODYuMzYzNjM2MzYzNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwdncpIHRyYW5zbGF0ZVkoNDd2aCkgc2NhbGUoMC4yOCk7XFxuICB9XFxuICA5MC45MDkwOTA5MDkxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTd2dykgdHJhbnNsYXRlWSgxMHZoKSBzY2FsZSgwLjc4KTtcXG4gIH1cXG4gIDk1LjQ1NDU0NTQ1NDUlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIxdncpIHRyYW5zbGF0ZVkoMzV2aCkgc2NhbGUoMSk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ2dncpIHRyYW5zbGF0ZVkoNTB2aCkgc2NhbGUoMC41MSk7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxMikge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmUxMjtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEyKTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTZzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTIpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE2cywgNTY2MG1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDYxMTVtcztcXG59XFxuXFxuQGtleWZyYW1lcyBtb3ZlMTIge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzd2dykgdHJhbnNsYXRlWSgtNDN2aCkgc2NhbGUoMC4yOCk7XFxuICB9XFxuICAzLjU3MTQyODU3MTQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0dncpIHRyYW5zbGF0ZVkoMzZ2aCkgc2NhbGUoMC43OSk7XFxuICB9XFxuICA3LjE0Mjg1NzE0MjklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMnZ3KSB0cmFuc2xhdGVZKC0yMXZoKSBzY2FsZSgwLjc4KTtcXG4gIH1cXG4gIDEwLjcxNDI4NTcxNDMlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE1dncpIHRyYW5zbGF0ZVkoMjB2aCkgc2NhbGUoMC44Myk7XFxuICB9XFxuICAxNC4yODU3MTQyODU3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNXZ3KSB0cmFuc2xhdGVZKC0zNXZoKSBzY2FsZSgwLjgzKTtcXG4gIH1cXG4gIDE3Ljg1NzE0Mjg1NzElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMHZ3KSB0cmFuc2xhdGVZKC0yMXZoKSBzY2FsZSgwLjQ2KTtcXG4gIH1cXG4gIDIxLjQyODU3MTQyODYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00MHZ3KSB0cmFuc2xhdGVZKC0zMXZoKSBzY2FsZSgwLjczKTtcXG4gIH1cXG4gIDI1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNHZ3KSB0cmFuc2xhdGVZKC0yM3ZoKSBzY2FsZSgwLjk4KTtcXG4gIH1cXG4gIDI4LjU3MTQyODU3MTQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDR2dykgdHJhbnNsYXRlWSgtMzF2aCkgc2NhbGUoMC45KTtcXG4gIH1cXG4gIDMyLjE0Mjg1NzE0MjklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI0dncpIHRyYW5zbGF0ZVkoMTh2aCkgc2NhbGUoMC4zNSk7XFxuICB9XFxuICAzNS43MTQyODU3MTQzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjN2dykgdHJhbnNsYXRlWSgzNXZoKSBzY2FsZSgwLjc2KTtcXG4gIH1cXG4gIDM5LjI4NTcxNDI4NTclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC05dncpIHRyYW5zbGF0ZVkoLTIxdmgpIHNjYWxlKDAuNzMpO1xcbiAgfVxcbiAgNDIuODU3MTQyODU3MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjJ2dykgdHJhbnNsYXRlWSgtMjN2aCkgc2NhbGUoMC44KTtcXG4gIH1cXG4gIDQ2LjQyODU3MTQyODYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00dncpIHRyYW5zbGF0ZVkoMzB2aCkgc2NhbGUoMC4zOSk7XFxuICB9XFxuICA1MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjB2dykgdHJhbnNsYXRlWSgtMTB2aCkgc2NhbGUoMC45NSk7XFxuICB9XFxuICA1My41NzE0Mjg1NzE0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg3dncpIHRyYW5zbGF0ZVkoLTIxdmgpIHNjYWxlKDAuNDEpO1xcbiAgfVxcbiAgNTcuMTQyODU3MTQyOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE2dncpIHRyYW5zbGF0ZVkoNDZ2aCkgc2NhbGUoMC45NSk7XFxuICB9XFxuICA2MC43MTQyODU3MTQzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjF2dykgdHJhbnNsYXRlWSgzOXZoKSBzY2FsZSgwLjc1KTtcXG4gIH1cXG4gIDY0LjI4NTcxNDI4NTclIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMXZ3KSB0cmFuc2xhdGVZKDIzdmgpIHNjYWxlKDAuODQpO1xcbiAgfVxcbiAgNjcuODU3MTQyODU3MSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDN2dykgdHJhbnNsYXRlWSgzNnZoKSBzY2FsZSgwLjk4KTtcXG4gIH1cXG4gIDcxLjQyODU3MTQyODYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00dncpIHRyYW5zbGF0ZVkoMHZoKSBzY2FsZSgwLjQxKTtcXG4gIH1cXG4gIDc1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1dncpIHRyYW5zbGF0ZVkoLTMzdmgpIHNjYWxlKDAuNDEpO1xcbiAgfVxcbiAgNzguNTcxNDI4NTcxNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHZ3KSB0cmFuc2xhdGVZKDIxdmgpIHNjYWxlKDAuMzgpO1xcbiAgfVxcbiAgODIuMTQyODU3MTQyOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDN2dykgdHJhbnNsYXRlWSgtMjV2aCkgc2NhbGUoMC40Nyk7XFxuICB9XFxuICA4NS43MTQyODU3MTQzJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzJ2dykgdHJhbnNsYXRlWSgyMXZoKSBzY2FsZSgwLjQpO1xcbiAgfVxcbiAgODkuMjg1NzE0Mjg1NyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTE0dncpIHRyYW5zbGF0ZVkoMTJ2aCkgc2NhbGUoMC4zOCk7XFxuICB9XFxuICA5Mi44NTcxNDI4NTcxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDJ2dykgdHJhbnNsYXRlWSg0dmgpIHNjYWxlKDAuMzYpO1xcbiAgfVxcbiAgOTYuNDI4NTcxNDI4NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTd2dykgdHJhbnNsYXRlWSgtMTd2aCkgc2NhbGUoMC4zNCk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE5dncpIHRyYW5zbGF0ZVkoLTd2aCkgc2NhbGUoMC43Myk7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxMykge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmUxMztcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDEzKTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogOXM7XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxMyk6OmFmdGVyIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogOXMsIDgyMTZtcztcXG4gIGFuaW1hdGlvbi1kZWxheTogMG1zLCAyMjkxbXM7XFxufVxcblxcbkBrZXlmcmFtZXMgbW92ZTEzIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00NnZ3KSB0cmFuc2xhdGVZKDM0dmgpIHNjYWxlKDAuNTIpO1xcbiAgfVxcbiAgNS44ODIzNTI5NDEyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDh2dykgdHJhbnNsYXRlWSg5dmgpIHNjYWxlKDAuNTcpO1xcbiAgfVxcbiAgMTEuNzY0NzA1ODgyNCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTh2dykgdHJhbnNsYXRlWSgxOHZoKSBzY2FsZSgwLjYpO1xcbiAgfVxcbiAgMTcuNjQ3MDU4ODIzNSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI3dncpIHRyYW5zbGF0ZVkoMTV2aCkgc2NhbGUoMC43Nik7XFxuICB9XFxuICAyMy41Mjk0MTE3NjQ3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjl2dykgdHJhbnNsYXRlWSgzOXZoKSBzY2FsZSgwLjU4KTtcXG4gIH1cXG4gIDI5LjQxMTc2NDcwNTklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ0dncpIHRyYW5zbGF0ZVkoMTh2aCkgc2NhbGUoMC40Myk7XFxuICB9XFxuICAzNS4yOTQxMTc2NDcxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzNnZ3KSB0cmFuc2xhdGVZKC0xN3ZoKSBzY2FsZSgwLjMyKTtcXG4gIH1cXG4gIDQxLjE3NjQ3MDU4ODIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE1dncpIHRyYW5zbGF0ZVkoLTI1dmgpIHNjYWxlKDAuNjkpO1xcbiAgfVxcbiAgNDcuMDU4ODIzNTI5NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM3dncpIHRyYW5zbGF0ZVkoLTMwdmgpIHNjYWxlKDAuNDMpO1xcbiAgfVxcbiAgNTIuOTQxMTc2NDcwNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTR2dykgdHJhbnNsYXRlWSg0NXZoKSBzY2FsZSgwLjcpO1xcbiAgfVxcbiAgNTguODIzNTI5NDExOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIzdncpIHRyYW5zbGF0ZVkoOXZoKSBzY2FsZSgwLjk1KTtcXG4gIH1cXG4gIDY0LjcwNTg4MjM1MjklIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMydncpIHRyYW5zbGF0ZVkoLTI2dmgpIHNjYWxlKDAuNik7XFxuICB9XFxuICA3MC41ODgyMzUyOTQxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjR2dykgdHJhbnNsYXRlWSgwdmgpIHNjYWxlKDAuNTEpO1xcbiAgfVxcbiAgNzYuNDcwNTg4MjM1MyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEydncpIHRyYW5zbGF0ZVkoLTl2aCkgc2NhbGUoMC41Nik7XFxuICB9XFxuICA4Mi4zNTI5NDExNzY1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzOXZ3KSB0cmFuc2xhdGVZKDB2aCkgc2NhbGUoMC44OCk7XFxuICB9XFxuICA4OC4yMzUyOTQxMTc2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHZ3KSB0cmFuc2xhdGVZKDI5dmgpIHNjYWxlKDAuMzYpO1xcbiAgfVxcbiAgOTQuMTE3NjQ3MDU4OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMwdncpIHRyYW5zbGF0ZVkoLTM1dmgpIHNjYWxlKDAuMzUpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMnZ3KSB0cmFuc2xhdGVZKDMydmgpIHNjYWxlKDAuMyk7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxNCkge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmUxNDtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDE0KTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTdzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTQpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE3cywgNjUwOG1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDE0OTJtcztcXG59XFxuXFxuQGtleWZyYW1lcyBtb3ZlMTQge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoOXZ3KSB0cmFuc2xhdGVZKC0xNHZoKSBzY2FsZSgwLjQxKTtcXG4gIH1cXG4gIDUuODgyMzUyOTQxMiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM4dncpIHRyYW5zbGF0ZVkoNDB2aCkgc2NhbGUoMC44Nyk7XFxuICB9XFxuICAxMS43NjQ3MDU4ODI0JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtM3Z3KSB0cmFuc2xhdGVZKDM0dmgpIHNjYWxlKDAuNTYpO1xcbiAgfVxcbiAgMTcuNjQ3MDU4ODIzNSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ5dncpIHRyYW5zbGF0ZVkoLTF2aCkgc2NhbGUoMC41Mik7XFxuICB9XFxuICAyMy41Mjk0MTE3NjQ3JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtOXZ3KSB0cmFuc2xhdGVZKDM4dmgpIHNjYWxlKDAuNzYpO1xcbiAgfVxcbiAgMjkuNDExNzY0NzA1OSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQzdncpIHRyYW5zbGF0ZVkoOHZoKSBzY2FsZSgwLjUyKTtcXG4gIH1cXG4gIDM1LjI5NDExNzY0NzElIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQzdncpIHRyYW5zbGF0ZVkoLTE5dmgpIHNjYWxlKDAuMyk7XFxuICB9XFxuICA0MS4xNzY0NzA1ODgyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNXZ3KSB0cmFuc2xhdGVZKDE1dmgpIHNjYWxlKDAuODQpO1xcbiAgfVxcbiAgNDcuMDU4ODIzNTI5NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwdncpIHRyYW5zbGF0ZVkoMzB2aCkgc2NhbGUoMC41Nik7XFxuICB9XFxuICA1Mi45NDExNzY0NzA2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzZ2dykgdHJhbnNsYXRlWSgtMjR2aCkgc2NhbGUoMC45MSk7XFxuICB9XFxuICA1OC44MjM1Mjk0MTE4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0NXZ3KSB0cmFuc2xhdGVZKDUwdmgpIHNjYWxlKDAuNjIpO1xcbiAgfVxcbiAgNjQuNzA1ODgyMzUyOSUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ0dncpIHRyYW5zbGF0ZVkoNDF2aCkgc2NhbGUoMC45NCk7XFxuICB9XFxuICA3MC41ODgyMzUyOTQxJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNXZ3KSB0cmFuc2xhdGVZKDEydmgpIHNjYWxlKDAuODIpO1xcbiAgfVxcbiAgNzYuNDcwNTg4MjM1MyUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ5dncpIHRyYW5zbGF0ZVkoLTl2aCkgc2NhbGUoMC40Myk7XFxuICB9XFxuICA4Mi4zNTI5NDExNzY1JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyOXZ3KSB0cmFuc2xhdGVZKDIydmgpIHNjYWxlKDAuODUpO1xcbiAgfVxcbiAgODguMjM1Mjk0MTE3NiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIydncpIHRyYW5zbGF0ZVkoLTM5dmgpIHNjYWxlKDAuMjYpO1xcbiAgfVxcbiAgOTQuMTE3NjQ3MDU4OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM0dncpIHRyYW5zbGF0ZVkoLTQydmgpIHNjYWxlKDAuMzgpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzB2dykgdHJhbnNsYXRlWSgtNDl2aCkgc2NhbGUoMC43Myk7XFxuICB9XFxufVxcbi5maXJlZmx5Om50aC1jaGlsZCgxNSkge1xcbiAgYW5pbWF0aW9uLW5hbWU6IG1vdmUxNTtcXG59XFxuLmZpcmVmbHk6bnRoLWNoaWxkKDE1KTo6YmVmb3JlIHtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMTRzO1xcbn1cXG4uZmlyZWZseTpudGgtY2hpbGQoMTUpOjphZnRlciB7XFxuICBhbmltYXRpb24tZHVyYXRpb246IDE0cywgNTgxMW1zO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXMsIDUzMjFtcztcXG59XFxuXFxuQGtleWZyYW1lcyBtb3ZlMTUge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM1dncpIHRyYW5zbGF0ZVkoNnZoKSBzY2FsZSgwLjM1KTtcXG4gIH1cXG4gIDQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ5dncpIHRyYW5zbGF0ZVkoLTM2dmgpIHNjYWxlKDAuNDUpO1xcbiAgfVxcbiAgOCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjR2dykgdHJhbnNsYXRlWSgtN3ZoKSBzY2FsZSgwLjg0KTtcXG4gIH1cXG4gIDEyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMXZ3KSB0cmFuc2xhdGVZKDd2aCkgc2NhbGUoMC44Mik7XFxuICB9XFxuICAxNiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTM2dncpIHRyYW5zbGF0ZVkoLTl2aCkgc2NhbGUoMC41Nik7XFxuICB9XFxuICAyMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDl2dykgdHJhbnNsYXRlWSgxdmgpIHNjYWxlKDAuNTEpO1xcbiAgfVxcbiAgMjQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMXZ3KSB0cmFuc2xhdGVZKC00M3ZoKSBzY2FsZSgwLjYyKTtcXG4gIH1cXG4gIDI4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzN2dykgdHJhbnNsYXRlWSg0M3ZoKSBzY2FsZSgwLjMyKTtcXG4gIH1cXG4gIDMyJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg3dncpIHRyYW5zbGF0ZVkoLTIzdmgpIHNjYWxlKDAuNDUpO1xcbiAgfVxcbiAgMzYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDExdncpIHRyYW5zbGF0ZVkoLTIydmgpIHNjYWxlKDAuOTIpO1xcbiAgfVxcbiAgNDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00dncpIHRyYW5zbGF0ZVkoMTJ2aCkgc2NhbGUoMC4zOCk7XFxuICB9XFxuICA0NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzl2dykgdHJhbnNsYXRlWSgxNHZoKSBzY2FsZSgwLjk2KTtcXG4gIH1cXG4gIDQ4JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjR2dykgdHJhbnNsYXRlWSgtMTR2aCkgc2NhbGUoMC41MSk7XFxuICB9XFxuICA1MiUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI1dncpIHRyYW5zbGF0ZVkoLTQxdmgpIHNjYWxlKDAuNTQpO1xcbiAgfVxcbiAgNTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0dncpIHRyYW5zbGF0ZVkoLTI4dmgpIHNjYWxlKDAuNSk7XFxuICB9XFxuICA2MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoOHZ3KSB0cmFuc2xhdGVZKDIzdmgpIHNjYWxlKDAuNjUpO1xcbiAgfVxcbiAgNjQlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE5dncpIHRyYW5zbGF0ZVkoMzd2aCkgc2NhbGUoMC44Myk7XFxuICB9XFxuICA2OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoN3Z3KSB0cmFuc2xhdGVZKC0zdmgpIHNjYWxlKDAuMzQpO1xcbiAgfVxcbiAgNzIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC05dncpIHRyYW5zbGF0ZVkoMjh2aCkgc2NhbGUoMC44KTtcXG4gIH1cXG4gIDc2JSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxOXZ3KSB0cmFuc2xhdGVZKDEydmgpIHNjYWxlKDAuOTcpO1xcbiAgfVxcbiAgODAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNnZ3KSB0cmFuc2xhdGVZKDB2aCkgc2NhbGUoMC42OSk7XFxuICB9XFxuICA4NCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ4dncpIHRyYW5zbGF0ZVkoMzN2aCkgc2NhbGUoMC45Mik7XFxuICB9XFxuICA4OCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ3dncpIHRyYW5zbGF0ZVkoLTQ2dmgpIHNjYWxlKDAuOTcpO1xcbiAgfVxcbiAgOTIlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMXZ3KSB0cmFuc2xhdGVZKDQ4dmgpIHNjYWxlKDAuNTgpO1xcbiAgfVxcbiAgOTYlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00OHZ3KSB0cmFuc2xhdGVZKDQwdmgpIHNjYWxlKDAuOTcpO1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNHZ3KSB0cmFuc2xhdGVZKC04dmgpIHNjYWxlKDAuOTkpO1xcbiAgfVxcbn1cXG5Aa2V5ZnJhbWVzIGRyaWZ0IHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXG4gIH1cXG59XFxuQGtleWZyYW1lcyBmbGFzaCB7XFxuICAwJSwgMzAlLCAxMDAlIHtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgYm94LXNoYWRvdzogMCAwIDB2dyAwdncgeWVsbG93O1xcbiAgfVxcbiAgNSUge1xcbiAgICBvcGFjaXR5OiAxO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMnZ3IDAuNHZ3IHllbGxvdztcXG4gIH1cXG59XCIsXCJoMSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2QzZDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5yZWFjdC1jYWxlbmRhciB7XFxuICB3aWR0aDogMzUwcHg7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNhMGEwOTY7XFxuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcXG4gIGxpbmUtaGVpZ2h0OiAxLjEyNWVtO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXItLWRvdWJsZVZpZXcge1xcbiAgd2lkdGg6IDcwMHB4O1xcbn1cXG4ucmVhY3QtY2FsZW5kYXItLWRvdWJsZVZpZXcgLnJlYWN0LWNhbGVuZGFyX192aWV3Q29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBtYXJnaW46IC0wLjVlbTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyLS1kb3VibGVWaWV3IC5yZWFjdC1jYWxlbmRhcl9fdmlld0NvbnRhaW5lciA+ICoge1xcbiAgd2lkdGg6IDUwJTtcXG4gIG1hcmdpbjogMC41ZW07XFxufVxcbi5yZWFjdC1jYWxlbmRhcixcXG4ucmVhY3QtY2FsZW5kYXIgKixcXG4ucmVhY3QtY2FsZW5kYXIgKjpiZWZvcmUsXFxuLnJlYWN0LWNhbGVuZGFyICo6YWZ0ZXIge1xcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuLnJlYWN0LWNhbGVuZGFyIGJ1dHRvbiB7XFxuICBtYXJnaW46IDA7XFxuICBib3JkZXI6IDA7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXIgYnV0dG9uOmVuYWJsZWQ6aG92ZXIge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX25hdmlnYXRpb24ge1xcbiAgaGVpZ2h0OiA0NHB4O1xcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX25hdmlnYXRpb24gYnV0dG9uIHtcXG4gIG1pbi13aWR0aDogNDRweDtcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fbmF2aWdhdGlvbiBidXR0b246ZW5hYmxlZDpob3ZlcixcXG4ucmVhY3QtY2FsZW5kYXJfX25hdmlnYXRpb24gYnV0dG9uOmVuYWJsZWQ6Zm9jdXMge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX19uYXZpZ2F0aW9uIGJ1dHRvbltkaXNhYmxlZF0ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX19tb250aC12aWV3X193ZWVrZGF5cyB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBmb250LXNpemU6IDAuNzVlbTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX19tb250aC12aWV3X193ZWVrZGF5c19fd2Vla2RheSB7XFxuICBwYWRkaW5nOiAwLjVlbTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX19tb250aC12aWV3X193ZWVrTnVtYmVycyB7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX19tb250aC12aWV3X193ZWVrTnVtYmVycyAucmVhY3QtY2FsZW5kYXJfX3RpbGUge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMC43NWVtO1xcbiAgcGFkZGluZzogY2FsYygwLjc1ZW0gLyAwLjc1KSBjYWxjKDAuNWVtIC8gMC43NSk7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fbW9udGgtdmlld19fZGF5c19fZGF5LS13ZWVrZW5kIHtcXG4gIGNvbG9yOiAjZDEwMDAwO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX21vbnRoLXZpZXdfX2RheXNfX2RheS0tbmVpZ2hib3JpbmdNb250aCB7XFxuICBjb2xvcjogIzc1NzU3NTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX195ZWFyLXZpZXcgLnJlYWN0LWNhbGVuZGFyX190aWxlLFxcbi5yZWFjdC1jYWxlbmRhcl9fZGVjYWRlLXZpZXcgLnJlYWN0LWNhbGVuZGFyX190aWxlLFxcbi5yZWFjdC1jYWxlbmRhcl9fY2VudHVyeS12aWV3IC5yZWFjdC1jYWxlbmRhcl9fdGlsZSB7XFxuICBwYWRkaW5nOiAyZW0gMC41ZW07XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZSB7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAwLjc1ZW0gMC41ZW07XFxuICBiYWNrZ3JvdW5kOiBub25lO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX3RpbGU6ZGlzYWJsZWQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX190aWxlOmVuYWJsZWQ6aG92ZXIsXFxuLnJlYWN0LWNhbGVuZGFyX190aWxlOmVuYWJsZWQ6Zm9jdXMge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX190aWxlLS1ub3cge1xcbiAgYmFja2dyb3VuZDogI2ZmZmY3NjtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX190aWxlLS1ub3c6ZW5hYmxlZDpob3ZlcixcXG4ucmVhY3QtY2FsZW5kYXJfX3RpbGUtLW5vdzplbmFibGVkOmZvY3VzIHtcXG4gIGJhY2tncm91bmQ6ICNmZmZmYTk7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZS0taGFzQWN0aXZlIHtcXG4gIGJhY2tncm91bmQ6ICM3NmJhZmY7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZS0taGFzQWN0aXZlOmVuYWJsZWQ6aG92ZXIsXFxuLnJlYWN0LWNhbGVuZGFyX190aWxlLS1oYXNBY3RpdmU6ZW5hYmxlZDpmb2N1cyB7XFxuICBiYWNrZ3JvdW5kOiAjYTlkNGZmO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX3RpbGUtLWFjdGl2ZSB7XFxuICBiYWNrZ3JvdW5kOiAjMDA2ZWRjO1xcbiAgY29sb3I6IHdoaXRlO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX3RpbGUtLWFjdGl2ZTplbmFibGVkOmhvdmVyLFxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZS0tYWN0aXZlOmVuYWJsZWQ6Zm9jdXMge1xcbiAgYmFja2dyb3VuZDogIzEwODdmZjtcXG59XFxuLnJlYWN0LWNhbGVuZGFyLS1zZWxlY3RSYW5nZSAucmVhY3QtY2FsZW5kYXJfX3RpbGUtLWhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL25vZGVfbW9kdWxlcy9yZWFjdC1jYWxlbmRhci9kaXN0L0NhbGVuZGFyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFlBQVk7RUFDWixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6Qix5Q0FBeUM7RUFDekMsb0JBQW9CO0FBQ3RCO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLGFBQWE7RUFDYixjQUFjO0FBQ2hCO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsYUFBYTtBQUNmO0FBQ0E7Ozs7RUFJRSwyQkFBMkI7RUFDM0IsOEJBQThCO0VBQzlCLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsU0FBUztFQUNULFNBQVM7RUFDVCxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7QUFDQTs7RUFFRSx5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxjQUFjO0FBQ2hCO0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQiwrQ0FBK0M7QUFDakQ7QUFDQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTs7O0VBR0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUNBOztFQUVFLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7O0VBRUUsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTs7RUFFRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0FBQ2Q7QUFDQTs7RUFFRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucmVhY3QtY2FsZW5kYXIge1xcbiAgd2lkdGg6IDM1MHB4O1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjYTBhMDk2O1xcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XFxuICBsaW5lLWhlaWdodDogMS4xMjVlbTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyLS1kb3VibGVWaWV3IHtcXG4gIHdpZHRoOiA3MDBweDtcXG59XFxuLnJlYWN0LWNhbGVuZGFyLS1kb3VibGVWaWV3IC5yZWFjdC1jYWxlbmRhcl9fdmlld0NvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgbWFyZ2luOiAtMC41ZW07XFxufVxcbi5yZWFjdC1jYWxlbmRhci0tZG91YmxlVmlldyAucmVhY3QtY2FsZW5kYXJfX3ZpZXdDb250YWluZXIgPiAqIHtcXG4gIHdpZHRoOiA1MCU7XFxuICBtYXJnaW46IDAuNWVtO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXIsXFxuLnJlYWN0LWNhbGVuZGFyICosXFxuLnJlYWN0LWNhbGVuZGFyICo6YmVmb3JlLFxcbi5yZWFjdC1jYWxlbmRhciAqOmFmdGVyIHtcXG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbi5yZWFjdC1jYWxlbmRhciBidXR0b24ge1xcbiAgbWFyZ2luOiAwO1xcbiAgYm9yZGVyOiAwO1xcbiAgb3V0bGluZTogbm9uZTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyIGJ1dHRvbjplbmFibGVkOmhvdmVyIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX19uYXZpZ2F0aW9uIHtcXG4gIGhlaWdodDogNDRweDtcXG4gIG1hcmdpbi1ib3R0b206IDFlbTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX19uYXZpZ2F0aW9uIGJ1dHRvbiB7XFxuICBtaW4td2lkdGg6IDQ0cHg7XFxuICBiYWNrZ3JvdW5kOiBub25lO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX25hdmlnYXRpb24gYnV0dG9uOmVuYWJsZWQ6aG92ZXIsXFxuLnJlYWN0LWNhbGVuZGFyX19uYXZpZ2F0aW9uIGJ1dHRvbjplbmFibGVkOmZvY3VzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fbmF2aWdhdGlvbiBidXR0b25bZGlzYWJsZWRdIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fbW9udGgtdmlld19fd2Vla2RheXMge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgZm9udC1zaXplOiAwLjc1ZW07XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fbW9udGgtdmlld19fd2Vla2RheXNfX3dlZWtkYXkge1xcbiAgcGFkZGluZzogMC41ZW07XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fbW9udGgtdmlld19fd2Vla051bWJlcnMge1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fbW9udGgtdmlld19fd2Vla051bWJlcnMgLnJlYWN0LWNhbGVuZGFyX190aWxlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBmb250LXNpemU6IDAuNzVlbTtcXG4gIHBhZGRpbmc6IGNhbGMoMC43NWVtIC8gMC43NSkgY2FsYygwLjVlbSAvIDAuNzUpO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX21vbnRoLXZpZXdfX2RheXNfX2RheS0td2Vla2VuZCB7XFxuICBjb2xvcjogI2QxMDAwMDtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX19tb250aC12aWV3X19kYXlzX19kYXktLW5laWdoYm9yaW5nTW9udGgge1xcbiAgY29sb3I6ICM3NTc1NzU7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9feWVhci12aWV3IC5yZWFjdC1jYWxlbmRhcl9fdGlsZSxcXG4ucmVhY3QtY2FsZW5kYXJfX2RlY2FkZS12aWV3IC5yZWFjdC1jYWxlbmRhcl9fdGlsZSxcXG4ucmVhY3QtY2FsZW5kYXJfX2NlbnR1cnktdmlldyAucmVhY3QtY2FsZW5kYXJfX3RpbGUge1xcbiAgcGFkZGluZzogMmVtIDAuNWVtO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX3RpbGUge1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgcGFkZGluZzogMC43NWVtIDAuNWVtO1xcbiAgYmFja2dyb3VuZDogbm9uZTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX190aWxlOmRpc2FibGVkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZTplbmFibGVkOmhvdmVyLFxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZTplbmFibGVkOmZvY3VzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZS0tbm93IHtcXG4gIGJhY2tncm91bmQ6ICNmZmZmNzY7XFxufVxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZS0tbm93OmVuYWJsZWQ6aG92ZXIsXFxuLnJlYWN0LWNhbGVuZGFyX190aWxlLS1ub3c6ZW5hYmxlZDpmb2N1cyB7XFxuICBiYWNrZ3JvdW5kOiAjZmZmZmE5O1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX3RpbGUtLWhhc0FjdGl2ZSB7XFxuICBiYWNrZ3JvdW5kOiAjNzZiYWZmO1xcbn1cXG4ucmVhY3QtY2FsZW5kYXJfX3RpbGUtLWhhc0FjdGl2ZTplbmFibGVkOmhvdmVyLFxcbi5yZWFjdC1jYWxlbmRhcl9fdGlsZS0taGFzQWN0aXZlOmVuYWJsZWQ6Zm9jdXMge1xcbiAgYmFja2dyb3VuZDogI2E5ZDRmZjtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX190aWxlLS1hY3RpdmUge1xcbiAgYmFja2dyb3VuZDogIzAwNmVkYztcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuLnJlYWN0LWNhbGVuZGFyX190aWxlLS1hY3RpdmU6ZW5hYmxlZDpob3ZlcixcXG4ucmVhY3QtY2FsZW5kYXJfX3RpbGUtLWFjdGl2ZTplbmFibGVkOmZvY3VzIHtcXG4gIGJhY2tncm91bmQ6ICMxMDg3ZmY7XFxufVxcbi5yZWFjdC1jYWxlbmRhci0tc2VsZWN0UmFuZ2UgLnJlYWN0LWNhbGVuZGFyX190aWxlLS1ob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKipcbiAqIGxvZGFzaCAoQ3VzdG9tIEJ1aWxkKSA8aHR0cHM6Ly9sb2Rhc2guY29tLz5cbiAqIEJ1aWxkOiBgbG9kYXNoIG1vZHVsYXJpemUgZXhwb3J0cz1cIm5wbVwiIC1vIC4vYFxuICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMgPGh0dHBzOi8vanF1ZXJ5Lm9yZy8+XG4gKiBSZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZSA8aHR0cHM6Ly9sb2Rhc2guY29tL2xpY2Vuc2U+XG4gKiBCYXNlZCBvbiBVbmRlcnNjb3JlLmpzIDEuOC4zIDxodHRwOi8vdW5kZXJzY29yZWpzLm9yZy9MSUNFTlNFPlxuICogQ29weXJpZ2h0IEplcmVteSBBc2hrZW5hcywgRG9jdW1lbnRDbG91ZCBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgJiBFZGl0b3JzXG4gKi9cblxuLyoqIFVzZWQgYXMgdGhlIGBUeXBlRXJyb3JgIG1lc3NhZ2UgZm9yIFwiRnVuY3Rpb25zXCIgbWV0aG9kcy4gKi9cbnZhciBGVU5DX0VSUk9SX1RFWFQgPSAnRXhwZWN0ZWQgYSBmdW5jdGlvbic7XG5cbi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIElORklOSVRZID0gMSAvIDAsXG4gICAgTUFYX0lOVEVHRVIgPSAxLjc5NzY5MzEzNDg2MjMxNTdlKzMwOCxcbiAgICBOQU4gPSAwIC8gMDtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIHN5bWJvbFRhZyA9ICdbb2JqZWN0IFN5bWJvbF0nO1xuXG4vKiogVXNlZCB0byBtYXRjaCBsZWFkaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlLiAqL1xudmFyIHJlVHJpbSA9IC9eXFxzK3xcXHMrJC9nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmFkIHNpZ25lZCBoZXhhZGVjaW1hbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCYWRIZXggPSAvXlstK10weFswLTlhLWZdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGJpbmFyeSBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCaW5hcnkgPSAvXjBiWzAxXSskL2k7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBvY3RhbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNPY3RhbCA9IC9eMG9bMC03XSskL2k7XG5cbi8qKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB3aXRob3V0IGEgZGVwZW5kZW5jeSBvbiBgcm9vdGAuICovXG52YXIgZnJlZVBhcnNlSW50ID0gcGFyc2VJbnQ7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBvYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGludm9rZXMgYGZ1bmNgLCB3aXRoIHRoZSBgdGhpc2AgYmluZGluZyBhbmQgYXJndW1lbnRzXG4gKiBvZiB0aGUgY3JlYXRlZCBmdW5jdGlvbiwgd2hpbGUgaXQncyBjYWxsZWQgbGVzcyB0aGFuIGBuYCB0aW1lcy4gU3Vic2VxdWVudFxuICogY2FsbHMgdG8gdGhlIGNyZWF0ZWQgZnVuY3Rpb24gcmV0dXJuIHRoZSByZXN1bHQgb2YgdGhlIGxhc3QgYGZ1bmNgIGludm9jYXRpb24uXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAzLjAuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAcGFyYW0ge251bWJlcn0gbiBUaGUgbnVtYmVyIG9mIGNhbGxzIGF0IHdoaWNoIGBmdW5jYCBpcyBubyBsb25nZXIgaW52b2tlZC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHJlc3RyaWN0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgcmVzdHJpY3RlZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogalF1ZXJ5KGVsZW1lbnQpLm9uKCdjbGljaycsIF8uYmVmb3JlKDUsIGFkZENvbnRhY3RUb0xpc3QpKTtcbiAqIC8vID0+IEFsbG93cyBhZGRpbmcgdXAgdG8gNCBjb250YWN0cyB0byB0aGUgbGlzdC5cbiAqL1xuZnVuY3Rpb24gYmVmb3JlKG4sIGZ1bmMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBmdW5jICE9ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gIH1cbiAgbiA9IHRvSW50ZWdlcihuKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGlmICgtLW4gPiAwKSB7XG4gICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICAgIGlmIChuIDw9IDEpIHtcbiAgICAgIGZ1bmMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgaXMgcmVzdHJpY3RlZCB0byBpbnZva2luZyBgZnVuY2Agb25jZS4gUmVwZWF0IGNhbGxzXG4gKiB0byB0aGUgZnVuY3Rpb24gcmV0dXJuIHRoZSB2YWx1ZSBvZiB0aGUgZmlyc3QgaW52b2NhdGlvbi4gVGhlIGBmdW5jYCBpc1xuICogaW52b2tlZCB3aXRoIHRoZSBgdGhpc2AgYmluZGluZyBhbmQgYXJndW1lbnRzIG9mIHRoZSBjcmVhdGVkIGZ1bmN0aW9uLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gcmVzdHJpY3QuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyByZXN0cmljdGVkIGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgaW5pdGlhbGl6ZSA9IF8ub25jZShjcmVhdGVBcHBsaWNhdGlvbik7XG4gKiBpbml0aWFsaXplKCk7XG4gKiBpbml0aWFsaXplKCk7XG4gKiAvLyA9PiBgY3JlYXRlQXBwbGljYXRpb25gIGlzIGludm9rZWQgb25jZVxuICovXG5mdW5jdGlvbiBvbmNlKGZ1bmMpIHtcbiAgcmV0dXJuIGJlZm9yZSgyLCBmdW5jKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyB0aGVcbiAqIFtsYW5ndWFnZSB0eXBlXShodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtZWNtYXNjcmlwdC1sYW5ndWFnZS10eXBlcylcbiAqIG9mIGBPYmplY3RgLiAoZS5nLiBhcnJheXMsIGZ1bmN0aW9ucywgb2JqZWN0cywgcmVnZXhlcywgYG5ldyBOdW1iZXIoMClgLCBhbmQgYG5ldyBTdHJpbmcoJycpYClcbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdCh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoXy5ub29wKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIHJldHVybiAhIXZhbHVlICYmICh0eXBlID09ICdvYmplY3QnIHx8IHR5cGUgPT0gJ2Z1bmN0aW9uJyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UuIEEgdmFsdWUgaXMgb2JqZWN0LWxpa2UgaWYgaXQncyBub3QgYG51bGxgXG4gKiBhbmQgaGFzIGEgYHR5cGVvZmAgcmVzdWx0IG9mIFwib2JqZWN0XCIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdExpa2Uoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc09iamVjdExpa2UobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgcmV0dXJuICEhdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgU3ltYm9sYCBwcmltaXRpdmUgb3Igb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgc3ltYm9sLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNTeW1ib2woU3ltYm9sLml0ZXJhdG9yKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzU3ltYm9sKCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3ltYm9sKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gJ3N5bWJvbCcgfHxcbiAgICAoaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBvYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKSA9PSBzeW1ib2xUYWcpO1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBmaW5pdGUgbnVtYmVyLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4xMi4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBudW1iZXIuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udG9GaW5pdGUoMy4yKTtcbiAqIC8vID0+IDMuMlxuICpcbiAqIF8udG9GaW5pdGUoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiA1ZS0zMjRcbiAqXG4gKiBfLnRvRmluaXRlKEluZmluaXR5KTtcbiAqIC8vID0+IDEuNzk3NjkzMTM0ODYyMzE1N2UrMzA4XG4gKlxuICogXy50b0Zpbml0ZSgnMy4yJyk7XG4gKiAvLyA9PiAzLjJcbiAqL1xuZnVuY3Rpb24gdG9GaW5pdGUodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gMCA/IHZhbHVlIDogMDtcbiAgfVxuICB2YWx1ZSA9IHRvTnVtYmVyKHZhbHVlKTtcbiAgaWYgKHZhbHVlID09PSBJTkZJTklUWSB8fCB2YWx1ZSA9PT0gLUlORklOSVRZKSB7XG4gICAgdmFyIHNpZ24gPSAodmFsdWUgPCAwID8gLTEgOiAxKTtcbiAgICByZXR1cm4gc2lnbiAqIE1BWF9JTlRFR0VSO1xuICB9XG4gIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyB2YWx1ZSA6IDA7XG59XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhbiBpbnRlZ2VyLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uXG4gKiBbYFRvSW50ZWdlcmBdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy10b2ludGVnZXIpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgY29udmVydGVkIGludGVnZXIuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udG9JbnRlZ2VyKDMuMik7XG4gKiAvLyA9PiAzXG4gKlxuICogXy50b0ludGVnZXIoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiAwXG4gKlxuICogXy50b0ludGVnZXIoSW5maW5pdHkpO1xuICogLy8gPT4gMS43OTc2OTMxMzQ4NjIzMTU3ZSszMDhcbiAqXG4gKiBfLnRvSW50ZWdlcignMy4yJyk7XG4gKiAvLyA9PiAzXG4gKi9cbmZ1bmN0aW9uIHRvSW50ZWdlcih2YWx1ZSkge1xuICB2YXIgcmVzdWx0ID0gdG9GaW5pdGUodmFsdWUpLFxuICAgICAgcmVtYWluZGVyID0gcmVzdWx0ICUgMTtcblxuICByZXR1cm4gcmVzdWx0ID09PSByZXN1bHQgPyAocmVtYWluZGVyID8gcmVzdWx0IC0gcmVtYWluZGVyIDogcmVzdWx0KSA6IDA7XG59XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIG51bWJlci5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcHJvY2Vzcy5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIG51bWJlci5cbiAqIEBleGFtcGxlXG4gKlxuICogXy50b051bWJlcigzLjIpO1xuICogLy8gPT4gMy4yXG4gKlxuICogXy50b051bWJlcihOdW1iZXIuTUlOX1ZBTFVFKTtcbiAqIC8vID0+IDVlLTMyNFxuICpcbiAqIF8udG9OdW1iZXIoSW5maW5pdHkpO1xuICogLy8gPT4gSW5maW5pdHlcbiAqXG4gKiBfLnRvTnVtYmVyKCczLjInKTtcbiAqIC8vID0+IDMuMlxuICovXG5mdW5jdGlvbiB0b051bWJlcih2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gTkFOO1xuICB9XG4gIGlmIChpc09iamVjdCh2YWx1ZSkpIHtcbiAgICB2YXIgb3RoZXIgPSB0eXBlb2YgdmFsdWUudmFsdWVPZiA9PSAnZnVuY3Rpb24nID8gdmFsdWUudmFsdWVPZigpIDogdmFsdWU7XG4gICAgdmFsdWUgPSBpc09iamVjdChvdGhlcikgPyAob3RoZXIgKyAnJykgOiBvdGhlcjtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSAwID8gdmFsdWUgOiArdmFsdWU7XG4gIH1cbiAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKHJlVHJpbSwgJycpO1xuICB2YXIgaXNCaW5hcnkgPSByZUlzQmluYXJ5LnRlc3QodmFsdWUpO1xuICByZXR1cm4gKGlzQmluYXJ5IHx8IHJlSXNPY3RhbC50ZXN0KHZhbHVlKSlcbiAgICA/IGZyZWVQYXJzZUludCh2YWx1ZS5zbGljZSgyKSwgaXNCaW5hcnkgPyAyIDogOClcbiAgICA6IChyZUlzQmFkSGV4LnRlc3QodmFsdWUpID8gTkFOIDogK3ZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvbmNlO1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjJcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMsIG9wdGlvbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJywgZmxhZ3Mob3B0aW9ucykpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49NjAxMDMscD02MDEwNjtleHBvcnRzLkZyYWdtZW50PTYwMTA3O2V4cG9ydHMuU3RyaWN0TW9kZT02MDEwODtleHBvcnRzLlByb2ZpbGVyPTYwMTE0O3ZhciBxPTYwMTA5LHI9NjAxMTAsdD02MDExMjtleHBvcnRzLlN1c3BlbnNlPTYwMTEzO3ZhciB1PTYwMTE1LHY9NjAxMTY7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgdz1TeW1ib2wuZm9yO249dyhcInJlYWN0LmVsZW1lbnRcIik7cD13KFwicmVhY3QucG9ydGFsXCIpO2V4cG9ydHMuRnJhZ21lbnQ9dyhcInJlYWN0LmZyYWdtZW50XCIpO2V4cG9ydHMuU3RyaWN0TW9kZT13KFwicmVhY3Quc3RyaWN0X21vZGVcIik7ZXhwb3J0cy5Qcm9maWxlcj13KFwicmVhY3QucHJvZmlsZXJcIik7cT13KFwicmVhY3QucHJvdmlkZXJcIik7cj13KFwicmVhY3QuY29udGV4dFwiKTt0PXcoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtleHBvcnRzLlN1c3BlbnNlPXcoXCJyZWFjdC5zdXNwZW5zZVwiKTt1PXcoXCJyZWFjdC5tZW1vXCIpO3Y9dyhcInJlYWN0LmxhenlcIil9dmFyIHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eCYmYVt4XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIHooYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgQT17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQj17fTtmdW5jdGlvbiBDKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9Qy5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtDLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3Ioeig4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Qy5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBEKCl7fUQucHJvdG90eXBlPUMucHJvdG90eXBlO2Z1bmN0aW9uIEUoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX12YXIgRj1FLnByb3RvdHlwZT1uZXcgRDtGLmNvbnN0cnVjdG9yPUU7bChGLEMucHJvdG90eXBlKTtGLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBKKGEsYixjKXt2YXIgZSxkPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUguY2FsbChiLGUpJiYhSS5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1kW2VdJiYoZFtlXT1nW2VdKTtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6ZCxfb3duZXI6Ry5jdXJyZW50fX1cbmZ1bmN0aW9uIEsoYSxiKXtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIEwoYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PW59ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBNPS9cXC8rL2c7ZnVuY3Rpb24gTihhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIE8oYSxiLGMsZSxkKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbjpjYXNlIHA6aD0hMH19aWYoaClyZXR1cm4gaD1hLGQ9ZChoKSxhPVwiXCI9PT1lP1wiLlwiK04oaCwwKTplLEFycmF5LmlzQXJyYXkoZCk/KGM9XCJcIixudWxsIT1hJiYoYz1hLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIiksTyhkLGIsYyxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWQmJihMKGQpJiYoZD1LKGQsYysoIWQua2V5fHxoJiZoLmtleT09PWQua2V5P1wiXCI6KFwiXCIrZC5rZXkpLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChkKSksMTtoPTA7ZT1cIlwiPT09ZT9cIi5cIjplK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBnPVxuMDtnPGEubGVuZ3RoO2crKyl7az1hW2ddO3ZhciBmPWUrTihrLGcpO2grPU8oayxiLGMsZixkKX1lbHNlIGlmKGY9eShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZStOKGssZysrKSxoKz1PKGssYixjLGYsZCk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVwiXCIrYSxFcnJvcih6KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpKTtyZXR1cm4gaH1mdW5jdGlvbiBQKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdLGQ9MDtPKGEsZSxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChjLGEsZCsrKX0pO3JldHVybiBlfVxuZnVuY3Rpb24gUShhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2EuX3N0YXR1cz0wO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0O3Rocm93IGEuX3Jlc3VsdDt9dmFyIFI9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gUygpe3ZhciBhPVIuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcih6KDMyMSkpO3JldHVybiBhfXZhciBUPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlIsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3RyYW5zaXRpb246MH0sUmVhY3RDdXJyZW50T3duZXI6RyxJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O1xuZXhwb3J0cy5DaGlsZHJlbj17bWFwOlAsZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7UChhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGMpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1AoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBQKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIUwoYSkpdGhyb3cgRXJyb3IoeigxNDMpKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUM7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUU7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1UO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKHooMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksaz1hLnJlZixoPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixoPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZz1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihmIGluIGIpSC5jYWxsKGIsZikmJiFJLmhhc093blByb3BlcnR5KGYpJiYoZVtmXT12b2lkIDA9PT1iW2ZdJiZ2b2lkIDAhPT1nP2dbZl06YltmXSl9dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zz1BcnJheShmKTtmb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmsscHJvcHM6ZSxfb3duZXI6aH19O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOnIsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjpxLF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1KO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1KLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp0LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1MO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6UX19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp1LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjJcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNPbGRJRSA9IGZ1bmN0aW9uIGlzT2xkSUUoKSB7XG4gIHZhciBtZW1vO1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59KCk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiBnZXRUYXJnZXQoKSB7XG4gIHZhciBtZW1vID0ge307XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSh0YXJnZXQpIHtcbiAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbiAgfTtcbn0oKTtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICBhdHRyaWJ1dGVzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfSk7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KG9wdGlvbnMuaW5zZXJ0IHx8ICdoZWFkJyk7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG52YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbiByZXBsYWNlVGV4dCgpIHtcbiAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShpbmRleCwgcmVwbGFjZW1lbnQpIHtcbiAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG4gIH07XG59KCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpLmNvbmNhdChvYmouY3NzLCBcIn1cIikgOiBvYmouY3NzOyAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH1cblxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnbWVkaWEnKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhciBzaW5nbGV0b25Db3VudGVyID0gMDtcblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBzdHlsZTtcbiAgdmFyIHVwZGF0ZTtcbiAgdmFyIHJlbW92ZTtcblxuICBpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcbiAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcbiAgICBzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICByZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cbiAgICByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH07XG4gIH1cblxuICB1cGRhdGUob2JqKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OyAvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cbiAgLy8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXG4gIGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSAnYm9vbGVhbicpIHtcbiAgICBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcbiAgfVxuXG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobmV3TGlzdCkgIT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvXCI7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59IiwiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCIuL3NldFByb3RvdHlwZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8sIGZyb20pIHtcbiAgaWYgKGZyb20gPT09IHVuZGVmaW5lZCkgZnJvbSA9ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gKHRvICYmIHRvLnNwbGl0KCcvJykpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gKGZyb20gJiYgZnJvbS5zcGxpdCgnLycpKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuXG4gIGlmIChcbiAgICBtdXN0RW5kQWJzICYmXG4gICAgZnJvbVBhcnRzWzBdICE9PSAnJyAmJlxuICAgICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpXG4gIClcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7XG4iLCJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbnZhciBwcmVmaXggPSAnSW52YXJpYW50IGZhaWxlZCc7XG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gICAgaWYgKGNvbmRpdGlvbikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbnZhcmlhbnQ7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gcGF0aC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocHJlZml4LnRvTG93ZXJDYXNlKCkpID09PSAwICYmICcvPyMnLmluZGV4T2YocGF0aC5jaGFyQXQocHJlZml4Lmxlbmd0aCkpICE9PSAtMTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBfcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gJ2hhc2hjaGFuZ2UnO1xudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gdXJsIDogdXJsLnNsaWNlKDAsIGhhc2hJbmRleCk7XG59XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwkJDEoYSwgYikge1xuICAgIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsJCQxKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgdmFyIGJhc2VUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XG4gICAgdmFyIGhyZWYgPSAnJztcblxuICAgIGlmIChiYXNlVGFnICYmIGJhc2VUYWcuZ2V0QXR0cmlidXRlKCdocmVmJykpIHtcbiAgICAgIGhyZWYgPSBzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmICsgJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG52YXIgY29tbW9uanNHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWxUaGlzIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHt9O1xuXG5mdW5jdGlvbiBnZXRVbmlxdWVJZCgpIHtcbiAgdmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG4gIHJldHVybiBjb21tb25qc0dsb2JhbFtrZXldID0gKGNvbW1vbmpzR2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufVxuXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBnZXRVbmlxdWVJZCgpICsgJ19fJztcblxuICB2YXIgUHJvdmlkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHNMb29zZShQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgIHZhciBfdGhpcztcblxuICAgICAgX3RoaXMgPSBfQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpO1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8gPSBQcm92aWRlci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xuICAgIH07XG5cbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy52YWx1ZSAhPT0gbmV4dFByb3BzLnZhbHVlKSB7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIGNoYW5nZWRCaXRzO1xuXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB3YXJuaW5nKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAnICsgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XG5cbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgdmFyIENvbnN1bWVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0c0xvb3NlKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGhpczI7XG5cbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9O1xuXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcblxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdtaW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0JztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBoaXN0b3J5Q29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQoXCJSb3V0ZXItSGlzdG9yeVwiKTtcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0JDEgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGNvbnRleHQgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlTmFtZWRDb250ZXh0JDEoXCJSb3V0ZXJcIik7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5cbnZhciBSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVSb290TWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gUm91dGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBsb2NhdGlvbjogcHJvcHMuaGlzdG9yeS5sb2NhdGlvblxuICAgIH07IC8vIFRoaXMgaXMgYSBiaXQgb2YgYSBoYWNrLiBXZSBoYXZlIHRvIHN0YXJ0IGxpc3RlbmluZyBmb3IgbG9jYXRpb25cbiAgICAvLyBjaGFuZ2VzIGhlcmUgaW4gdGhlIGNvbnN0cnVjdG9yIGluIGNhc2UgdGhlcmUgYXJlIGFueSA8UmVkaXJlY3Q+c1xuICAgIC8vIG9uIHRoZSBpbml0aWFsIHJlbmRlci4gSWYgdGhlcmUgYXJlLCB0aGV5IHdpbGwgcmVwbGFjZS9wdXNoIHdoZW5cbiAgICAvLyB0aGV5IG1vdW50IGFuZCBzaW5jZSBjRE0gZmlyZXMgaW4gY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMsIHdlIG1heVxuICAgIC8vIGdldCBhIG5ldyBsb2NhdGlvbiBiZWZvcmUgdGhlIDxSb3V0ZXI+IGlzIG1vdW50ZWQuXG5cbiAgICBfdGhpcy5faXNNb3VudGVkID0gZmFsc2U7XG4gICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IG51bGw7XG5cbiAgICBpZiAoIXByb3BzLnN0YXRpY0NvbnRleHQpIHtcbiAgICAgIF90aGlzLnVubGlzdGVuID0gcHJvcHMuaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICAgIGlmIChfdGhpcy5faXNNb3VudGVkKSB7XG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLl9wZW5kaW5nTG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy51bmxpc3RlbikgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcbiAgICAgIH1cbiAgICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KGhpc3RvcnlDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxuICAgICAgdmFsdWU6IHRoaXMucHJvcHMuaGlzdG9yeVxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5cbnZhciBNZW1vcnlSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBNZW1vcnlSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgTGlmZWN5Y2xlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBMaWZlY3ljbGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXG4gKi9cblxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGlmICghd2hlbiB8fCBjb250ZXh0LnN0YXRpY0NvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHZhciBtZXRob2QgPSBjb250ZXh0Lmhpc3RvcnkuYmxvY2s7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKHByZXZQcm9wcy5tZXNzYWdlICE9PSBtZXNzYWdlKSB7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Vbm1vdW50OiBmdW5jdGlvbiBvblVubW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBtZXNzYWdlVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWVzc2FnZTogbWVzc2FnZVR5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGgsIHBhcmFtcykge1xuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGF0aCA9IFwiL1wiO1xuICB9XG5cbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7XG4gICAgcHJldHR5OiB0cnVlXG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSZWRpcmVjdChfcmVmKSB7XG4gIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgX3JlZiRwdXNoID0gX3JlZi5wdXNoLFxuICAgICAgcHVzaCA9IF9yZWYkcHVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHB1c2g7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQuc3RhdGljQ29udGV4dDtcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICB2YXIgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcblxuICAgICAgICBpZiAoIWxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XG4gICAgICAgIH0pKSkge1xuICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0bzogdG9cbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSQxID0ge307XG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCQxID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAga2V5czoga2V5c1xuICB9O1xuXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCQxKys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cblxuXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgb3B0aW9ucyA9IHtcbiAgICAgIHBhdGg6IG9wdGlvbnNcbiAgICB9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xuICByZXR1cm4gcGF0aHMucmVkdWNlKGZ1bmN0aW9uIChtYXRjaGVkLCBwYXRoKSB7XG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXG4gICAgfSksXG4gICAgICAgIHJlZ2V4cCA9IF9jb21waWxlUGF0aC5yZWdleHAsXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICAgIHZhciBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBwYXRoLFxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCxcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcbiAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XG4gIHZhciB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyh2YWx1ZSAhPT0gdW5kZWZpbmVkLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQxKSB7XG4gICAgICAhY29udGV4dCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JDEubG9jYXRpb247XG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQxLm1hdGNoO1xuXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQxLCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IG1hdGNoXG4gICAgICB9KTtcblxuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICBjb21wb25lbnQgPSBfdGhpcyRwcm9wcy5jb21wb25lbnQsXG4gICAgICAgICAgcmVuZGVyID0gX3RoaXMkcHJvcHMucmVuZGVyOyAvLyBQcmVhY3QgdXNlcyBhbiBlbXB0eSBhcnJheSBhcyBjaGlsZHJlbiBieVxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgJiYgY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogcHJvcHNcbiAgICAgIH0sIHByb3BzLm1hdGNoID8gY2hpbGRyZW4gPyB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogY2hpbGRyZW4gOiBjb21wb25lbnQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogcmVuZGVyID8gcmVuZGVyKHByb3BzKSA6IG51bGwgOiB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKSA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5cblxudmFyIFN0YXRpY1JvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3RhdGljUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ubmF2aWdhdGVUbyA9IGZ1bmN0aW9uIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wcyRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMkY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcyRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzJGNvbnRleHQ7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzMiRiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wczIkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzMiRjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wczIkY29udGV4dCxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyLmxvY2F0aW9uLFxuICAgICAgICBsb2NhdGlvbiA9IF90aGlzJHByb3BzMiRsb2NhdGlvbiA9PT0gdm9pZCAwID8gXCIvXCIgOiBfdGhpcyRwcm9wczIkbG9jYXRpb24sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogZnVuY3Rpb24gY3JlYXRlSHJlZihwYXRoKSB7XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgICAgfSxcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICB2YXIgZWxlbWVudCwgbWF0Y2g7IC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcbiAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cblxuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcbiAgICAgICAgICBtYXRjaCA9IHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF9leHRlbmRzKHt9LCBjaGlsZC5wcm9wcywge1xuICAgICAgICAgICAgcGF0aDogcGF0aFxuICAgICAgICAgIH0pKSA6IGNvbnRleHQubWF0Y2g7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxuICAgICAgfSkgOiBudWxsO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cblxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcblxuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8XCIgKyBkaXNwbGF5TmFtZSArIFwiIC8+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgY29udGV4dCwge1xuICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQy5wcm9wVHlwZXMgPSB7XG4gICAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn1cblxudmFyIHVzZUNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0O1xuZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUhpc3RvcnkoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChoaXN0b3J5Q29udGV4dCk7XG59XG5mdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUxvY2F0aW9uKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCkubG9jYXRpb247XG59XG5mdW5jdGlvbiB1c2VQYXJhbXMoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VQYXJhbXMoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICB2YXIgbWF0Y2ggPSB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xuICByZXR1cm4gbWF0Y2ggPyBtYXRjaC5wYXJhbXMgOiB7fTtcbn1cbmZ1bmN0aW9uIHVzZVJvdXRlTWF0Y2gocGF0aCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUm91dGVNYXRjaCgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBwYXRoKSA6IG1hdGNoO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIGdsb2JhbCA9IHdpbmRvdztcbiAgICB2YXIga2V5ID0gXCJfX3JlYWN0X3JvdXRlcl9idWlsZF9fXCI7XG4gICAgdmFyIGJ1aWxkTmFtZXMgPSB7XG4gICAgICBjanM6IFwiQ29tbW9uSlNcIixcbiAgICAgIGVzbTogXCJFUyBtb2R1bGVzXCIsXG4gICAgICB1bWQ6IFwiVU1EXCJcbiAgICB9O1xuXG4gICAgaWYgKGdsb2JhbFtrZXldICYmIGdsb2JhbFtrZXldICE9PSBcImVzbVwiKSB7XG4gICAgICB2YXIgaW5pdGlhbEJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbZ2xvYmFsW2tleV1dO1xuICAgICAgdmFyIHNlY29uZGFyeUJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbXCJlc21cIl07IC8vIFRPRE86IEFkZCBsaW5rIHRvIGFydGljbGUgdGhhdCBleHBsYWlucyBpbiBkZXRhaWwgaG93IHRvIGF2b2lkXG4gICAgICAvLyBsb2FkaW5nIDIgZGlmZmVyZW50IGJ1aWxkcy5cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGFyZSBsb2FkaW5nIHRoZSBcIiArIHNlY29uZGFyeUJ1aWxkTmFtZSArIFwiIGJ1aWxkIG9mIFJlYWN0IFJvdXRlciBcIiArIChcIm9uIGEgcGFnZSB0aGF0IGlzIGFscmVhZHkgcnVubmluZyB0aGUgXCIgKyBpbml0aWFsQnVpbGROYW1lICsgXCIgXCIpICsgXCJidWlsZCwgc28gdGhpbmdzIHdvbid0IHdvcmsgcmlnaHQuXCIpO1xuICAgIH1cblxuICAgIGdsb2JhbFtrZXldID0gXCJlc21cIjtcbiAgfVxufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBoaXN0b3J5Q29udGV4dCBhcyBfX0hpc3RvcnlDb250ZXh0LCBjb250ZXh0IGFzIF9fUm91dGVyQ29udGV4dCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci5qcy5tYXBcbiIsImltcG9ydCB7IFJvdXRlciwgX19Sb3V0ZXJDb250ZXh0LCBtYXRjaFBhdGggfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24gfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBCcm93c2VyUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSGFzaFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgcmVzb2x2ZVRvTG9jYXRpb24gPSBmdW5jdGlvbiByZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwiZnVuY3Rpb25cIiA/IHRvKGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG52YXIgbm9ybWFsaXplVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIG5vcm1hbGl6ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG5cbnZhciBmb3J3YXJkUmVmU2hpbSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcbiAgcmV0dXJuIEM7XG59O1xuXG52YXIgZm9yd2FyZFJlZiA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG5cbnZhciBMaW5rQW5jaG9yID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICBuYXZpZ2F0ZSA9IF9yZWYubmF2aWdhdGUsXG4gICAgICBfb25DbGljayA9IF9yZWYub25DbGljayxcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJpbm5lclJlZlwiLCBcIm5hdmlnYXRlXCIsIFwib25DbGlja1wiXSk7XG5cbiAgdmFyIHRhcmdldCA9IHJlc3QudGFyZ2V0O1xuXG4gIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKF9vbkNsaWNrKSBfb25DbGljayhldmVudCk7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aHJvdyBleDtcbiAgICAgIH1cblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAoIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgIXRhcmdldCB8fCB0YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIG5hdmlnYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgfSBlbHNlIHtcbiAgICBwcm9wcy5yZWYgPSBpbm5lclJlZjtcbiAgfVxuICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXG5cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgcHJvcHMpO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTGlua0FuY2hvci5kaXNwbGF5TmFtZSA9IFwiTGlua0FuY2hvclwiO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cblxuXG52YXIgTGluayA9IGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYyLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYyJGNvbXBvbmVudCA9IF9yZWYyLmNvbXBvbmVudCxcbiAgICAgIGNvbXBvbmVudCA9IF9yZWYyJGNvbXBvbmVudCA9PT0gdm9pZCAwID8gTGlua0FuY2hvciA6IF9yZWYyJGNvbXBvbmVudCxcbiAgICAgIHJlcGxhY2UgPSBfcmVmMi5yZXBsYWNlLFxuICAgICAgdG8gPSBfcmVmMi50byxcbiAgICAgIGlubmVyUmVmID0gX3JlZjIuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImNvbXBvbmVudFwiLCBcInJlcGxhY2VcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5O1xuICAgIHZhciBsb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pLCBjb250ZXh0LmxvY2F0aW9uKTtcbiAgICB2YXIgaHJlZiA9IGxvY2F0aW9uID8gaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKSA6IFwiXCI7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaHJlZjogaHJlZixcbiAgICAgIG5hdmlnYXRlOiBmdW5jdGlvbiBuYXZpZ2F0ZSgpIHtcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gcmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pO1xuICAgICAgICB2YXIgbWV0aG9kID0gcmVwbGFjZSA/IGhpc3RvcnkucmVwbGFjZSA6IGhpc3RvcnkucHVzaDtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH1cbiAgICB9KTsgLy8gUmVhY3QgMTUgY29tcGF0XG5cblxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpO1xuICB9KTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciB0b1R5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuZnVuY10pO1xuICB2YXIgcmVmVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGN1cnJlbnQ6IFByb3BUeXBlcy5hbnlcbiAgfSldKTtcbiAgTGluay5kaXNwbGF5TmFtZSA9IFwiTGlua1wiO1xuICBMaW5rLnByb3BUeXBlcyA9IHtcbiAgICBpbm5lclJlZjogcmVmVHlwZSxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IHRvVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBmb3J3YXJkUmVmU2hpbSQxID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmJDEgPSBSZWFjdC5mb3J3YXJkUmVmO1xuXG5pZiAodHlwZW9mIGZvcndhcmRSZWYkMSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmJDEgPSBmb3J3YXJkUmVmU2hpbSQxO1xufVxuXG5mdW5jdGlvbiBqb2luQ2xhc3NuYW1lcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGNsYXNzbmFtZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgY2xhc3NuYW1lc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBjbGFzc25hbWVzLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpO1xuICB9KS5qb2luKFwiIFwiKTtcbn1cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cblxuXG52YXIgTmF2TGluayA9IGZvcndhcmRSZWYkMShmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBfcmVmJGFyaWFDdXJyZW50ID0gX3JlZltcImFyaWEtY3VycmVudFwiXSxcbiAgICAgIGFyaWFDdXJyZW50ID0gX3JlZiRhcmlhQ3VycmVudCA9PT0gdm9pZCAwID8gXCJwYWdlXCIgOiBfcmVmJGFyaWFDdXJyZW50LFxuICAgICAgX3JlZiRhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYkYWN0aXZlQ2xhc3NOYW1lID09PSB2b2lkIDAgPyBcImFjdGl2ZVwiIDogX3JlZiRhY3RpdmVDbGFzc05hbWUsXG4gICAgICBhY3RpdmVTdHlsZSA9IF9yZWYuYWN0aXZlU3R5bGUsXG4gICAgICBjbGFzc05hbWVQcm9wID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICBpc0FjdGl2ZVByb3AgPSBfcmVmLmlzQWN0aXZlLFxuICAgICAgbG9jYXRpb25Qcm9wID0gX3JlZi5sb2NhdGlvbixcbiAgICAgIHNlbnNpdGl2ZSA9IF9yZWYuc2Vuc2l0aXZlLFxuICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICBzdHlsZVByb3AgPSBfcmVmLnN0eWxlLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImFyaWEtY3VycmVudFwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZXhhY3RcIiwgXCJpc0FjdGl2ZVwiLCBcImxvY2F0aW9uXCIsIFwic2Vuc2l0aXZlXCIsIFwic3RyaWN0XCIsIFwic3R5bGVcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxOYXZMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbiksIGN1cnJlbnRMb2NhdGlvbik7XG4gICAgdmFyIHBhdGggPSB0b0xvY2F0aW9uLnBhdGhuYW1lOyAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuXG4gICAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgICB2YXIgbWF0Y2ggPSBlc2NhcGVkUGF0aCA/IG1hdGNoUGF0aChjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUsIHtcbiAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgICAgZXhhY3Q6IGV4YWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmUsXG4gICAgICBzdHJpY3Q6IHN0cmljdFxuICAgIH0pIDogbnVsbDtcbiAgICB2YXIgaXNBY3RpdmUgPSAhIShpc0FjdGl2ZVByb3AgPyBpc0FjdGl2ZVByb3AobWF0Y2gsIGN1cnJlbnRMb2NhdGlvbikgOiBtYXRjaCk7XG4gICAgdmFyIGNsYXNzTmFtZSA9IGlzQWN0aXZlID8gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lUHJvcCwgYWN0aXZlQ2xhc3NOYW1lKSA6IGNsYXNzTmFtZVByb3A7XG4gICAgdmFyIHN0eWxlID0gaXNBY3RpdmUgPyBfZXh0ZW5kcyh7fSwgc3R5bGVQcm9wLCB7fSwgYWN0aXZlU3R5bGUpIDogc3R5bGVQcm9wO1xuXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe1xuICAgICAgXCJhcmlhLWN1cnJlbnRcIjogaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQgfHwgbnVsbCxcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgc3R5bGU6IHN0eWxlLFxuICAgICAgdG86IHRvTG9jYXRpb25cbiAgICB9LCByZXN0KTsgLy8gUmVhY3QgMTUgY29tcGF0XG5cblxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSQxICE9PSBmb3J3YXJkUmVmJDEpIHtcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTmF2TGluay5kaXNwbGF5TmFtZSA9IFwiTmF2TGlua1wiO1xuICB2YXIgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcInBhZ2VcIiwgXCJzdGVwXCIsIFwibG9jYXRpb25cIiwgXCJkYXRlXCIsIFwidGltZVwiLCBcInRydWVcIl0pO1xuICBOYXZMaW5rLnByb3BUeXBlcyA9IF9leHRlbmRzKHt9LCBMaW5rLnByb3BUeXBlcywge1xuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50VHlwZSxcbiAgICBhY3RpdmVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pO1xufVxuXG5leHBvcnQgeyBCcm93c2VyUm91dGVyLCBIYXNoUm91dGVyLCBMaW5rLCBOYXZMaW5rIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXItZG9tLmpzLm1hcFxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuZnVuY3Rpb24gSGVhZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxoZWFkZXI+XG4gICAgICAgICAgICA8bmF2PlxuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPjxMaW5rIHRvPVwiL1wiPkhPTUU8L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPjxMaW5rIHRvPXtgL2FkbWluYH0gPkFETUlOPC9MaW5rPjwvbGk+XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvbmF2PlxuICAgICAgICA8L2hlYWRlcj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBOYXYoKSB7XG5cbiAgICBjb25zdCBoYW5kbGVDbGlja01lbnUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudS1jb250YWluZXInKTtcbiAgICAgICAgbWVudS5zdHlsZS5yaWdodCA9ICcwJztcbiAgICB9XG5cbiAgICBjb25zdCBoYW5kbGVDbGlja1Jlc2VydmF0aW9uID0gKCkgPT4ge1xuICAgICAgICBjb25zdCByZXNlcnZhdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXNlcnZhdGlvbicpO1xuICAgICAgICByZXNlcnZhdGlvbi5zdHlsZS5yaWdodCA9ICcwJztcbiAgICB9XG5cblxuICAgIHJldHVybiAoXG4gICAgICAgIDx1bCBjbGFzc05hbWU9XCJzaWRlLW5hdlwiPlxuICAgICAgICAgICAgPGxpIG9uQ2xpY2s9e2hhbmRsZUNsaWNrTWVudX0+TUVOVTwvbGk+XG4gICAgICAgICAgICA8bGkgb25DbGljaz17aGFuZGxlQ2xpY2tSZXNlcnZhdGlvbn0+UkVTRVJWQVRJT048L2xpPlxuICAgICAgICAgICAgPGxpPkxPQ0FUSU9OPC9saT5cbiAgICAgICAgICAgIDxsaT5BQk9VVDwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBOYXY7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gQWRtaW4oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGgxPkFkbWluIHBhZ2U8L2gxPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgQWRtaW47IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjE2NWEyZmUyYzQ2ZTIyODU3ZDY1NDUwYzE3OTY2ZDMzLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIyOGYyM2NiMzRjM2Q3YzU4NTE1N2ZkYjk3M2EzNTBkOC5wbmdcIjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IExvZ28gZnJvbSAnLi9pbWFnZXMvc2FjaGFsLXN1Yi5wbmcnO1xuXG5mdW5jdGlvbiBNZW51KCkge1xuXG4gICAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudS1jb250YWluZXInKTtcbiAgICAgICAgbWVudS5zdHlsZS5yaWdodCA9ICctMzAwMHB4JztcblxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtZW51LWNvbnRhaW5lcic+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWVudSc+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Nsb3NlJyBvbkNsaWNrPXtoYW5kbGVDbGlja30+JiMyMTU7PC9kaXY+XG4gICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9XCJsb2dvXCIgc3JjPXtMb2dvfSAvPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtZW51MSc+XG4gICAgICAgICAgICAgICAgICAgIDxoMj5MdW5jaCBDb3Vyc2U8L2gyPlxuICAgICAgICAgICAgICAgICAgICA8cD40NUNBRCBwcDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlN1bGp1a3NpbShBbXVzZS1ib3VjaGUpPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgPHA+Q2hlcnJ5IHRvbWF0byBtYXJpbmF0ZWQgaW4gPGJyIC8+IGZlcm1lbnRlZCBrb3JlYW4gd2lsZCByYXNwYmVycnkgc2F1Y2U8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxoMz5KdWtzYW5nKFBvcnJpZGdlKTwvaDM+XG4gICAgICAgICAgICAgICAgICAgIDxwPlBvcnJpZGdlIHdpdGggc3ByaW5nIGdyZWVucyA8YnIgLz4gJmFtcDsgPGJyIC8+IFNlYXNvbmFsIHdhdGVyeSBraW1jaGk8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxoMz5TYW5nbWkoU2FsYWQgb3IgQ29sZCBQcmVwYXJhdGlvbik8L2gzPlxuICAgICAgICAgICAgICAgICAgICA8cD5Ub2Z1IEJhbGwgd2l0aCBzcHJpbmcgZ3JlZW5zIDxiciAvPiAmYW1wOyA8YnIgLz4gU2Vhc29uYWwgZ3JlZW5zIHdpdGggbXVuZ2JlYW4gamVsbHkgc2FsYWQ8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxoMz5JcGdhc2ltKERlc3NlcnQpPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgPHA+U3ByaW5nIG11Z3dvcnQgdGVhIDxiciAvPiZhbXA7IDxiciAvPktvcmVhbiB0cmFkaXRpb25hbCBmcnVpdHMgamVsbHk8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21lbnUyJz5cbiAgICAgICAgICAgICAgICAgICAgPGgyPkRpbm5lciBDb3Vyc2U8L2gyPlxuICAgICAgICAgICAgICAgICAgICA8cD41NUNBRCBwcDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlN1bGp1a3NpbShBbXVzZS1ib3VjaGUpPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgPHA+VGVtcGxlIHJlY2lwZSB2ZWdlLWNoaXBzIDxiciAvPiZhbXA7PGJyIC8+IEZlcm1lbnRlZCBQaWNrbHkgQXNoIHBlcHBlciBUZWE8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxoMz5KdWtzYW5nKFBvcnJpZGdlKTwvaDM+XG4gICAgICAgICAgICAgICAgICAgIDxwPlBvcnJpZGdlIHdpdGggc3ByaW5nIGdyZWVucyA8YnIgLz4mYW1wOyA8YnIgLz5TZWFzb25hbCB3YXRlcnkga2ltY2hpPC9wPlxuICAgICAgICAgICAgICAgICAgICA8aDM+U2FuZ21pKFNhbGFkIG9yIENvbGQgUHJlcGFyYXRpb24pPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgPHA+VG9mdSBCYWxsIHdpdGggc3ByaW5nIGdyZWVucyA8YnIgLz4mYW1wOzxiciAvPiBTZWFzb25hbCBncmVlbnMgd2l0aCBtdW5nYmVhbiBqZWxseSBzYWxhZDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPGgzPklwZ2FzaW0oRGVzc2VydCk8L2gzPlxuICAgICAgICAgICAgICAgICAgICA8cD5TcHJpbmcgbXVnd29ydCB0ZWEgPGJyIC8+JmFtcDsgPGJyIC8+S29yZWFuIHRyYWRpdGlvbmFsIGZydWl0cyBqZWxseTwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSdtZW51LWZvb3Rlcic+KlZBVCBpbmNsdWRlZDwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBNZW51OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lcmdlQ2xhc3NOYW1lcygpIHtcbiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykucmVkdWNlKGZ1bmN0aW9uIChjbGFzc0xpc3QsIGFyZykge1xuICAgIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3RyaW5nJyB8fCBBcnJheS5pc0FycmF5KGFyZykgPyBjbGFzc0xpc3QuY29uY2F0KGFyZykgOiBjbGFzc0xpc3Q7XG4gIH0sIFtdKS5maWx0ZXIoQm9vbGVhbikuam9pbignICcpO1xufSIsImltcG9ydCBvbmNlIGZyb20gJ2xvZGFzaC5vbmNlJztcblxuZnVuY3Rpb24gZmlsdGVyRHVwbGljYXRlcyhhcnIpIHtcbiAgcmV0dXJuIGFyci5maWx0ZXIoZnVuY3Rpb24gKGVsLCBpbmRleCwgc2VsZikge1xuICAgIHJldHVybiBzZWxmLmluZGV4T2YoZWwpID09PSBpbmRleDtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGZpeExvd2VyY2FzZVByb3BlcnRpZXMoYXJyKSB7XG4gIHJldHVybiBhcnIubWFwKGZ1bmN0aW9uIChlbCkge1xuICAgIGlmICghZWwgfHwgZWwuaW5kZXhPZignLScpID09PSAtMSB8fCBlbC50b0xvd2VyQ2FzZSgpICE9PSBlbCkge1xuICAgICAgcmV0dXJuIGVsO1xuICAgIH1cblxuICAgIHZhciBzcGxpdEVsID0gZWwuc3BsaXQoJy0nKTtcbiAgICByZXR1cm4gXCJcIi5jb25jYXQoc3BsaXRFbFswXSwgXCItXCIpLmNvbmNhdChzcGxpdEVsWzFdLnRvVXBwZXJDYXNlKCkpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0VXNlckxvY2FsZXNJbnRlcm5hbCgpIHtcbiAgdmFyIGxhbmd1YWdlTGlzdCA9IFtdO1xuXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLmxhbmd1YWdlcykge1xuICAgICAgbGFuZ3VhZ2VMaXN0ID0gbGFuZ3VhZ2VMaXN0LmNvbmNhdCh3aW5kb3cubmF2aWdhdG9yLmxhbmd1YWdlcyk7XG4gICAgfVxuXG4gICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IubGFuZ3VhZ2UpIHtcbiAgICAgIGxhbmd1YWdlTGlzdC5wdXNoKHdpbmRvdy5uYXZpZ2F0b3IubGFuZ3VhZ2UpO1xuICAgIH1cblxuICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLnVzZXJMYW5ndWFnZSkge1xuICAgICAgbGFuZ3VhZ2VMaXN0LnB1c2god2luZG93Lm5hdmlnYXRvci51c2VyTGFuZ3VhZ2UpO1xuICAgIH1cblxuICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLmJyb3dzZXJMYW5ndWFnZSkge1xuICAgICAgbGFuZ3VhZ2VMaXN0LnB1c2god2luZG93Lm5hdmlnYXRvci5icm93c2VyTGFuZ3VhZ2UpO1xuICAgIH1cblxuICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLnN5c3RlbUxhbmd1YWdlKSB7XG4gICAgICBsYW5ndWFnZUxpc3QucHVzaCh3aW5kb3cubmF2aWdhdG9yLnN5c3RlbUxhbmd1YWdlKTtcbiAgICB9XG4gIH1cblxuICBsYW5ndWFnZUxpc3QucHVzaCgnZW4tVVMnKTsgLy8gRmFsbGJhY2tcblxuICByZXR1cm4gZml4TG93ZXJjYXNlUHJvcGVydGllcyhmaWx0ZXJEdXBsaWNhdGVzKGxhbmd1YWdlTGlzdCkpO1xufVxuXG5leHBvcnQgdmFyIGdldFVzZXJMb2NhbGVzID0gb25jZShnZXRVc2VyTG9jYWxlc0ludGVybmFsKTtcblxuZnVuY3Rpb24gZ2V0VXNlckxvY2FsZUludGVybmFsKCkge1xuICByZXR1cm4gZ2V0VXNlckxvY2FsZXMoKVswXTtcbn1cblxuZXhwb3J0IHZhciBnZXRVc2VyTG9jYWxlID0gb25jZShnZXRVc2VyTG9jYWxlSW50ZXJuYWwpO1xuZXhwb3J0IGRlZmF1bHQgZ2V0VXNlckxvY2FsZTsiLCIvKipcbiAqIFV0aWxzXG4gKi9cbmZ1bmN0aW9uIG1ha2VHZXRFZGdlT2ZOZWlnaGJvcihnZXRQZXJpb2QsIGdldEVkZ2VPZlBlcmlvZCwgZGVmYXVsdE9mZnNldCkge1xuICByZXR1cm4gZnVuY3Rpb24gbWFrZUdldEVkZ2VPZk5laWdoYm9ySW50ZXJuYWwoZGF0ZSkge1xuICAgIHZhciBvZmZzZXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGRlZmF1bHRPZmZzZXQ7XG4gICAgdmFyIHByZXZpb3VzUGVyaW9kID0gZ2V0UGVyaW9kKGRhdGUpICsgb2Zmc2V0O1xuICAgIHJldHVybiBnZXRFZGdlT2ZQZXJpb2QocHJldmlvdXNQZXJpb2QpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBtYWtlR2V0RW5kKGdldEJlZ2luT2ZOZXh0UGVyaW9kKSB7XG4gIHJldHVybiBmdW5jdGlvbiBtYWtlR2V0RW5kSW50ZXJuYWwoZGF0ZSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShnZXRCZWdpbk9mTmV4dFBlcmlvZChkYXRlKS5nZXRUaW1lKCkgLSAxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbWFrZUdldFJhbmdlKGZ1bmN0aW9ucykge1xuICByZXR1cm4gZnVuY3Rpb24gbWFrZUdldFJhbmdlSW50ZXJuYWwoZGF0ZSkge1xuICAgIHJldHVybiBmdW5jdGlvbnMubWFwKGZ1bmN0aW9uIChmbikge1xuICAgICAgcmV0dXJuIGZuKGRhdGUpO1xuICAgIH0pO1xuICB9O1xufVxuLyoqXG4gKiBTaW1wbGUgZ2V0dGVycyAtIGdldHRpbmcgYSBwcm9wZXJ0eSBvZiBhIGdpdmVuIHBvaW50IGluIHRpbWVcbiAqL1xuXG4vKipcbiAqIEdldHMgeWVhciBmcm9tIGRhdGUuXG4gKlxuICogQHBhcmFtIHtEYXRlfG51bWJlcnxzdHJpbmd9IGRhdGUgRGF0ZSB0byBnZXQgeWVhciBmcm9tLlxuICovXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFllYXIoZGF0ZSkge1xuICBpZiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBkYXRlID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBkYXRlO1xuICB9XG5cbiAgdmFyIHllYXIgPSBwYXJzZUludChkYXRlLCAxMCk7XG5cbiAgaWYgKHR5cGVvZiBkYXRlID09PSAnc3RyaW5nJyAmJiAhaXNOYU4oeWVhcikpIHtcbiAgICByZXR1cm4geWVhcjtcbiAgfVxuXG4gIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZXQgeWVhciBmcm9tIGRhdGU6IFwiLmNvbmNhdChkYXRlLCBcIi5cIikpO1xufVxuLyoqXG4gKiBHZXRzIG1vbnRoIGZyb20gZGF0ZS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV9IGRhdGUgRGF0ZSB0byBnZXQgbW9udGggZnJvbS5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TW9udGgoZGF0ZSkge1xuICBpZiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRNb250aCgpO1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGdldCBtb250aCBmcm9tIGRhdGU6IFwiLmNvbmNhdChkYXRlLCBcIi5cIikpO1xufVxuLyoqXG4gKiBHZXRzIGh1bWFuLXJlYWRhYmxlIG1vbnRoIGZyb20gZGF0ZS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV9IGRhdGUgRGF0ZSB0byBnZXQgaHVtYW4tcmVhZGFibGUgbW9udGggZnJvbS5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TW9udGhIdW1hbihkYXRlKSB7XG4gIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldE1vbnRoKCkgKyAxO1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGdldCBodW1hbi1yZWFkYWJsZSBtb250aCBmcm9tIGRhdGU6IFwiLmNvbmNhdChkYXRlLCBcIi5cIikpO1xufVxuLyoqXG4gKiBHZXRzIGh1bWFuLXJlYWRhYmxlIGRheSBvZiB0aGUgbW9udGggZnJvbSBkYXRlLlxuICpcbiAqIEBwYXJhbSB7RGF0ZX0gZGF0ZSBEYXRlIHRvIGdldCBkYXkgb2YgdGhlIG1vbnRoIGZyb20uXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERhdGUoZGF0ZSkge1xuICBpZiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXREYXRlKCk7XG4gIH1cblxuICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZ2V0IHllYXIgZnJvbSBkYXRlOiBcIi5jb25jYXQoZGF0ZSwgXCIuXCIpKTtcbn1cbi8qKlxuICogR2V0cyBob3VycyBmcm9tIGRhdGUuXG4gKlxuICogQHBhcmFtIHtEYXRlfHN0cmluZ30gZGF0ZSBEYXRlIHRvIGdldCBob3VycyBmcm9tLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIb3VycyhkYXRlKSB7XG4gIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldEhvdXJzKCk7XG4gIH1cblxuICBpZiAodHlwZW9mIGRhdGUgPT09ICdzdHJpbmcnKSB7XG4gICAgdmFyIGRhdGVQaWVjZXMgPSBkYXRlLnNwbGl0KCc6Jyk7XG5cbiAgICBpZiAoZGF0ZVBpZWNlcy5sZW5ndGggPj0gMikge1xuICAgICAgdmFyIGhvdXJzU3RyaW5nID0gZGF0ZVBpZWNlc1swXTtcbiAgICAgIHZhciBob3VycyA9IHBhcnNlSW50KGhvdXJzU3RyaW5nLCAxMCk7XG5cbiAgICAgIGlmICghaXNOYU4oaG91cnMpKSB7XG4gICAgICAgIHJldHVybiBob3VycztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZ2V0IGhvdXJzIGZyb20gZGF0ZTogXCIuY29uY2F0KGRhdGUsIFwiLlwiKSk7XG59XG4vKipcbiAqIEdldHMgbWludXRlcyBmcm9tIGRhdGUuXG4gKlxuICogQHBhcmFtIHtEYXRlfHN0cmluZ30gZGF0ZSBEYXRlIHRvIGdldCBtaW51dGVzIGZyb20uXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE1pbnV0ZXMoZGF0ZSkge1xuICBpZiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRNaW51dGVzKCk7XG4gIH1cblxuICBpZiAodHlwZW9mIGRhdGUgPT09ICdzdHJpbmcnKSB7XG4gICAgdmFyIGRhdGVQaWVjZXMgPSBkYXRlLnNwbGl0KCc6Jyk7XG5cbiAgICBpZiAoZGF0ZVBpZWNlcy5sZW5ndGggPj0gMikge1xuICAgICAgdmFyIG1pbnV0ZXNTdHJpbmcgPSBkYXRlUGllY2VzWzFdIHx8IDA7XG4gICAgICB2YXIgbWludXRlcyA9IHBhcnNlSW50KG1pbnV0ZXNTdHJpbmcsIDEwKTtcblxuICAgICAgaWYgKCFpc05hTihtaW51dGVzKSkge1xuICAgICAgICByZXR1cm4gbWludXRlcztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZ2V0IG1pbnV0ZXMgZnJvbSBkYXRlOiBcIi5jb25jYXQoZGF0ZSwgXCIuXCIpKTtcbn1cbi8qKlxuICogR2V0cyBzZWNvbmRzIGZyb20gZGF0ZS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8c3RyaW5nfSBkYXRlIERhdGUgdG8gZ2V0IHNlY29uZHMgZnJvbS5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2Vjb25kcyhkYXRlKSB7XG4gIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldFNlY29uZHMoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZGF0ZSA9PT0gJ3N0cmluZycpIHtcbiAgICB2YXIgZGF0ZVBpZWNlcyA9IGRhdGUuc3BsaXQoJzonKTtcblxuICAgIGlmIChkYXRlUGllY2VzLmxlbmd0aCA+PSAyKSB7XG4gICAgICB2YXIgc2Vjb25kc1N0cmluZyA9IGRhdGVQaWVjZXNbMl0gfHwgMDtcbiAgICAgIHZhciBzZWNvbmRzID0gcGFyc2VJbnQoc2Vjb25kc1N0cmluZywgMTApO1xuXG4gICAgICBpZiAoIWlzTmFOKHNlY29uZHMpKSB7XG4gICAgICAgIHJldHVybiBzZWNvbmRzO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZXQgc2Vjb25kcyBmcm9tIGRhdGU6IFwiLmNvbmNhdChkYXRlLCBcIi5cIikpO1xufVxuLyoqXG4gKiBDZW50dXJ5XG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENlbnR1cnlTdGFydChkYXRlKSB7XG4gIHZhciB5ZWFyID0gZ2V0WWVhcihkYXRlKTtcbiAgdmFyIGNlbnR1cnlTdGFydFllYXIgPSB5ZWFyICsgKC15ZWFyICsgMSkgJSAxMDA7XG4gIHZhciBjZW50dXJ5U3RhcnREYXRlID0gbmV3IERhdGUoKTtcbiAgY2VudHVyeVN0YXJ0RGF0ZS5zZXRGdWxsWWVhcihjZW50dXJ5U3RhcnRZZWFyLCAwLCAxKTtcbiAgY2VudHVyeVN0YXJ0RGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgcmV0dXJuIGNlbnR1cnlTdGFydERhdGU7XG59XG5leHBvcnQgdmFyIGdldFByZXZpb3VzQ2VudHVyeVN0YXJ0ID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yKGdldFllYXIsIGdldENlbnR1cnlTdGFydCwgLTEwMCk7XG5leHBvcnQgdmFyIGdldE5leHRDZW50dXJ5U3RhcnQgPSBtYWtlR2V0RWRnZU9mTmVpZ2hib3IoZ2V0WWVhciwgZ2V0Q2VudHVyeVN0YXJ0LCAxMDApO1xuZXhwb3J0IHZhciBnZXRDZW50dXJ5RW5kID0gbWFrZUdldEVuZChnZXROZXh0Q2VudHVyeVN0YXJ0KTtcbmV4cG9ydCB2YXIgZ2V0UHJldmlvdXNDZW50dXJ5RW5kID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yKGdldFllYXIsIGdldENlbnR1cnlFbmQsIC0xMDApO1xuZXhwb3J0IHZhciBnZXROZXh0Q2VudHVyeUVuZCA9IG1ha2VHZXRFZGdlT2ZOZWlnaGJvcihnZXRZZWFyLCBnZXRDZW50dXJ5RW5kLCAxMDApO1xuZXhwb3J0IHZhciBnZXRDZW50dXJ5UmFuZ2UgPSBtYWtlR2V0UmFuZ2UoW2dldENlbnR1cnlTdGFydCwgZ2V0Q2VudHVyeUVuZF0pO1xuLyoqXG4gKiBEZWNhZGVcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVjYWRlU3RhcnQoZGF0ZSkge1xuICB2YXIgeWVhciA9IGdldFllYXIoZGF0ZSk7XG4gIHZhciBkZWNhZGVTdGFydFllYXIgPSB5ZWFyICsgKC15ZWFyICsgMSkgJSAxMDtcbiAgdmFyIGRlY2FkZVN0YXJ0RGF0ZSA9IG5ldyBEYXRlKCk7XG4gIGRlY2FkZVN0YXJ0RGF0ZS5zZXRGdWxsWWVhcihkZWNhZGVTdGFydFllYXIsIDAsIDEpO1xuICBkZWNhZGVTdGFydERhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIHJldHVybiBkZWNhZGVTdGFydERhdGU7XG59XG5leHBvcnQgdmFyIGdldFByZXZpb3VzRGVjYWRlU3RhcnQgPSBtYWtlR2V0RWRnZU9mTmVpZ2hib3IoZ2V0WWVhciwgZ2V0RGVjYWRlU3RhcnQsIC0xMCk7XG5leHBvcnQgdmFyIGdldE5leHREZWNhZGVTdGFydCA9IG1ha2VHZXRFZGdlT2ZOZWlnaGJvcihnZXRZZWFyLCBnZXREZWNhZGVTdGFydCwgMTApO1xuZXhwb3J0IHZhciBnZXREZWNhZGVFbmQgPSBtYWtlR2V0RW5kKGdldE5leHREZWNhZGVTdGFydCk7XG5leHBvcnQgdmFyIGdldFByZXZpb3VzRGVjYWRlRW5kID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yKGdldFllYXIsIGdldERlY2FkZUVuZCwgLTEwKTtcbmV4cG9ydCB2YXIgZ2V0TmV4dERlY2FkZUVuZCA9IG1ha2VHZXRFZGdlT2ZOZWlnaGJvcihnZXRZZWFyLCBnZXREZWNhZGVFbmQsIDEwKTtcbmV4cG9ydCB2YXIgZ2V0RGVjYWRlUmFuZ2UgPSBtYWtlR2V0UmFuZ2UoW2dldERlY2FkZVN0YXJ0LCBnZXREZWNhZGVFbmRdKTtcbi8qKlxuICogWWVhclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRZZWFyU3RhcnQoZGF0ZSkge1xuICB2YXIgeWVhciA9IGdldFllYXIoZGF0ZSk7XG4gIHZhciB5ZWFyU3RhcnREYXRlID0gbmV3IERhdGUoKTtcbiAgeWVhclN0YXJ0RGF0ZS5zZXRGdWxsWWVhcih5ZWFyLCAwLCAxKTtcbiAgeWVhclN0YXJ0RGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgcmV0dXJuIHllYXJTdGFydERhdGU7XG59XG5leHBvcnQgdmFyIGdldFByZXZpb3VzWWVhclN0YXJ0ID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yKGdldFllYXIsIGdldFllYXJTdGFydCwgLTEpO1xuZXhwb3J0IHZhciBnZXROZXh0WWVhclN0YXJ0ID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yKGdldFllYXIsIGdldFllYXJTdGFydCwgMSk7XG5leHBvcnQgdmFyIGdldFllYXJFbmQgPSBtYWtlR2V0RW5kKGdldE5leHRZZWFyU3RhcnQpO1xuZXhwb3J0IHZhciBnZXRQcmV2aW91c1llYXJFbmQgPSBtYWtlR2V0RWRnZU9mTmVpZ2hib3IoZ2V0WWVhciwgZ2V0WWVhckVuZCwgLTEpO1xuZXhwb3J0IHZhciBnZXROZXh0WWVhckVuZCA9IG1ha2VHZXRFZGdlT2ZOZWlnaGJvcihnZXRZZWFyLCBnZXRZZWFyRW5kLCAxKTtcbmV4cG9ydCB2YXIgZ2V0WWVhclJhbmdlID0gbWFrZUdldFJhbmdlKFtnZXRZZWFyU3RhcnQsIGdldFllYXJFbmRdKTtcbi8qKlxuICogTW9udGhcbiAqL1xuXG5mdW5jdGlvbiBtYWtlR2V0RWRnZU9mTmVpZ2hib3JNb250aChnZXRFZGdlT2ZQZXJpb2QsIGRlZmF1bHRPZmZzZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIG1ha2VHZXRFZGdlT2ZOZWlnaGJvck1vbnRoSW50ZXJuYWwoZGF0ZSkge1xuICAgIHZhciBvZmZzZXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGRlZmF1bHRPZmZzZXQ7XG4gICAgdmFyIHllYXIgPSBnZXRZZWFyKGRhdGUpO1xuICAgIHZhciBtb250aCA9IGdldE1vbnRoKGRhdGUpICsgb2Zmc2V0O1xuICAgIHZhciBwcmV2aW91c1BlcmlvZCA9IG5ldyBEYXRlKCk7XG4gICAgcHJldmlvdXNQZXJpb2Quc2V0RnVsbFllYXIoeWVhciwgbW9udGgsIDEpO1xuICAgIHByZXZpb3VzUGVyaW9kLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICAgIHJldHVybiBnZXRFZGdlT2ZQZXJpb2QocHJldmlvdXNQZXJpb2QpO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TW9udGhTdGFydChkYXRlKSB7XG4gIHZhciB5ZWFyID0gZ2V0WWVhcihkYXRlKTtcbiAgdmFyIG1vbnRoID0gZ2V0TW9udGgoZGF0ZSk7XG4gIHZhciBtb250aFN0YXJ0RGF0ZSA9IG5ldyBEYXRlKCk7XG4gIG1vbnRoU3RhcnREYXRlLnNldEZ1bGxZZWFyKHllYXIsIG1vbnRoLCAxKTtcbiAgbW9udGhTdGFydERhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIHJldHVybiBtb250aFN0YXJ0RGF0ZTtcbn1cbmV4cG9ydCB2YXIgZ2V0UHJldmlvdXNNb250aFN0YXJ0ID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yTW9udGgoZ2V0TW9udGhTdGFydCwgLTEpO1xuZXhwb3J0IHZhciBnZXROZXh0TW9udGhTdGFydCA9IG1ha2VHZXRFZGdlT2ZOZWlnaGJvck1vbnRoKGdldE1vbnRoU3RhcnQsIDEpO1xuZXhwb3J0IHZhciBnZXRNb250aEVuZCA9IG1ha2VHZXRFbmQoZ2V0TmV4dE1vbnRoU3RhcnQpO1xuZXhwb3J0IHZhciBnZXRQcmV2aW91c01vbnRoRW5kID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yTW9udGgoZ2V0TW9udGhFbmQsIC0xKTtcbmV4cG9ydCB2YXIgZ2V0TmV4dE1vbnRoRW5kID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yTW9udGgoZ2V0TW9udGhFbmQsIDEpO1xuZXhwb3J0IHZhciBnZXRNb250aFJhbmdlID0gbWFrZUdldFJhbmdlKFtnZXRNb250aFN0YXJ0LCBnZXRNb250aEVuZF0pO1xuLyoqXG4gKiBEYXlcbiAqL1xuXG5mdW5jdGlvbiBtYWtlR2V0RWRnZU9mTmVpZ2hib3JEYXkoZ2V0RWRnZU9mUGVyaW9kLCBkZWZhdWx0T2Zmc2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBtYWtlR2V0RWRnZU9mTmVpZ2hib3JEYXlJbnRlcm5hbChkYXRlKSB7XG4gICAgdmFyIG9mZnNldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdE9mZnNldDtcbiAgICB2YXIgeWVhciA9IGdldFllYXIoZGF0ZSk7XG4gICAgdmFyIG1vbnRoID0gZ2V0TW9udGgoZGF0ZSk7XG4gICAgdmFyIGRheSA9IGdldERhdGUoZGF0ZSkgKyBvZmZzZXQ7XG4gICAgdmFyIHByZXZpb3VzUGVyaW9kID0gbmV3IERhdGUoKTtcbiAgICBwcmV2aW91c1BlcmlvZC5zZXRGdWxsWWVhcih5ZWFyLCBtb250aCwgZGF5KTtcbiAgICBwcmV2aW91c1BlcmlvZC5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgICByZXR1cm4gZ2V0RWRnZU9mUGVyaW9kKHByZXZpb3VzUGVyaW9kKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERheVN0YXJ0KGRhdGUpIHtcbiAgdmFyIHllYXIgPSBnZXRZZWFyKGRhdGUpO1xuICB2YXIgbW9udGggPSBnZXRNb250aChkYXRlKTtcbiAgdmFyIGRheSA9IGdldERhdGUoZGF0ZSk7XG4gIHZhciBkYXlTdGFydERhdGUgPSBuZXcgRGF0ZSgpO1xuICBkYXlTdGFydERhdGUuc2V0RnVsbFllYXIoeWVhciwgbW9udGgsIGRheSk7XG4gIGRheVN0YXJ0RGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgcmV0dXJuIGRheVN0YXJ0RGF0ZTtcbn1cbmV4cG9ydCB2YXIgZ2V0UHJldmlvdXNEYXlTdGFydCA9IG1ha2VHZXRFZGdlT2ZOZWlnaGJvckRheShnZXREYXlTdGFydCwgLTEpO1xuZXhwb3J0IHZhciBnZXROZXh0RGF5U3RhcnQgPSBtYWtlR2V0RWRnZU9mTmVpZ2hib3JEYXkoZ2V0RGF5U3RhcnQsIDEpO1xuZXhwb3J0IHZhciBnZXREYXlFbmQgPSBtYWtlR2V0RW5kKGdldE5leHREYXlTdGFydCk7XG5leHBvcnQgdmFyIGdldFByZXZpb3VzRGF5RW5kID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yRGF5KGdldERheUVuZCwgLTEpO1xuZXhwb3J0IHZhciBnZXROZXh0RGF5RW5kID0gbWFrZUdldEVkZ2VPZk5laWdoYm9yRGF5KGdldERheUVuZCwgMSk7XG5leHBvcnQgdmFyIGdldERheVJhbmdlID0gbWFrZUdldFJhbmdlKFtnZXREYXlTdGFydCwgZ2V0RGF5RW5kXSk7XG4vKipcbiAqIE90aGVyXG4gKi9cblxuLyoqXG4gKiBSZXR1cm5zIGEgbnVtYmVyIG9mIGRheXMgaW4gYSBtb250aCBvZiBhIGdpdmVuIGRhdGUuXG4gKlxuICogQHBhcmFtIHtEYXRlfSBkYXRlIERhdGUuXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERheXNJbk1vbnRoKGRhdGUpIHtcbiAgcmV0dXJuIGdldERhdGUoZ2V0TW9udGhFbmQoZGF0ZSkpO1xufVxuXG5mdW5jdGlvbiBwYWRTdGFydChudW0pIHtcbiAgdmFyIHZhbCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMjtcbiAgdmFyIG51bVN0ciA9IFwiXCIuY29uY2F0KG51bSk7XG5cbiAgaWYgKG51bVN0ci5sZW5ndGggPj0gdmFsKSB7XG4gICAgcmV0dXJuIG51bTtcbiAgfVxuXG4gIHJldHVybiBcIjAwMDBcIi5jb25jYXQobnVtU3RyKS5zbGljZSgtdmFsKTtcbn1cbi8qKlxuICogUmV0dXJucyBsb2NhbCBob3VycyBhbmQgbWludXRlcyAoaGg6bW0pLlxuICovXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEhvdXJzTWludXRlcyhkYXRlKSB7XG4gIHZhciBob3VycyA9IHBhZFN0YXJ0KGdldEhvdXJzKGRhdGUpKTtcbiAgdmFyIG1pbnV0ZXMgPSBwYWRTdGFydChnZXRNaW51dGVzKGRhdGUpKTtcbiAgcmV0dXJuIFwiXCIuY29uY2F0KGhvdXJzLCBcIjpcIikuY29uY2F0KG1pbnV0ZXMpO1xufVxuLyoqXG4gKiBSZXR1cm5zIGxvY2FsIGhvdXJzLCBtaW51dGVzIGFuZCBzZWNvbmRzIChoaDptbTpzcykuXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEhvdXJzTWludXRlc1NlY29uZHMoZGF0ZSkge1xuICB2YXIgaG91cnMgPSBwYWRTdGFydChnZXRIb3VycyhkYXRlKSk7XG4gIHZhciBtaW51dGVzID0gcGFkU3RhcnQoZ2V0TWludXRlcyhkYXRlKSk7XG4gIHZhciBzZWNvbmRzID0gcGFkU3RhcnQoZ2V0U2Vjb25kcyhkYXRlKSk7XG4gIHJldHVybiBcIlwiLmNvbmNhdChob3VycywgXCI6XCIpLmNvbmNhdChtaW51dGVzLCBcIjpcIikuY29uY2F0KHNlY29uZHMpO1xufVxuLyoqXG4gKiBSZXR1cm5zIGxvY2FsIG1vbnRoIGluIElTTy1saWtlIGZvcm1hdCAoWVlZWS1NTSkuXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldElTT0xvY2FsTW9udGgoZGF0ZSkge1xuICB2YXIgeWVhciA9IHBhZFN0YXJ0KGdldFllYXIoZGF0ZSksIDQpO1xuICB2YXIgbW9udGggPSBwYWRTdGFydChnZXRNb250aEh1bWFuKGRhdGUpKTtcbiAgcmV0dXJuIFwiXCIuY29uY2F0KHllYXIsIFwiLVwiKS5jb25jYXQobW9udGgpO1xufVxuLyoqXG4gKiBSZXR1cm5zIGxvY2FsIGRhdGUgaW4gSVNPLWxpa2UgZm9ybWF0IChZWVlZLU1NLUREKS5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SVNPTG9jYWxEYXRlKGRhdGUpIHtcbiAgdmFyIHllYXIgPSBwYWRTdGFydChnZXRZZWFyKGRhdGUpLCA0KTtcbiAgdmFyIG1vbnRoID0gcGFkU3RhcnQoZ2V0TW9udGhIdW1hbihkYXRlKSk7XG4gIHZhciBkYXkgPSBwYWRTdGFydChnZXREYXRlKGRhdGUpKTtcbiAgcmV0dXJuIFwiXCIuY29uY2F0KHllYXIsIFwiLVwiKS5jb25jYXQobW9udGgsIFwiLVwiKS5jb25jYXQoZGF5KTtcbn1cbi8qKlxuICogUmV0dXJucyBsb2NhbCBkYXRlICYgdGltZSBpbiBJU08tbGlrZSBmb3JtYXQgKFlZWVktTU0tRERUaGg6bW06c3MpLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJU09Mb2NhbERhdGVUaW1lKGRhdGUpIHtcbiAgcmV0dXJuIFwiXCIuY29uY2F0KGdldElTT0xvY2FsRGF0ZShkYXRlKSwgXCJUXCIpLmNvbmNhdChnZXRIb3Vyc01pbnV0ZXNTZWNvbmRzKGRhdGUpKTtcbn0iLCJ2YXIgX0NBTEVOREFSX1RZUEVfTE9DQUxFO1xuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmV4cG9ydCB2YXIgQ0FMRU5EQVJfVFlQRVMgPSB7XG4gIEFSQUJJQzogJ0FyYWJpYycsXG4gIEhFQlJFVzogJ0hlYnJldycsXG4gIElTT184NjAxOiAnSVNPIDg2MDEnLFxuICBVUzogJ1VTJ1xufTtcbmV4cG9ydCB2YXIgQ0FMRU5EQVJfVFlQRV9MT0NBTEVTID0gKF9DQUxFTkRBUl9UWVBFX0xPQ0FMRSA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX0NBTEVOREFSX1RZUEVfTE9DQUxFLCBDQUxFTkRBUl9UWVBFUy5VUywgWydlbi1DQScsICdlbi1VUycsICdlcy1BUicsICdlcy1CTycsICdlcy1DTCcsICdlcy1DTycsICdlcy1DUicsICdlcy1ETycsICdlcy1FQycsICdlcy1HVCcsICdlcy1ITicsICdlcy1NWCcsICdlcy1OSScsICdlcy1QQScsICdlcy1QRScsICdlcy1QUicsICdlcy1TVicsICdlcy1WRScsICdwdC1CUiddKSwgX2RlZmluZVByb3BlcnR5KF9DQUxFTkRBUl9UWVBFX0xPQ0FMRSwgQ0FMRU5EQVJfVFlQRVMuQVJBQklDLCBbLy8gYXItTEIsIGFyLU1BIGludGVudGlvbmFsbHkgbWlzc2luZ1xuJ2FyJywgJ2FyLUFFJywgJ2FyLUJIJywgJ2FyLURaJywgJ2FyLUVHJywgJ2FyLUlRJywgJ2FyLUpPJywgJ2FyLUtXJywgJ2FyLUxZJywgJ2FyLU9NJywgJ2FyLVFBJywgJ2FyLVNBJywgJ2FyLVNEJywgJ2FyLVNZJywgJ2FyLVlFJywgJ2R2JywgJ2R2LU1WJywgJ3BzJywgJ3BzLUFSJ10pLCBfZGVmaW5lUHJvcGVydHkoX0NBTEVOREFSX1RZUEVfTE9DQUxFLCBDQUxFTkRBUl9UWVBFUy5IRUJSRVcsIFsnaGUnLCAnaGUtSUwnXSksIF9DQUxFTkRBUl9UWVBFX0xPQ0FMRSk7XG5leHBvcnQgdmFyIFdFRUtEQVlTID0gX3RvQ29uc3VtYWJsZUFycmF5KEFycmF5KDcpKS5tYXAoZnVuY3Rpb24gKGVsLCBpbmRleCkge1xuICByZXR1cm4gaW5kZXg7XG59KTsiLCJpbXBvcnQgZ2V0VXNlckxvY2FsZSBmcm9tICdnZXQtdXNlci1sb2NhbGUnO1xuXG5mdW5jdGlvbiBnZXRGb3JtYXR0ZXIob3B0aW9ucykge1xuICByZXR1cm4gZnVuY3Rpb24gKGxvY2FsZSwgZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSB8fCBnZXRVc2VyTG9jYWxlKCksIG9wdGlvbnMpO1xuICB9O1xufVxuLyoqXG4gKiBDaGFuZ2VzIHRoZSBob3VyIGluIGEgRGF0ZSB0byBlbnN1cmUgcmlnaHQgZGF0ZSBmb3JtYXR0aW5nIGV2ZW4gaWYgRFNUIGlzIG1lc3NlZCB1cC5cbiAqIFdvcmthcm91bmQgZm9yIGJ1ZyBpbiBXZWJLaXQgYW5kIEZpcmVmb3ggd2l0aCBoaXN0b3JpY2FsIGRhdGVzLlxuICogRm9yIG1vcmUgZGV0YWlscywgc2VlOlxuICogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NzUwNDY1XG4gKiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzg1NjQzXG4gKlxuICogQHBhcmFtIHtEYXRlfSBkYXRlIERhdGUuXG4gKi9cblxuXG5mdW5jdGlvbiB0b1NhZmVIb3VyKGRhdGUpIHtcbiAgdmFyIHNhZmVEYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gIHJldHVybiBuZXcgRGF0ZShzYWZlRGF0ZS5zZXRIb3VycygxMikpO1xufVxuXG5mdW5jdGlvbiBnZXRTYWZlRm9ybWF0dGVyKG9wdGlvbnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChsb2NhbGUsIGRhdGUpIHtcbiAgICByZXR1cm4gZ2V0Rm9ybWF0dGVyKG9wdGlvbnMpKGxvY2FsZSwgdG9TYWZlSG91cihkYXRlKSk7XG4gIH07XG59XG5cbnZhciBmb3JtYXREYXRlT3B0aW9ucyA9IHtcbiAgZGF5OiAnbnVtZXJpYycsXG4gIG1vbnRoOiAnbnVtZXJpYycsXG4gIHllYXI6ICdudW1lcmljJ1xufTtcbnZhciBmb3JtYXREYXlPcHRpb25zID0ge1xuICBkYXk6ICdudW1lcmljJ1xufTtcbnZhciBmb3JtYXRMb25nRGF0ZU9wdGlvbnMgPSB7XG4gIGRheTogJ251bWVyaWMnLFxuICBtb250aDogJ2xvbmcnLFxuICB5ZWFyOiAnbnVtZXJpYydcbn07XG52YXIgZm9ybWF0TW9udGhPcHRpb25zID0ge1xuICBtb250aDogJ2xvbmcnXG59O1xudmFyIGZvcm1hdE1vbnRoWWVhck9wdGlvbnMgPSB7XG4gIG1vbnRoOiAnbG9uZycsXG4gIHllYXI6ICdudW1lcmljJ1xufTtcbnZhciBmb3JtYXRTaG9ydFdlZWtkYXlPcHRpb25zID0ge1xuICB3ZWVrZGF5OiAnc2hvcnQnXG59O1xudmFyIGZvcm1hdFdlZWtkYXlPcHRpb25zID0ge1xuICB3ZWVrZGF5OiAnbG9uZydcbn07XG52YXIgZm9ybWF0WWVhck9wdGlvbnMgPSB7XG4gIHllYXI6ICdudW1lcmljJ1xufTtcbmV4cG9ydCB2YXIgZm9ybWF0RGF0ZSA9IGdldFNhZmVGb3JtYXR0ZXIoZm9ybWF0RGF0ZU9wdGlvbnMpO1xuZXhwb3J0IHZhciBmb3JtYXREYXkgPSBnZXRTYWZlRm9ybWF0dGVyKGZvcm1hdERheU9wdGlvbnMpO1xuZXhwb3J0IHZhciBmb3JtYXRMb25nRGF0ZSA9IGdldFNhZmVGb3JtYXR0ZXIoZm9ybWF0TG9uZ0RhdGVPcHRpb25zKTtcbmV4cG9ydCB2YXIgZm9ybWF0TW9udGggPSBnZXRTYWZlRm9ybWF0dGVyKGZvcm1hdE1vbnRoT3B0aW9ucyk7XG5leHBvcnQgdmFyIGZvcm1hdE1vbnRoWWVhciA9IGdldFNhZmVGb3JtYXR0ZXIoZm9ybWF0TW9udGhZZWFyT3B0aW9ucyk7XG5leHBvcnQgdmFyIGZvcm1hdFNob3J0V2Vla2RheSA9IGdldFNhZmVGb3JtYXR0ZXIoZm9ybWF0U2hvcnRXZWVrZGF5T3B0aW9ucyk7XG5leHBvcnQgdmFyIGZvcm1hdFdlZWtkYXkgPSBnZXRTYWZlRm9ybWF0dGVyKGZvcm1hdFdlZWtkYXlPcHRpb25zKTtcbmV4cG9ydCB2YXIgZm9ybWF0WWVhciA9IGdldFNhZmVGb3JtYXR0ZXIoZm9ybWF0WWVhck9wdGlvbnMpOyIsImltcG9ydCB7IGdldFllYXIsIGdldE1vbnRoIGFzIGdldE1vbnRoSW5kZXgsIGdldENlbnR1cnlTdGFydCwgZ2V0UHJldmlvdXNDZW50dXJ5U3RhcnQsIGdldE5leHRDZW50dXJ5U3RhcnQsIGdldENlbnR1cnlFbmQsIGdldFByZXZpb3VzQ2VudHVyeUVuZCwgZ2V0Q2VudHVyeVJhbmdlLCBnZXREZWNhZGVTdGFydCwgZ2V0UHJldmlvdXNEZWNhZGVTdGFydCwgZ2V0TmV4dERlY2FkZVN0YXJ0LCBnZXREZWNhZGVFbmQsIGdldFByZXZpb3VzRGVjYWRlRW5kLCBnZXREZWNhZGVSYW5nZSwgZ2V0WWVhclN0YXJ0LCBnZXRQcmV2aW91c1llYXJTdGFydCwgZ2V0TmV4dFllYXJTdGFydCwgZ2V0WWVhckVuZCwgZ2V0UHJldmlvdXNZZWFyRW5kLCBnZXRZZWFyUmFuZ2UsIGdldE1vbnRoU3RhcnQsIGdldFByZXZpb3VzTW9udGhTdGFydCwgZ2V0TmV4dE1vbnRoU3RhcnQsIGdldE1vbnRoRW5kLCBnZXRQcmV2aW91c01vbnRoRW5kLCBnZXRNb250aFJhbmdlLCBnZXREYXlTdGFydCwgZ2V0RGF5RW5kLCBnZXREYXlSYW5nZSB9IGZyb20gJ0B3b2p0ZWttYWovZGF0ZS11dGlscyc7XG5pbXBvcnQgeyBDQUxFTkRBUl9UWVBFUywgV0VFS0RBWVMgfSBmcm9tICcuL2NvbnN0JztcbmltcG9ydCB7IGZvcm1hdFllYXIgYXMgZGVmYXVsdEZvcm1hdFllYXIgfSBmcm9tICcuL2RhdGVGb3JtYXR0ZXInO1xudmFyIFNVTkRBWSA9IFdFRUtEQVlTWzBdO1xudmFyIEZSSURBWSA9IFdFRUtEQVlTWzVdO1xudmFyIFNBVFVSREFZID0gV0VFS0RBWVNbNl07XG4vKiBTaW1wbGUgZ2V0dGVycyAtIGdldHRpbmcgYSBwcm9wZXJ0eSBvZiBhIGdpdmVuIHBvaW50IGluIHRpbWUgKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERheU9mV2VlayhkYXRlKSB7XG4gIHZhciBjYWxlbmRhclR5cGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IENBTEVOREFSX1RZUEVTLklTT184NjAxO1xuICB2YXIgd2Vla2RheSA9IGRhdGUuZ2V0RGF5KCk7XG5cbiAgc3dpdGNoIChjYWxlbmRhclR5cGUpIHtcbiAgICBjYXNlIENBTEVOREFSX1RZUEVTLklTT184NjAxOlxuICAgICAgLy8gU2hpZnRzIGRheXMgb2YgdGhlIHdlZWsgc28gdGhhdCBNb25kYXkgaXMgMCwgU3VuZGF5IGlzIDZcbiAgICAgIHJldHVybiAod2Vla2RheSArIDYpICUgNztcblxuICAgIGNhc2UgQ0FMRU5EQVJfVFlQRVMuQVJBQklDOlxuICAgICAgcmV0dXJuICh3ZWVrZGF5ICsgMSkgJSA3O1xuXG4gICAgY2FzZSBDQUxFTkRBUl9UWVBFUy5IRUJSRVc6XG4gICAgY2FzZSBDQUxFTkRBUl9UWVBFUy5VUzpcbiAgICAgIHJldHVybiB3ZWVrZGF5O1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5zdXBwb3J0ZWQgY2FsZW5kYXIgdHlwZS4nKTtcbiAgfVxufVxuLyoqXG4gKiBDZW50dXJ5XG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJlZ2luT2ZDZW50dXJ5WWVhcihkYXRlKSB7XG4gIHZhciBiZWdpbk9mQ2VudHVyeSA9IGdldENlbnR1cnlTdGFydChkYXRlKTtcbiAgcmV0dXJuIGdldFllYXIoYmVnaW5PZkNlbnR1cnkpO1xufVxuLyoqXG4gKiBEZWNhZGVcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmVnaW5PZkRlY2FkZVllYXIoZGF0ZSkge1xuICB2YXIgYmVnaW5PZkRlY2FkZSA9IGdldERlY2FkZVN0YXJ0KGRhdGUpO1xuICByZXR1cm4gZ2V0WWVhcihiZWdpbk9mRGVjYWRlKTtcbn1cbi8qKlxuICogV2Vla1xuICovXG5cbi8qKlxuICogUmV0dXJucyB0aGUgYmVnaW5uaW5nIG9mIGEgZ2l2ZW4gd2Vlay5cbiAqXG4gKiBAcGFyYW0ge0RhdGV9IGRhdGUgRGF0ZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjYWxlbmRhclR5cGUgQ2FsZW5kYXIgdHlwZS4gQ2FuIGJlIElTTyA4NjAxIG9yIFVTLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRCZWdpbk9mV2VlayhkYXRlKSB7XG4gIHZhciBjYWxlbmRhclR5cGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IENBTEVOREFSX1RZUEVTLklTT184NjAxO1xuICB2YXIgeWVhciA9IGdldFllYXIoZGF0ZSk7XG4gIHZhciBtb250aEluZGV4ID0gZ2V0TW9udGhJbmRleChkYXRlKTtcbiAgdmFyIGRheSA9IGRhdGUuZ2V0RGF0ZSgpIC0gZ2V0RGF5T2ZXZWVrKGRhdGUsIGNhbGVuZGFyVHlwZSk7XG4gIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCBtb250aEluZGV4LCBkYXkpO1xufVxuLyoqXG4gKiBHZXRzIHdlZWsgbnVtYmVyIGFjY29yZGluZyB0byBJU08gODYwMSBvciBVUyBzdGFuZGFyZC5cbiAqIEluIElTTyA4NjAxLCBBcmFiaWMgYW5kIEhlYnJldyB3ZWVrIDEgaXMgdGhlIG9uZSB3aXRoIEphbnVhcnkgNC5cbiAqIEluIFVTIGNhbGVuZGFyIHdlZWsgMSBpcyB0aGUgb25lIHdpdGggSmFudWFyeSAxLlxuICpcbiAqIEBwYXJhbSB7RGF0ZX0gZGF0ZSBEYXRlLlxuICogQHBhcmFtIHtzdHJpbmd9IGNhbGVuZGFyVHlwZSBDYWxlbmRhciB0eXBlLiBDYW4gYmUgSVNPIDg2MDEgb3IgVVMuXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFdlZWtOdW1iZXIoZGF0ZSkge1xuICB2YXIgY2FsZW5kYXJUeXBlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBDQUxFTkRBUl9UWVBFUy5JU09fODYwMTtcbiAgdmFyIGNhbGVuZGFyVHlwZUZvcldlZWtOdW1iZXIgPSBjYWxlbmRhclR5cGUgPT09IENBTEVOREFSX1RZUEVTLlVTID8gQ0FMRU5EQVJfVFlQRVMuVVMgOiBDQUxFTkRBUl9UWVBFUy5JU09fODYwMTtcbiAgdmFyIGJlZ2luT2ZXZWVrID0gZ2V0QmVnaW5PZldlZWsoZGF0ZSwgY2FsZW5kYXJUeXBlRm9yV2Vla051bWJlcik7XG4gIHZhciB5ZWFyID0gZ2V0WWVhcihkYXRlKSArIDE7XG4gIHZhciBkYXlJbldlZWtPbmU7XG4gIHZhciBiZWdpbk9mRmlyc3RXZWVrOyAvLyBMb29rIGZvciB0aGUgZmlyc3Qgd2VlayBvbmUgdGhhdCBkb2VzIG5vdCBjb21lIGFmdGVyIGEgZ2l2ZW4gZGF0ZVxuXG4gIGRvIHtcbiAgICBkYXlJbldlZWtPbmUgPSBuZXcgRGF0ZSh5ZWFyLCAwLCBjYWxlbmRhclR5cGVGb3JXZWVrTnVtYmVyID09PSBDQUxFTkRBUl9UWVBFUy5JU09fODYwMSA/IDQgOiAxKTtcbiAgICBiZWdpbk9mRmlyc3RXZWVrID0gZ2V0QmVnaW5PZldlZWsoZGF5SW5XZWVrT25lLCBjYWxlbmRhclR5cGVGb3JXZWVrTnVtYmVyKTtcbiAgICB5ZWFyIC09IDE7XG4gIH0gd2hpbGUgKGRhdGUgLSBiZWdpbk9mRmlyc3RXZWVrIDwgMCk7XG5cbiAgcmV0dXJuIE1hdGgucm91bmQoKGJlZ2luT2ZXZWVrIC0gYmVnaW5PZkZpcnN0V2VlaykgLyAoOC42NGU3ICogNykpICsgMTtcbn1cbi8qKlxuICogT3RoZXJzXG4gKi9cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBiZWdpbm5pbmcgb2YgYSBnaXZlbiByYW5nZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcmFuZ2VUeXBlIFJhbmdlIHR5cGUgKGUuZy4gJ2RheScpXG4gKiBAcGFyYW0ge0RhdGV9IGRhdGUgRGF0ZS5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmVnaW4ocmFuZ2VUeXBlLCBkYXRlKSB7XG4gIHN3aXRjaCAocmFuZ2VUeXBlKSB7XG4gICAgY2FzZSAnY2VudHVyeSc6XG4gICAgICByZXR1cm4gZ2V0Q2VudHVyeVN0YXJ0KGRhdGUpO1xuXG4gICAgY2FzZSAnZGVjYWRlJzpcbiAgICAgIHJldHVybiBnZXREZWNhZGVTdGFydChkYXRlKTtcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgcmV0dXJuIGdldFllYXJTdGFydChkYXRlKTtcblxuICAgIGNhc2UgJ21vbnRoJzpcbiAgICAgIHJldHVybiBnZXRNb250aFN0YXJ0KGRhdGUpO1xuXG4gICAgY2FzZSAnZGF5JzpcbiAgICAgIHJldHVybiBnZXREYXlTdGFydChkYXRlKTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJhbmdlVHlwZTogXCIuY29uY2F0KHJhbmdlVHlwZSkpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QmVnaW5QcmV2aW91cyhyYW5nZVR5cGUsIGRhdGUpIHtcbiAgc3dpdGNoIChyYW5nZVR5cGUpIHtcbiAgICBjYXNlICdjZW50dXJ5JzpcbiAgICAgIHJldHVybiBnZXRQcmV2aW91c0NlbnR1cnlTdGFydChkYXRlKTtcblxuICAgIGNhc2UgJ2RlY2FkZSc6XG4gICAgICByZXR1cm4gZ2V0UHJldmlvdXNEZWNhZGVTdGFydChkYXRlKTtcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgcmV0dXJuIGdldFByZXZpb3VzWWVhclN0YXJ0KGRhdGUpO1xuXG4gICAgY2FzZSAnbW9udGgnOlxuICAgICAgcmV0dXJuIGdldFByZXZpb3VzTW9udGhTdGFydChkYXRlKTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJhbmdlVHlwZTogXCIuY29uY2F0KHJhbmdlVHlwZSkpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QmVnaW5OZXh0KHJhbmdlVHlwZSwgZGF0ZSkge1xuICBzd2l0Y2ggKHJhbmdlVHlwZSkge1xuICAgIGNhc2UgJ2NlbnR1cnknOlxuICAgICAgcmV0dXJuIGdldE5leHRDZW50dXJ5U3RhcnQoZGF0ZSk7XG5cbiAgICBjYXNlICdkZWNhZGUnOlxuICAgICAgcmV0dXJuIGdldE5leHREZWNhZGVTdGFydChkYXRlKTtcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgcmV0dXJuIGdldE5leHRZZWFyU3RhcnQoZGF0ZSk7XG5cbiAgICBjYXNlICdtb250aCc6XG4gICAgICByZXR1cm4gZ2V0TmV4dE1vbnRoU3RhcnQoZGF0ZSk7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCByYW5nZVR5cGU6IFwiLmNvbmNhdChyYW5nZVR5cGUpKTtcbiAgfVxufVxuZXhwb3J0IHZhciBnZXRCZWdpblByZXZpb3VzMiA9IGZ1bmN0aW9uIGdldEJlZ2luUHJldmlvdXMyKHJhbmdlVHlwZSwgZGF0ZSkge1xuICBzd2l0Y2ggKHJhbmdlVHlwZSkge1xuICAgIGNhc2UgJ2RlY2FkZSc6XG4gICAgICByZXR1cm4gZ2V0UHJldmlvdXNEZWNhZGVTdGFydChkYXRlLCAtMTAwKTtcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgcmV0dXJuIGdldFByZXZpb3VzWWVhclN0YXJ0KGRhdGUsIC0xMCk7XG5cbiAgICBjYXNlICdtb250aCc6XG4gICAgICByZXR1cm4gZ2V0UHJldmlvdXNNb250aFN0YXJ0KGRhdGUsIC0xMik7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCByYW5nZVR5cGU6IFwiLmNvbmNhdChyYW5nZVR5cGUpKTtcbiAgfVxufTtcbmV4cG9ydCB2YXIgZ2V0QmVnaW5OZXh0MiA9IGZ1bmN0aW9uIGdldEJlZ2luTmV4dDIocmFuZ2VUeXBlLCBkYXRlKSB7XG4gIHN3aXRjaCAocmFuZ2VUeXBlKSB7XG4gICAgY2FzZSAnZGVjYWRlJzpcbiAgICAgIHJldHVybiBnZXROZXh0RGVjYWRlU3RhcnQoZGF0ZSwgMTAwKTtcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgcmV0dXJuIGdldE5leHRZZWFyU3RhcnQoZGF0ZSwgMTApO1xuXG4gICAgY2FzZSAnbW9udGgnOlxuICAgICAgcmV0dXJuIGdldE5leHRNb250aFN0YXJ0KGRhdGUsIDEyKTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJhbmdlVHlwZTogXCIuY29uY2F0KHJhbmdlVHlwZSkpO1xuICB9XG59O1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBlbmQgb2YgYSBnaXZlbiByYW5nZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcmFuZ2VUeXBlIFJhbmdlIHR5cGUgKGUuZy4gJ2RheScpXG4gKiBAcGFyYW0ge0RhdGV9IGRhdGUgRGF0ZS5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5kKHJhbmdlVHlwZSwgZGF0ZSkge1xuICBzd2l0Y2ggKHJhbmdlVHlwZSkge1xuICAgIGNhc2UgJ2NlbnR1cnknOlxuICAgICAgcmV0dXJuIGdldENlbnR1cnlFbmQoZGF0ZSk7XG5cbiAgICBjYXNlICdkZWNhZGUnOlxuICAgICAgcmV0dXJuIGdldERlY2FkZUVuZChkYXRlKTtcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgcmV0dXJuIGdldFllYXJFbmQoZGF0ZSk7XG5cbiAgICBjYXNlICdtb250aCc6XG4gICAgICByZXR1cm4gZ2V0TW9udGhFbmQoZGF0ZSk7XG5cbiAgICBjYXNlICdkYXknOlxuICAgICAgcmV0dXJuIGdldERheUVuZChkYXRlKTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJhbmdlVHlwZTogXCIuY29uY2F0KHJhbmdlVHlwZSkpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5kUHJldmlvdXMocmFuZ2VUeXBlLCBkYXRlKSB7XG4gIHN3aXRjaCAocmFuZ2VUeXBlKSB7XG4gICAgY2FzZSAnY2VudHVyeSc6XG4gICAgICByZXR1cm4gZ2V0UHJldmlvdXNDZW50dXJ5RW5kKGRhdGUpO1xuXG4gICAgY2FzZSAnZGVjYWRlJzpcbiAgICAgIHJldHVybiBnZXRQcmV2aW91c0RlY2FkZUVuZChkYXRlKTtcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgcmV0dXJuIGdldFByZXZpb3VzWWVhckVuZChkYXRlKTtcblxuICAgIGNhc2UgJ21vbnRoJzpcbiAgICAgIHJldHVybiBnZXRQcmV2aW91c01vbnRoRW5kKGRhdGUpO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcmFuZ2VUeXBlOiBcIi5jb25jYXQocmFuZ2VUeXBlKSk7XG4gIH1cbn1cbmV4cG9ydCB2YXIgZ2V0RW5kUHJldmlvdXMyID0gZnVuY3Rpb24gZ2V0RW5kUHJldmlvdXMyKHJhbmdlVHlwZSwgZGF0ZSkge1xuICBzd2l0Y2ggKHJhbmdlVHlwZSkge1xuICAgIGNhc2UgJ2RlY2FkZSc6XG4gICAgICByZXR1cm4gZ2V0UHJldmlvdXNEZWNhZGVFbmQoZGF0ZSwgLTEwMCk7XG5cbiAgICBjYXNlICd5ZWFyJzpcbiAgICAgIHJldHVybiBnZXRQcmV2aW91c1llYXJFbmQoZGF0ZSwgLTEwKTtcblxuICAgIGNhc2UgJ21vbnRoJzpcbiAgICAgIHJldHVybiBnZXRQcmV2aW91c01vbnRoRW5kKGRhdGUsIC0xMik7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCByYW5nZVR5cGU6IFwiLmNvbmNhdChyYW5nZVR5cGUpKTtcbiAgfVxufTtcbi8qKlxuICogUmV0dXJucyBhbiBhcnJheSB3aXRoIHRoZSBiZWdpbm5pbmcgYW5kIHRoZSBlbmQgb2YgYSBnaXZlbiByYW5nZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcmFuZ2VUeXBlIFJhbmdlIHR5cGUgKGUuZy4gJ2RheScpXG4gKiBAcGFyYW0ge0RhdGV9IGRhdGUgRGF0ZS5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmFuZ2UocmFuZ2VUeXBlLCBkYXRlKSB7XG4gIHN3aXRjaCAocmFuZ2VUeXBlKSB7XG4gICAgY2FzZSAnY2VudHVyeSc6XG4gICAgICByZXR1cm4gZ2V0Q2VudHVyeVJhbmdlKGRhdGUpO1xuXG4gICAgY2FzZSAnZGVjYWRlJzpcbiAgICAgIHJldHVybiBnZXREZWNhZGVSYW5nZShkYXRlKTtcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgcmV0dXJuIGdldFllYXJSYW5nZShkYXRlKTtcblxuICAgIGNhc2UgJ21vbnRoJzpcbiAgICAgIHJldHVybiBnZXRNb250aFJhbmdlKGRhdGUpO1xuXG4gICAgY2FzZSAnZGF5JzpcbiAgICAgIHJldHVybiBnZXREYXlSYW5nZShkYXRlKTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJhbmdlVHlwZTogXCIuY29uY2F0KHJhbmdlVHlwZSkpO1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSByYW5nZSBvdXQgb2YgdHdvIHZhbHVlcywgZW5zdXJpbmcgdGhleSBhcmUgaW4gb3JkZXIgYW5kIGNvdmVyaW5nIGVudGlyZSBwZXJpb2QgcmFuZ2VzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSByYW5nZVR5cGUgUmFuZ2UgdHlwZSAoZS5nLiAnZGF5JylcbiAqIEBwYXJhbSB7RGF0ZX0gZGF0ZTEgRmlyc3QgZGF0ZS5cbiAqIEBwYXJhbSB7RGF0ZX0gZGF0ZTIgU2Vjb25kIGRhdGUuXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFZhbHVlUmFuZ2UocmFuZ2VUeXBlLCBkYXRlMSwgZGF0ZTIpIHtcbiAgdmFyIHJhd05leHRWYWx1ZSA9IFtkYXRlMSwgZGF0ZTJdLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gYSAtIGI7XG4gIH0pO1xuICByZXR1cm4gW2dldEJlZ2luKHJhbmdlVHlwZSwgcmF3TmV4dFZhbHVlWzBdKSwgZ2V0RW5kKHJhbmdlVHlwZSwgcmF3TmV4dFZhbHVlWzFdKV07XG59XG5cbmZ1bmN0aW9uIHRvWWVhckxhYmVsKGxvY2FsZSkge1xuICB2YXIgZm9ybWF0WWVhciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdEZvcm1hdFllYXI7XG4gIHZhciBkYXRlcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkO1xuICByZXR1cm4gZGF0ZXMubWFwKGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgcmV0dXJuIGZvcm1hdFllYXIobG9jYWxlLCBkYXRlKTtcbiAgfSkuam9pbignIOKAkyAnKTtcbn1cbi8qKlxuICogUmV0dXJucyBhIHN0cmluZyBsYWJlbGxpbmcgYSBjZW50dXJ5IG9mIGEgZ2l2ZW4gZGF0ZS5cbiAqIEZvciBleGFtcGxlLCBmb3IgMjAxNyBpdCB3aWxsIHJldHVybiAyMDAxLTIxMDAuXG4gKlxuICogQHBhcmFtIHtEYXRlfFN0cmluZ3xOdW1iZXJ9IGRhdGUgRGF0ZSBvciBhIHllYXIgYXMgYSBzdHJpbmcgb3IgYXMgYSBudW1iZXIuXG4gKi9cblxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2VudHVyeUxhYmVsKGxvY2FsZSwgZm9ybWF0WWVhciwgZGF0ZSkge1xuICByZXR1cm4gdG9ZZWFyTGFiZWwobG9jYWxlLCBmb3JtYXRZZWFyLCBnZXRDZW50dXJ5UmFuZ2UoZGF0ZSkpO1xufVxuLyoqXG4gKiBSZXR1cm5zIGEgc3RyaW5nIGxhYmVsbGluZyBhIGNlbnR1cnkgb2YgYSBnaXZlbiBkYXRlLlxuICogRm9yIGV4YW1wbGUsIGZvciAyMDE3IGl0IHdpbGwgcmV0dXJuIDIwMTEtMjAyMC5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8U3RyaW5nfE51bWJlcn0gZGF0ZSBEYXRlIG9yIGEgeWVhciBhcyBhIHN0cmluZyBvciBhcyBhIG51bWJlci5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVjYWRlTGFiZWwobG9jYWxlLCBmb3JtYXRZZWFyLCBkYXRlKSB7XG4gIHJldHVybiB0b1llYXJMYWJlbChsb2NhbGUsIGZvcm1hdFllYXIsIGdldERlY2FkZVJhbmdlKGRhdGUpKTtcbn1cbi8qKlxuICogUmV0dXJucyBhIGJvb2xlYW4gZGV0ZXJtaW5pbmcgd2hldGhlciBhIGdpdmVuIGRhdGUgaXMgb24gU2F0dXJkYXkgb3IgU3VuZGF5LlxuICpcbiAqIEBwYXJhbSB7RGF0ZX0gZGF0ZSBEYXRlLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBpc1dlZWtlbmQoZGF0ZSkge1xuICB2YXIgY2FsZW5kYXJUeXBlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBDQUxFTkRBUl9UWVBFUy5JU09fODYwMTtcbiAgdmFyIHdlZWtkYXkgPSBkYXRlLmdldERheSgpO1xuXG4gIHN3aXRjaCAoY2FsZW5kYXJUeXBlKSB7XG4gICAgY2FzZSBDQUxFTkRBUl9UWVBFUy5BUkFCSUM6XG4gICAgY2FzZSBDQUxFTkRBUl9UWVBFUy5IRUJSRVc6XG4gICAgICByZXR1cm4gd2Vla2RheSA9PT0gRlJJREFZIHx8IHdlZWtkYXkgPT09IFNBVFVSREFZO1xuXG4gICAgY2FzZSBDQUxFTkRBUl9UWVBFUy5JU09fODYwMTpcbiAgICBjYXNlIENBTEVOREFSX1RZUEVTLlVTOlxuICAgICAgcmV0dXJuIHdlZWtkYXkgPT09IFNBVFVSREFZIHx8IHdlZWtkYXkgPT09IFNVTkRBWTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vuc3VwcG9ydGVkIGNhbGVuZGFyIHR5cGUuJyk7XG4gIH1cbn0iLCJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBDQUxFTkRBUl9UWVBFUyB9IGZyb20gJy4vY29uc3QnO1xudmFyIGNhbGVuZGFyVHlwZXMgPSBPYmplY3QudmFsdWVzKENBTEVOREFSX1RZUEVTKTtcbnZhciBhbGxWaWV3cyA9IFsnY2VudHVyeScsICdkZWNhZGUnLCAneWVhcicsICdtb250aCddO1xuZXhwb3J0IHZhciBpc0NhbGVuZGFyVHlwZSA9IFByb3BUeXBlcy5vbmVPZihjYWxlbmRhclR5cGVzKTtcbmV4cG9ydCB2YXIgaXNDbGFzc05hbWUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pO1xuZXhwb3J0IHZhciBpc01pbkRhdGUgPSBmdW5jdGlvbiBpc01pbkRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lKSB7XG4gIHZhciBtaW5EYXRlID0gcHJvcHNbcHJvcE5hbWVdO1xuXG4gIGlmICghbWluRGF0ZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgaWYgKCEobWluRGF0ZSBpbnN0YW5jZW9mIERhdGUpKSB7XG4gICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCBgXCIuY29uY2F0KHByb3BOYW1lLCBcImAgb2YgdHlwZSBgXCIpLmNvbmNhdChfdHlwZW9mKG1pbkRhdGUpLCBcImAgc3VwcGxpZWQgdG8gYFwiKS5jb25jYXQoY29tcG9uZW50TmFtZSwgXCJgLCBleHBlY3RlZCBpbnN0YW5jZSBvZiBgRGF0ZWAuXCIpKTtcbiAgfVxuXG4gIHZhciBtYXhEYXRlID0gcHJvcHMubWF4RGF0ZTtcblxuICBpZiAobWF4RGF0ZSAmJiBtaW5EYXRlID4gbWF4RGF0ZSkge1xuICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgYFwiLmNvbmNhdChwcm9wTmFtZSwgXCJgIG9mIHR5cGUgYFwiKS5jb25jYXQoX3R5cGVvZihtaW5EYXRlKSwgXCJgIHN1cHBsaWVkIHRvIGBcIikuY29uY2F0KGNvbXBvbmVudE5hbWUsIFwiYCwgbWluRGF0ZSBjYW5ub3QgYmUgbGFyZ2VyIHRoYW4gbWF4RGF0ZS5cIikpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuZXhwb3J0IHZhciBpc01heERhdGUgPSBmdW5jdGlvbiBpc01heERhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lKSB7XG4gIHZhciBtYXhEYXRlID0gcHJvcHNbcHJvcE5hbWVdO1xuXG4gIGlmICghbWF4RGF0ZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgaWYgKCEobWF4RGF0ZSBpbnN0YW5jZW9mIERhdGUpKSB7XG4gICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCBgXCIuY29uY2F0KHByb3BOYW1lLCBcImAgb2YgdHlwZSBgXCIpLmNvbmNhdChfdHlwZW9mKG1heERhdGUpLCBcImAgc3VwcGxpZWQgdG8gYFwiKS5jb25jYXQoY29tcG9uZW50TmFtZSwgXCJgLCBleHBlY3RlZCBpbnN0YW5jZSBvZiBgRGF0ZWAuXCIpKTtcbiAgfVxuXG4gIHZhciBtaW5EYXRlID0gcHJvcHMubWluRGF0ZTtcblxuICBpZiAobWluRGF0ZSAmJiBtYXhEYXRlIDwgbWluRGF0ZSkge1xuICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgYFwiLmNvbmNhdChwcm9wTmFtZSwgXCJgIG9mIHR5cGUgYFwiKS5jb25jYXQoX3R5cGVvZihtYXhEYXRlKSwgXCJgIHN1cHBsaWVkIHRvIGBcIikuY29uY2F0KGNvbXBvbmVudE5hbWUsIFwiYCwgbWF4RGF0ZSBjYW5ub3QgYmUgc21hbGxlciB0aGFuIG1pbkRhdGUuXCIpKTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufTtcbmV4cG9ydCB2YXIgaXNSZWYgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnNoYXBlKHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L2ZvcmJpZC1wcm9wLXR5cGVzXG4gIGN1cnJlbnQ6IFByb3BUeXBlcy5hbnlcbn0pXSk7XG5leHBvcnQgdmFyIGlzVmFsdWUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSwgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkpXSk7XG5leHBvcnQgdmFyIGlzVmlld3MgPSBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2YoYWxsVmlld3MpKTtcbmV4cG9ydCB2YXIgaXNWaWV3ID0gZnVuY3Rpb24gaXNWaWV3KHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSkge1xuICB2YXIgdmlldyA9IHByb3BzW3Byb3BOYW1lXTtcbiAgdmFyIHZpZXdzID0gcHJvcHMudmlld3M7XG4gIHZhciBhbGxvd2VkVmlld3MgPSB2aWV3cyB8fCBhbGxWaWV3cztcblxuICBpZiAodmlldyAhPT0gdW5kZWZpbmVkICYmIGFsbG93ZWRWaWV3cy5pbmRleE9mKHZpZXcpID09PSAtMSkge1xuICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgYFwiLmNvbmNhdChwcm9wTmFtZSwgXCJgIG9mIHZhbHVlIGBcIikuY29uY2F0KHZpZXcsIFwiYCBzdXBwbGllZCB0byBgXCIpLmNvbmNhdChjb21wb25lbnROYW1lLCBcImAsIGV4cGVjdGVkIG9uZSBvZiBbXCIpLmNvbmNhdChhbGxvd2VkVmlld3MubWFwKGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KGEsIFwiXFxcIlwiKTtcbiAgICB9KS5qb2luKCcsICcpLCBcIl0uXCIpKTtcbiAgfSAvLyBFdmVyeXRoaW5nIGlzIGZpbmVcblxuXG4gIHJldHVybiBudWxsO1xufTtcblxuaXNWaWV3LmlzUmVxdWlyZWQgPSBmdW5jdGlvbiAocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lKSB7XG4gIHZhciB2aWV3ID0gcHJvcHNbcHJvcE5hbWVdO1xuXG4gIGlmICghdmlldykge1xuICAgIHJldHVybiBuZXcgRXJyb3IoXCJUaGUgcHJvcCBgXCIuY29uY2F0KHByb3BOYW1lLCBcImAgaXMgbWFya2VkIGFzIHJlcXVpcmVkIGluIGBcIikuY29uY2F0KGNvbXBvbmVudE5hbWUsIFwiYCwgYnV0IGl0cyB2YWx1ZSBpcyBgXCIpLmNvbmNhdCh2aWV3LCBcImAuXCIpKTtcbiAgfVxuXG4gIHJldHVybiBpc1ZpZXcocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lKTtcbn07XG5cbmV4cG9ydCB2YXIgdGlsZUdyb3VwUHJvcHMgPSB7XG4gIGFjdGl2ZVN0YXJ0RGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgaG92ZXI6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBsb2NhbGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG1heERhdGU6IGlzTWF4RGF0ZSxcbiAgbWluRGF0ZTogaXNNaW5EYXRlLFxuICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Nb3VzZU92ZXI6IFByb3BUeXBlcy5mdW5jLFxuICB0aWxlQ2xhc3NOYW1lOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgaXNDbGFzc05hbWVdKSxcbiAgdGlsZUNvbnRlbnQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICB2YWx1ZTogaXNWYWx1ZSxcbiAgdmFsdWVUeXBlOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuZXhwb3J0IHZhciB0aWxlUHJvcHMgPSB7XG4gIGFjdGl2ZVN0YXJ0RGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgY2xhc3NlczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZykuaXNSZXF1aXJlZCxcbiAgZGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgbG9jYWxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBtYXhEYXRlOiBpc01heERhdGUsXG4gIG1pbkRhdGU6IGlzTWluRGF0ZSxcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uTW91c2VPdmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSkpLFxuICB0aWxlQ2xhc3NOYW1lOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgaXNDbGFzc05hbWVdKSxcbiAgdGlsZUNvbnRlbnQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICB0aWxlRGlzYWJsZWQ6IFByb3BUeXBlcy5mdW5jXG59OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgZ2V0VXNlckxvY2FsZSB9IGZyb20gJ2dldC11c2VyLWxvY2FsZSc7XG5pbXBvcnQgeyBnZXRDZW50dXJ5TGFiZWwsIGdldERlY2FkZUxhYmVsLCBnZXRCZWdpbk5leHQsIGdldEJlZ2luTmV4dDIsIGdldEJlZ2luUHJldmlvdXMsIGdldEJlZ2luUHJldmlvdXMyLCBnZXRFbmRQcmV2aW91cywgZ2V0RW5kUHJldmlvdXMyIH0gZnJvbSAnLi4vc2hhcmVkL2RhdGVzJztcbmltcG9ydCB7IGZvcm1hdE1vbnRoWWVhciBhcyBkZWZhdWx0Rm9ybWF0TW9udGhZZWFyLCBmb3JtYXRZZWFyIGFzIGRlZmF1bHRGb3JtYXRZZWFyIH0gZnJvbSAnLi4vc2hhcmVkL2RhdGVGb3JtYXR0ZXInO1xuaW1wb3J0IHsgaXNWaWV3LCBpc1ZpZXdzIH0gZnJvbSAnLi4vc2hhcmVkL3Byb3BUeXBlcyc7XG52YXIgY2xhc3NOYW1lID0gJ3JlYWN0LWNhbGVuZGFyX19uYXZpZ2F0aW9uJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5hdmlnYXRpb24oX3JlZikge1xuICB2YXIgYWN0aXZlU3RhcnREYXRlID0gX3JlZi5hY3RpdmVTdGFydERhdGUsXG4gICAgICBkcmlsbFVwID0gX3JlZi5kcmlsbFVwLFxuICAgICAgX3JlZiRmb3JtYXRNb250aFllYXIgPSBfcmVmLmZvcm1hdE1vbnRoWWVhcixcbiAgICAgIGZvcm1hdE1vbnRoWWVhciA9IF9yZWYkZm9ybWF0TW9udGhZZWFyID09PSB2b2lkIDAgPyBkZWZhdWx0Rm9ybWF0TW9udGhZZWFyIDogX3JlZiRmb3JtYXRNb250aFllYXIsXG4gICAgICBfcmVmJGZvcm1hdFllYXIgPSBfcmVmLmZvcm1hdFllYXIsXG4gICAgICBmb3JtYXRZZWFyID0gX3JlZiRmb3JtYXRZZWFyID09PSB2b2lkIDAgPyBkZWZhdWx0Rm9ybWF0WWVhciA6IF9yZWYkZm9ybWF0WWVhcixcbiAgICAgIGxvY2FsZSA9IF9yZWYubG9jYWxlLFxuICAgICAgbWF4RGF0ZSA9IF9yZWYubWF4RGF0ZSxcbiAgICAgIG1pbkRhdGUgPSBfcmVmLm1pbkRhdGUsXG4gICAgICBfcmVmJG5hdmlnYXRpb25BcmlhTGEgPSBfcmVmLm5hdmlnYXRpb25BcmlhTGFiZWwsXG4gICAgICBuYXZpZ2F0aW9uQXJpYUxhYmVsID0gX3JlZiRuYXZpZ2F0aW9uQXJpYUxhID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkbmF2aWdhdGlvbkFyaWFMYSxcbiAgICAgIG5hdmlnYXRpb25MYWJlbCA9IF9yZWYubmF2aWdhdGlvbkxhYmVsLFxuICAgICAgX3JlZiRuZXh0MkFyaWFMYWJlbCA9IF9yZWYubmV4dDJBcmlhTGFiZWwsXG4gICAgICBuZXh0MkFyaWFMYWJlbCA9IF9yZWYkbmV4dDJBcmlhTGFiZWwgPT09IHZvaWQgMCA/ICcnIDogX3JlZiRuZXh0MkFyaWFMYWJlbCxcbiAgICAgIF9yZWYkbmV4dDJMYWJlbCA9IF9yZWYubmV4dDJMYWJlbCxcbiAgICAgIG5leHQyTGFiZWwgPSBfcmVmJG5leHQyTGFiZWwgPT09IHZvaWQgMCA/ICfCuycgOiBfcmVmJG5leHQyTGFiZWwsXG4gICAgICBfcmVmJG5leHRBcmlhTGFiZWwgPSBfcmVmLm5leHRBcmlhTGFiZWwsXG4gICAgICBuZXh0QXJpYUxhYmVsID0gX3JlZiRuZXh0QXJpYUxhYmVsID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkbmV4dEFyaWFMYWJlbCxcbiAgICAgIF9yZWYkbmV4dExhYmVsID0gX3JlZi5uZXh0TGFiZWwsXG4gICAgICBuZXh0TGFiZWwgPSBfcmVmJG5leHRMYWJlbCA9PT0gdm9pZCAwID8gJ+KAuicgOiBfcmVmJG5leHRMYWJlbCxcbiAgICAgIF9yZWYkcHJldjJBcmlhTGFiZWwgPSBfcmVmLnByZXYyQXJpYUxhYmVsLFxuICAgICAgcHJldjJBcmlhTGFiZWwgPSBfcmVmJHByZXYyQXJpYUxhYmVsID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkcHJldjJBcmlhTGFiZWwsXG4gICAgICBfcmVmJHByZXYyTGFiZWwgPSBfcmVmLnByZXYyTGFiZWwsXG4gICAgICBwcmV2MkxhYmVsID0gX3JlZiRwcmV2MkxhYmVsID09PSB2b2lkIDAgPyAnwqsnIDogX3JlZiRwcmV2MkxhYmVsLFxuICAgICAgX3JlZiRwcmV2QXJpYUxhYmVsID0gX3JlZi5wcmV2QXJpYUxhYmVsLFxuICAgICAgcHJldkFyaWFMYWJlbCA9IF9yZWYkcHJldkFyaWFMYWJlbCA9PT0gdm9pZCAwID8gJycgOiBfcmVmJHByZXZBcmlhTGFiZWwsXG4gICAgICBfcmVmJHByZXZMYWJlbCA9IF9yZWYucHJldkxhYmVsLFxuICAgICAgcHJldkxhYmVsID0gX3JlZiRwcmV2TGFiZWwgPT09IHZvaWQgMCA/ICfigLknIDogX3JlZiRwcmV2TGFiZWwsXG4gICAgICBzZXRBY3RpdmVTdGFydERhdGUgPSBfcmVmLnNldEFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgIHNob3dEb3VibGVWaWV3ID0gX3JlZi5zaG93RG91YmxlVmlldyxcbiAgICAgIHZpZXcgPSBfcmVmLnZpZXcsXG4gICAgICB2aWV3cyA9IF9yZWYudmlld3M7XG4gIHZhciBkcmlsbFVwQXZhaWxhYmxlID0gdmlld3MuaW5kZXhPZih2aWV3KSA+IDA7XG4gIHZhciBzaG91bGRTaG93UHJldk5leHQyQnV0dG9ucyA9IHZpZXcgIT09ICdjZW50dXJ5JztcbiAgdmFyIHByZXZpb3VzQWN0aXZlU3RhcnREYXRlID0gZ2V0QmVnaW5QcmV2aW91cyh2aWV3LCBhY3RpdmVTdGFydERhdGUpO1xuICB2YXIgcHJldmlvdXNBY3RpdmVTdGFydERhdGUyID0gc2hvdWxkU2hvd1ByZXZOZXh0MkJ1dHRvbnMgJiYgZ2V0QmVnaW5QcmV2aW91czIodmlldywgYWN0aXZlU3RhcnREYXRlKTtcbiAgdmFyIG5leHRBY3RpdmVTdGFydERhdGUgPSBnZXRCZWdpbk5leHQodmlldywgYWN0aXZlU3RhcnREYXRlKTtcbiAgdmFyIG5leHRBY3RpdmVTdGFydERhdGUyID0gc2hvdWxkU2hvd1ByZXZOZXh0MkJ1dHRvbnMgJiYgZ2V0QmVnaW5OZXh0Mih2aWV3LCBhY3RpdmVTdGFydERhdGUpO1xuXG4gIHZhciBwcmV2QnV0dG9uRGlzYWJsZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHByZXZpb3VzQWN0aXZlU3RhcnREYXRlLmdldEZ1bGxZZWFyKCkgPCAwKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXNBY3RpdmVFbmREYXRlID0gZ2V0RW5kUHJldmlvdXModmlldywgYWN0aXZlU3RhcnREYXRlKTtcbiAgICByZXR1cm4gbWluRGF0ZSAmJiBtaW5EYXRlID49IHByZXZpb3VzQWN0aXZlRW5kRGF0ZTtcbiAgfSgpO1xuXG4gIHZhciBwcmV2MkJ1dHRvbkRpc2FibGVkID0gc2hvdWxkU2hvd1ByZXZOZXh0MkJ1dHRvbnMgJiYgZnVuY3Rpb24gKCkge1xuICAgIGlmIChwcmV2aW91c0FjdGl2ZVN0YXJ0RGF0ZTIuZ2V0RnVsbFllYXIoKSA8IDApIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHZhciBwcmV2aW91c0FjdGl2ZUVuZERhdGUgPSBnZXRFbmRQcmV2aW91czIodmlldywgYWN0aXZlU3RhcnREYXRlKTtcbiAgICByZXR1cm4gbWluRGF0ZSAmJiBtaW5EYXRlID49IHByZXZpb3VzQWN0aXZlRW5kRGF0ZTtcbiAgfSgpO1xuXG4gIHZhciBuZXh0QnV0dG9uRGlzYWJsZWQgPSBtYXhEYXRlICYmIG1heERhdGUgPD0gbmV4dEFjdGl2ZVN0YXJ0RGF0ZTtcbiAgdmFyIG5leHQyQnV0dG9uRGlzYWJsZWQgPSBzaG91bGRTaG93UHJldk5leHQyQnV0dG9ucyAmJiBtYXhEYXRlICYmIG1heERhdGUgPD0gbmV4dEFjdGl2ZVN0YXJ0RGF0ZTI7XG5cbiAgZnVuY3Rpb24gb25DbGlja1ByZXZpb3VzKCkge1xuICAgIHNldEFjdGl2ZVN0YXJ0RGF0ZShwcmV2aW91c0FjdGl2ZVN0YXJ0RGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBvbkNsaWNrUHJldmlvdXMyKCkge1xuICAgIHNldEFjdGl2ZVN0YXJ0RGF0ZShwcmV2aW91c0FjdGl2ZVN0YXJ0RGF0ZTIpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25DbGlja05leHQoKSB7XG4gICAgc2V0QWN0aXZlU3RhcnREYXRlKG5leHRBY3RpdmVTdGFydERhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25DbGlja05leHQyKCkge1xuICAgIHNldEFjdGl2ZVN0YXJ0RGF0ZShuZXh0QWN0aXZlU3RhcnREYXRlMik7XG4gIH1cblxuICBmdW5jdGlvbiByZW5kZXJMYWJlbChkYXRlKSB7XG4gICAgdmFyIGxhYmVsID0gZnVuY3Rpb24gKCkge1xuICAgICAgc3dpdGNoICh2aWV3KSB7XG4gICAgICAgIGNhc2UgJ2NlbnR1cnknOlxuICAgICAgICAgIHJldHVybiBnZXRDZW50dXJ5TGFiZWwobG9jYWxlLCBmb3JtYXRZZWFyLCBkYXRlKTtcblxuICAgICAgICBjYXNlICdkZWNhZGUnOlxuICAgICAgICAgIHJldHVybiBnZXREZWNhZGVMYWJlbChsb2NhbGUsIGZvcm1hdFllYXIsIGRhdGUpO1xuXG4gICAgICAgIGNhc2UgJ3llYXInOlxuICAgICAgICAgIHJldHVybiBmb3JtYXRZZWFyKGxvY2FsZSwgZGF0ZSk7XG5cbiAgICAgICAgY2FzZSAnbW9udGgnOlxuICAgICAgICAgIHJldHVybiBmb3JtYXRNb250aFllYXIobG9jYWxlLCBkYXRlKTtcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmlldzogXCIuY29uY2F0KHZpZXcsIFwiLlwiKSk7XG4gICAgICB9XG4gICAgfSgpO1xuXG4gICAgcmV0dXJuIG5hdmlnYXRpb25MYWJlbCA/IG5hdmlnYXRpb25MYWJlbCh7XG4gICAgICBkYXRlOiBkYXRlLFxuICAgICAgbGFiZWw6IGxhYmVsLFxuICAgICAgbG9jYWxlOiBsb2NhbGUgfHwgZ2V0VXNlckxvY2FsZSgpLFxuICAgICAgdmlldzogdmlld1xuICAgIH0pIDogbGFiZWw7XG4gIH1cblxuICBmdW5jdGlvbiByZW5kZXJCdXR0b24oKSB7XG4gICAgdmFyIGxhYmVsQ2xhc3NOYW1lID0gXCJcIi5jb25jYXQoY2xhc3NOYW1lLCBcIl9fbGFiZWxcIik7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHtcbiAgICAgIFwiYXJpYS1sYWJlbFwiOiBuYXZpZ2F0aW9uQXJpYUxhYmVsLFxuICAgICAgY2xhc3NOYW1lOiBsYWJlbENsYXNzTmFtZSxcbiAgICAgIGRpc2FibGVkOiAhZHJpbGxVcEF2YWlsYWJsZSxcbiAgICAgIG9uQ2xpY2s6IGRyaWxsVXAsXG4gICAgICBzdHlsZToge1xuICAgICAgICBmbGV4R3JvdzogMVxuICAgICAgfSxcbiAgICAgIHR5cGU6IFwiYnV0dG9uXCJcbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChsYWJlbENsYXNzTmFtZSwgXCJfX2xhYmVsVGV4dCBcIikuY29uY2F0KGxhYmVsQ2xhc3NOYW1lLCBcIl9fbGFiZWxUZXh0LS1mcm9tXCIpXG4gICAgfSwgcmVuZGVyTGFiZWwoYWN0aXZlU3RhcnREYXRlKSksIHNob3dEb3VibGVWaWV3ICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChsYWJlbENsYXNzTmFtZSwgXCJfX2RpdmlkZXJcIilcbiAgICB9LCAnICcsIFwiXFx1MjAxM1wiLCAnICcpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChsYWJlbENsYXNzTmFtZSwgXCJfX2xhYmVsVGV4dCBcIikuY29uY2F0KGxhYmVsQ2xhc3NOYW1lLCBcIl9fbGFiZWxUZXh0LS10b1wiKVxuICAgIH0sIHJlbmRlckxhYmVsKG5leHRBY3RpdmVTdGFydERhdGUpKSkpO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICBzdHlsZToge1xuICAgICAgZGlzcGxheTogJ2ZsZXgnXG4gICAgfVxuICB9LCBwcmV2MkxhYmVsICE9PSBudWxsICYmIHNob3VsZFNob3dQcmV2TmV4dDJCdXR0b25zICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHtcbiAgICBcImFyaWEtbGFiZWxcIjogcHJldjJBcmlhTGFiZWwsXG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChjbGFzc05hbWUsIFwiX19hcnJvdyBcIikuY29uY2F0KGNsYXNzTmFtZSwgXCJfX3ByZXYyLWJ1dHRvblwiKSxcbiAgICBkaXNhYmxlZDogcHJldjJCdXR0b25EaXNhYmxlZCxcbiAgICBvbkNsaWNrOiBvbkNsaWNrUHJldmlvdXMyLFxuICAgIHR5cGU6IFwiYnV0dG9uXCJcbiAgfSwgcHJldjJMYWJlbCksIHByZXZMYWJlbCAhPT0gbnVsbCAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgXCJhcmlhLWxhYmVsXCI6IHByZXZBcmlhTGFiZWwsXG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChjbGFzc05hbWUsIFwiX19hcnJvdyBcIikuY29uY2F0KGNsYXNzTmFtZSwgXCJfX3ByZXYtYnV0dG9uXCIpLFxuICAgIGRpc2FibGVkOiBwcmV2QnV0dG9uRGlzYWJsZWQsXG4gICAgb25DbGljazogb25DbGlja1ByZXZpb3VzLFxuICAgIHR5cGU6IFwiYnV0dG9uXCJcbiAgfSwgcHJldkxhYmVsKSwgcmVuZGVyQnV0dG9uKCksIG5leHRMYWJlbCAhPT0gbnVsbCAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgXCJhcmlhLWxhYmVsXCI6IG5leHRBcmlhTGFiZWwsXG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChjbGFzc05hbWUsIFwiX19hcnJvdyBcIikuY29uY2F0KGNsYXNzTmFtZSwgXCJfX25leHQtYnV0dG9uXCIpLFxuICAgIGRpc2FibGVkOiBuZXh0QnV0dG9uRGlzYWJsZWQsXG4gICAgb25DbGljazogb25DbGlja05leHQsXG4gICAgdHlwZTogXCJidXR0b25cIlxuICB9LCBuZXh0TGFiZWwpLCBuZXh0MkxhYmVsICE9PSBudWxsICYmIHNob3VsZFNob3dQcmV2TmV4dDJCdXR0b25zICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHtcbiAgICBcImFyaWEtbGFiZWxcIjogbmV4dDJBcmlhTGFiZWwsXG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChjbGFzc05hbWUsIFwiX19hcnJvdyBcIikuY29uY2F0KGNsYXNzTmFtZSwgXCJfX25leHQyLWJ1dHRvblwiKSxcbiAgICBkaXNhYmxlZDogbmV4dDJCdXR0b25EaXNhYmxlZCxcbiAgICBvbkNsaWNrOiBvbkNsaWNrTmV4dDIsXG4gICAgdHlwZTogXCJidXR0b25cIlxuICB9LCBuZXh0MkxhYmVsKSk7XG59XG5OYXZpZ2F0aW9uLnByb3BUeXBlcyA9IHtcbiAgYWN0aXZlU3RhcnREYXRlOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKS5pc1JlcXVpcmVkLFxuICBkcmlsbFVwOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBmb3JtYXRNb250aFllYXI6IFByb3BUeXBlcy5mdW5jLFxuICBmb3JtYXRZZWFyOiBQcm9wVHlwZXMuZnVuYyxcbiAgbG9jYWxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBtYXhEYXRlOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcbiAgbWluRGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIG5hdmlnYXRpb25BcmlhTGFiZWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG5hdmlnYXRpb25MYWJlbDogUHJvcFR5cGVzLmZ1bmMsXG4gIG5leHQyQXJpYUxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBuZXh0MkxhYmVsOiBQcm9wVHlwZXMubm9kZSxcbiAgbmV4dEFyaWFMYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbmV4dExhYmVsOiBQcm9wVHlwZXMubm9kZSxcbiAgcHJldjJBcmlhTGFiZWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHByZXYyTGFiZWw6IFByb3BUeXBlcy5ub2RlLFxuICBwcmV2QXJpYUxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBwcmV2TGFiZWw6IFByb3BUeXBlcy5ub2RlLFxuICBzZXRBY3RpdmVTdGFydERhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHNob3dEb3VibGVWaWV3OiBQcm9wVHlwZXMuYm9vbCxcbiAgdmlldzogaXNWaWV3LmlzUmVxdWlyZWQsXG4gIHZpZXdzOiBpc1ZpZXdzLmlzUmVxdWlyZWRcbn07IiwiZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7IHZhciBrZXksIGk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlU3ltYm9sS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5mdW5jdGlvbiB0b1BlcmNlbnQobnVtKSB7XG4gIHJldHVybiBcIlwiLmNvbmNhdChudW0sIFwiJVwiKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRmxleChfcmVmKSB7XG4gIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGRpcmVjdGlvbiA9IF9yZWYuZGlyZWN0aW9uLFxuICAgICAgY291bnQgPSBfcmVmLmNvdW50LFxuICAgICAgb2Zmc2V0ID0gX3JlZi5vZmZzZXQsXG4gICAgICBzdHlsZSA9IF9yZWYuc3R5bGUsXG4gICAgICB3cmFwID0gX3JlZi53cmFwLFxuICAgICAgb3RoZXJQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbXCJjaGlsZHJlblwiLCBcImNsYXNzTmFtZVwiLCBcImRpcmVjdGlvblwiLCBcImNvdW50XCIsIFwib2Zmc2V0XCIsIFwic3R5bGVcIiwgXCJ3cmFwXCJdKTtcblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgIHN0eWxlOiBfb2JqZWN0U3ByZWFkKHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXhEaXJlY3Rpb246IGRpcmVjdGlvbixcbiAgICAgIGZsZXhXcmFwOiB3cmFwID8gJ3dyYXAnIDogJ25vLXdyYXAnXG4gICAgfSwgc3R5bGUpXG4gIH0sIG90aGVyUHJvcHMpLCBSZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCwgaW5kZXgpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNsb25lRWxlbWVudChjaGlsZCwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjaGlsZC5wcm9wcyksIHt9LCB7XG4gICAgICBzdHlsZToge1xuICAgICAgICBmbGV4QmFzaXM6IHRvUGVyY2VudCgxMDAgLyBjb3VudCksXG4gICAgICAgIG1heFdpZHRoOiB0b1BlcmNlbnQoMTAwIC8gY291bnQpLFxuICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICAgIG1hcmdpbkxlZnQ6IG9mZnNldCAmJiBpbmRleCA9PT0gMCA/IHRvUGVyY2VudCgxMDAgKiBvZmZzZXQgLyBjb3VudCkgOiBudWxsXG4gICAgICB9XG4gICAgfSkpO1xuICB9KSk7XG59XG5GbGV4LnByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNvdW50OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGRpcmVjdGlvbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgb2Zmc2V0OiBQcm9wVHlwZXMubnVtYmVyLFxuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdE9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSksXG4gIHdyYXA6IFByb3BUeXBlcy5ib29sXG59OyIsImZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuaW1wb3J0IHsgZ2V0UmFuZ2UgfSBmcm9tICcuL2RhdGVzJztcbi8qKlxuICogUmV0dXJucyBhIHZhbHVlIG5vIHNtYWxsZXIgdGhhbiBtaW4gYW5kIG5vIGxhcmdlciB0aGFuIG1heC5cbiAqXG4gKiBAcGFyYW0geyp9IHZhbHVlIFZhbHVlIHRvIHJldHVybi5cbiAqIEBwYXJhbSB7Kn0gbWluIE1pbmltdW0gcmV0dXJuIHZhbHVlLlxuICogQHBhcmFtIHsqfSBtYXggTWF4aW11bSByZXR1cm4gdmFsdWUuXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGJldHdlZW4odmFsdWUsIG1pbiwgbWF4KSB7XG4gIGlmIChtaW4gJiYgbWluID4gdmFsdWUpIHtcbiAgICByZXR1cm4gbWluO1xuICB9XG5cbiAgaWYgKG1heCAmJiBtYXggPCB2YWx1ZSkge1xuICAgIHJldHVybiBtYXg7XG4gIH1cblxuICByZXR1cm4gdmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWx1ZVdpdGhpblJhbmdlKHZhbHVlLCByYW5nZSkge1xuICByZXR1cm4gcmFuZ2VbMF0gPD0gdmFsdWUgJiYgcmFuZ2VbMV0gPj0gdmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSYW5nZVdpdGhpblJhbmdlKGdyZWF0ZXJSYW5nZSwgc21hbGxlclJhbmdlKSB7XG4gIHJldHVybiBncmVhdGVyUmFuZ2VbMF0gPD0gc21hbGxlclJhbmdlWzBdICYmIGdyZWF0ZXJSYW5nZVsxXSA+PSBzbWFsbGVyUmFuZ2VbMV07XG59XG5leHBvcnQgZnVuY3Rpb24gZG9SYW5nZXNPdmVybGFwKHJhbmdlMSwgcmFuZ2UyKSB7XG4gIHJldHVybiBpc1ZhbHVlV2l0aGluUmFuZ2UocmFuZ2UxWzBdLCByYW5nZTIpIHx8IGlzVmFsdWVXaXRoaW5SYW5nZShyYW5nZTFbMV0sIHJhbmdlMik7XG59XG5cbmZ1bmN0aW9uIGdldFJhbmdlQ2xhc3NOYW1lcyh2YWx1ZVJhbmdlLCBkYXRlUmFuZ2UsIGJhc2VDbGFzc05hbWUpIHtcbiAgdmFyIGlzUmFuZ2UgPSBkb1Jhbmdlc092ZXJsYXAoZGF0ZVJhbmdlLCB2YWx1ZVJhbmdlKTtcbiAgdmFyIGNsYXNzZXMgPSBbXTtcblxuICBpZiAoaXNSYW5nZSkge1xuICAgIGNsYXNzZXMucHVzaChiYXNlQ2xhc3NOYW1lKTtcbiAgICB2YXIgaXNSYW5nZVN0YXJ0ID0gaXNWYWx1ZVdpdGhpblJhbmdlKHZhbHVlUmFuZ2VbMF0sIGRhdGVSYW5nZSk7XG4gICAgdmFyIGlzUmFuZ2VFbmQgPSBpc1ZhbHVlV2l0aGluUmFuZ2UodmFsdWVSYW5nZVsxXSwgZGF0ZVJhbmdlKTtcblxuICAgIGlmIChpc1JhbmdlU3RhcnQpIHtcbiAgICAgIGNsYXNzZXMucHVzaChcIlwiLmNvbmNhdChiYXNlQ2xhc3NOYW1lLCBcIlN0YXJ0XCIpKTtcbiAgICB9XG5cbiAgICBpZiAoaXNSYW5nZUVuZCkge1xuICAgICAgY2xhc3Nlcy5wdXNoKFwiXCIuY29uY2F0KGJhc2VDbGFzc05hbWUsIFwiRW5kXCIpKTtcbiAgICB9XG5cbiAgICBpZiAoaXNSYW5nZVN0YXJ0ICYmIGlzUmFuZ2VFbmQpIHtcbiAgICAgIGNsYXNzZXMucHVzaChcIlwiLmNvbmNhdChiYXNlQ2xhc3NOYW1lLCBcIkJvdGhFbmRzXCIpKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY2xhc3Nlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRpbGVDbGFzc2VzKCkge1xuICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge30sXG4gICAgICB2YWx1ZSA9IF9yZWYudmFsdWUsXG4gICAgICB2YWx1ZVR5cGUgPSBfcmVmLnZhbHVlVHlwZSxcbiAgICAgIGRhdGUgPSBfcmVmLmRhdGUsXG4gICAgICBkYXRlVHlwZSA9IF9yZWYuZGF0ZVR5cGUsXG4gICAgICBob3ZlciA9IF9yZWYuaG92ZXI7XG5cbiAgdmFyIGNsYXNzTmFtZSA9ICdyZWFjdC1jYWxlbmRhcl9fdGlsZSc7XG4gIHZhciBjbGFzc2VzID0gW2NsYXNzTmFtZV07XG5cbiAgaWYgKCFkYXRlKSB7XG4gICAgcmV0dXJuIGNsYXNzZXM7XG4gIH1cblxuICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0ZSkgJiYgIWRhdGVUeXBlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdnZXRUaWxlQ2xhc3NlcygpOiBVbmFibGUgdG8gZ2V0IHRpbGUgYWN0aXZpdHkgY2xhc3NlcyBiZWNhdXNlIG9uZSBvciBtb3JlIHJlcXVpcmVkIGFyZ3VtZW50cyB3ZXJlIG5vdCBwYXNzZWQuJyk7XG4gIH1cblxuICB2YXIgbm93ID0gbmV3IERhdGUoKTtcbiAgdmFyIGRhdGVSYW5nZSA9IEFycmF5LmlzQXJyYXkoZGF0ZSkgPyBkYXRlIDogZ2V0UmFuZ2UoZGF0ZVR5cGUsIGRhdGUpO1xuXG4gIGlmIChpc1ZhbHVlV2l0aGluUmFuZ2Uobm93LCBkYXRlUmFuZ2UpKSB7XG4gICAgY2xhc3Nlcy5wdXNoKFwiXCIuY29uY2F0KGNsYXNzTmFtZSwgXCItLW5vd1wiKSk7XG4gIH1cblxuICBpZiAoIXZhbHVlKSB7XG4gICAgcmV0dXJuIGNsYXNzZXM7XG4gIH1cblxuICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpICYmICF2YWx1ZVR5cGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2dldFRpbGVDbGFzc2VzKCk6IFVuYWJsZSB0byBnZXQgdGlsZSBhY3Rpdml0eSBjbGFzc2VzIGJlY2F1c2Ugb25lIG9yIG1vcmUgcmVxdWlyZWQgYXJndW1lbnRzIHdlcmUgbm90IHBhc3NlZC4nKTtcbiAgfVxuXG4gIHZhciB2YWx1ZVJhbmdlID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IGdldFJhbmdlKHZhbHVlVHlwZSwgdmFsdWUpO1xuXG4gIGlmIChpc1JhbmdlV2l0aGluUmFuZ2UodmFsdWVSYW5nZSwgZGF0ZVJhbmdlKSkge1xuICAgIGNsYXNzZXMucHVzaChcIlwiLmNvbmNhdChjbGFzc05hbWUsIFwiLS1hY3RpdmVcIikpO1xuICB9IGVsc2UgaWYgKGRvUmFuZ2VzT3ZlcmxhcCh2YWx1ZVJhbmdlLCBkYXRlUmFuZ2UpKSB7XG4gICAgY2xhc3Nlcy5wdXNoKFwiXCIuY29uY2F0KGNsYXNzTmFtZSwgXCItLWhhc0FjdGl2ZVwiKSk7XG4gIH1cblxuICB2YXIgdmFsdWVSYW5nZUNsYXNzTmFtZXMgPSBnZXRSYW5nZUNsYXNzTmFtZXModmFsdWVSYW5nZSwgZGF0ZVJhbmdlLCBcIlwiLmNvbmNhdChjbGFzc05hbWUsIFwiLS1yYW5nZVwiKSk7XG4gIGNsYXNzZXMucHVzaC5hcHBseShjbGFzc2VzLCBfdG9Db25zdW1hYmxlQXJyYXkodmFsdWVSYW5nZUNsYXNzTmFtZXMpKTtcblxuICBpZiAoaG92ZXIpIHtcbiAgICB2YXIgaG92ZXJSYW5nZSA9IGhvdmVyID4gdmFsdWVSYW5nZVsxXSA/IFt2YWx1ZVJhbmdlWzFdLCBob3Zlcl0gOiBbaG92ZXIsIHZhbHVlUmFuZ2VbMF1dO1xuICAgIHZhciBob3ZlclJhbmdlQ2xhc3NOYW1lcyA9IGdldFJhbmdlQ2xhc3NOYW1lcyhob3ZlclJhbmdlLCBkYXRlUmFuZ2UsIFwiXCIuY29uY2F0KGNsYXNzTmFtZSwgXCItLWhvdmVyXCIpKTtcbiAgICBjbGFzc2VzLnB1c2guYXBwbHkoY2xhc3NlcywgX3RvQ29uc3VtYWJsZUFycmF5KGhvdmVyUmFuZ2VDbGFzc05hbWVzKSk7XG4gIH1cblxuICByZXR1cm4gY2xhc3Nlcztcbn0iLCJmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgRmxleCBmcm9tICcuL0ZsZXgnO1xuaW1wb3J0IHsgZ2V0VGlsZUNsYXNzZXMgfSBmcm9tICcuL3NoYXJlZC91dGlscyc7XG5pbXBvcnQgeyB0aWxlR3JvdXBQcm9wcyB9IGZyb20gJy4vc2hhcmVkL3Byb3BUeXBlcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUaWxlR3JvdXAoX3JlZikge1xuICB2YXIgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBfcmVmJGNvdW50ID0gX3JlZi5jb3VudCxcbiAgICAgIGNvdW50ID0gX3JlZiRjb3VudCA9PT0gdm9pZCAwID8gMyA6IF9yZWYkY291bnQsXG4gICAgICBkYXRlVHJhbnNmb3JtID0gX3JlZi5kYXRlVHJhbnNmb3JtLFxuICAgICAgZGF0ZVR5cGUgPSBfcmVmLmRhdGVUeXBlLFxuICAgICAgZW5kID0gX3JlZi5lbmQsXG4gICAgICBob3ZlciA9IF9yZWYuaG92ZXIsXG4gICAgICBvZmZzZXQgPSBfcmVmLm9mZnNldCxcbiAgICAgIHN0YXJ0ID0gX3JlZi5zdGFydCxcbiAgICAgIF9yZWYkc3RlcCA9IF9yZWYuc3RlcCxcbiAgICAgIHN0ZXAgPSBfcmVmJHN0ZXAgPT09IHZvaWQgMCA/IDEgOiBfcmVmJHN0ZXAsXG4gICAgICBUaWxlID0gX3JlZi50aWxlLFxuICAgICAgdmFsdWUgPSBfcmVmLnZhbHVlLFxuICAgICAgdmFsdWVUeXBlID0gX3JlZi52YWx1ZVR5cGUsXG4gICAgICB0aWxlUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgW1wiY2xhc3NOYW1lXCIsIFwiY291bnRcIiwgXCJkYXRlVHJhbnNmb3JtXCIsIFwiZGF0ZVR5cGVcIiwgXCJlbmRcIiwgXCJob3ZlclwiLCBcIm9mZnNldFwiLCBcInN0YXJ0XCIsIFwic3RlcFwiLCBcInRpbGVcIiwgXCJ2YWx1ZVwiLCBcInZhbHVlVHlwZVwiXSk7XG5cbiAgdmFyIHRpbGVzID0gW107XG5cbiAgZm9yICh2YXIgcG9pbnQgPSBzdGFydDsgcG9pbnQgPD0gZW5kOyBwb2ludCArPSBzdGVwKSB7XG4gICAgdmFyIGRhdGUgPSBkYXRlVHJhbnNmb3JtKHBvaW50KTtcbiAgICB0aWxlcy5wdXNoKCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUaWxlLCBfZXh0ZW5kcyh7XG4gICAgICBrZXk6IGRhdGUuZ2V0VGltZSgpLFxuICAgICAgY2xhc3NlczogZ2V0VGlsZUNsYXNzZXMoe1xuICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgIHZhbHVlVHlwZTogdmFsdWVUeXBlLFxuICAgICAgICBkYXRlOiBkYXRlLFxuICAgICAgICBkYXRlVHlwZTogZGF0ZVR5cGUsXG4gICAgICAgIGhvdmVyOiBob3ZlclxuICAgICAgfSksXG4gICAgICBkYXRlOiBkYXRlLFxuICAgICAgcG9pbnQ6IHBvaW50XG4gICAgfSwgdGlsZVByb3BzKSkpO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEZsZXgsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICBjb3VudDogY291bnQsXG4gICAgb2Zmc2V0OiBvZmZzZXQsXG4gICAgd3JhcDogdHJ1ZVxuICB9LCB0aWxlcyk7XG59XG5UaWxlR3JvdXAucHJvcFR5cGVzID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0aWxlR3JvdXBQcm9wcyksIHt9LCB7XG4gIGFjdGl2ZVN0YXJ0RGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIGNvdW50OiBQcm9wVHlwZXMubnVtYmVyLFxuICBkYXRlVHJhbnNmb3JtOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBkYXRlVHlwZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgb2Zmc2V0OiBQcm9wVHlwZXMubnVtYmVyLFxuICBzdGVwOiBQcm9wVHlwZXMubnVtYmVyLFxuICB0aWxlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59KTsiLCJmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBtZXJnZUNsYXNzTmFtZXMgZnJvbSAnbWVyZ2UtY2xhc3MtbmFtZXMnO1xuaW1wb3J0IHsgdGlsZVByb3BzIH0gZnJvbSAnLi9zaGFyZWQvcHJvcFR5cGVzJztcblxuZnVuY3Rpb24gZ2V0VmFsdWUobmV4dFByb3BzLCBwcm9wKSB7XG4gIHZhciBhY3RpdmVTdGFydERhdGUgPSBuZXh0UHJvcHMuYWN0aXZlU3RhcnREYXRlLFxuICAgICAgZGF0ZSA9IG5leHRQcm9wcy5kYXRlLFxuICAgICAgdmlldyA9IG5leHRQcm9wcy52aWV3O1xuICByZXR1cm4gdHlwZW9mIHByb3AgPT09ICdmdW5jdGlvbicgPyBwcm9wKHtcbiAgICBhY3RpdmVTdGFydERhdGU6IGFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICBkYXRlOiBkYXRlLFxuICAgIHZpZXc6IHZpZXdcbiAgfSkgOiBwcm9wO1xufVxuXG52YXIgVGlsZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoVGlsZSwgX0NvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihUaWxlKTtcblxuICBmdW5jdGlvbiBUaWxlKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUaWxlKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsLmFwcGx5KF9zdXBlciwgW3RoaXNdLmNvbmNhdChhcmdzKSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic3RhdGVcIiwge30pO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFRpbGUsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGFjdGl2ZVN0YXJ0RGF0ZSA9IF90aGlzJHByb3BzLmFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNsYXNzZXMgPSBfdGhpcyRwcm9wcy5jbGFzc2VzLFxuICAgICAgICAgIGRhdGUgPSBfdGhpcyRwcm9wcy5kYXRlLFxuICAgICAgICAgIGZvcm1hdEFiYnIgPSBfdGhpcyRwcm9wcy5mb3JtYXRBYmJyLFxuICAgICAgICAgIGxvY2FsZSA9IF90aGlzJHByb3BzLmxvY2FsZSxcbiAgICAgICAgICBtYXhEYXRlID0gX3RoaXMkcHJvcHMubWF4RGF0ZSxcbiAgICAgICAgICBtYXhEYXRlVHJhbnNmb3JtID0gX3RoaXMkcHJvcHMubWF4RGF0ZVRyYW5zZm9ybSxcbiAgICAgICAgICBtaW5EYXRlID0gX3RoaXMkcHJvcHMubWluRGF0ZSxcbiAgICAgICAgICBtaW5EYXRlVHJhbnNmb3JtID0gX3RoaXMkcHJvcHMubWluRGF0ZVRyYW5zZm9ybSxcbiAgICAgICAgICBvbkNsaWNrID0gX3RoaXMkcHJvcHMub25DbGljayxcbiAgICAgICAgICBvbk1vdXNlT3ZlciA9IF90aGlzJHByb3BzLm9uTW91c2VPdmVyLFxuICAgICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMuc3R5bGUsXG4gICAgICAgICAgdGlsZURpc2FibGVkID0gX3RoaXMkcHJvcHMudGlsZURpc2FibGVkLFxuICAgICAgICAgIHZpZXcgPSBfdGhpcyRwcm9wcy52aWV3O1xuICAgICAgdmFyIF90aGlzJHN0YXRlID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgICB0aWxlQ2xhc3NOYW1lID0gX3RoaXMkc3RhdGUudGlsZUNsYXNzTmFtZSxcbiAgICAgICAgICB0aWxlQ29udGVudCA9IF90aGlzJHN0YXRlLnRpbGVDb250ZW50O1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBtZXJnZUNsYXNzTmFtZXMoY2xhc3NlcywgdGlsZUNsYXNzTmFtZSksXG4gICAgICAgIGRpc2FibGVkOiBtaW5EYXRlICYmIG1pbkRhdGVUcmFuc2Zvcm0obWluRGF0ZSkgPiBkYXRlIHx8IG1heERhdGUgJiYgbWF4RGF0ZVRyYW5zZm9ybShtYXhEYXRlKSA8IGRhdGUgfHwgdGlsZURpc2FibGVkICYmIHRpbGVEaXNhYmxlZCh7XG4gICAgICAgICAgYWN0aXZlU3RhcnREYXRlOiBhY3RpdmVTdGFydERhdGUsXG4gICAgICAgICAgZGF0ZTogZGF0ZSxcbiAgICAgICAgICB2aWV3OiB2aWV3XG4gICAgICAgIH0pLFxuICAgICAgICBvbkNsaWNrOiBvbkNsaWNrICYmIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIHJldHVybiBvbkNsaWNrKGRhdGUsIGV2ZW50KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Gb2N1czogb25Nb3VzZU92ZXIgJiYgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBvbk1vdXNlT3ZlcihkYXRlKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Nb3VzZU92ZXI6IG9uTW91c2VPdmVyICYmIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gb25Nb3VzZU92ZXIoZGF0ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgICAgdHlwZTogXCJidXR0b25cIlxuICAgICAgfSwgZm9ybWF0QWJiciA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYWJiclwiLCB7XG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiBmb3JtYXRBYmJyKGxvY2FsZSwgZGF0ZSlcbiAgICAgIH0sIGNoaWxkcmVuKSA6IGNoaWxkcmVuLCB0aWxlQ29udGVudCk7XG4gICAgfVxuICB9XSwgW3tcbiAgICBrZXk6IFwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXh0UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgICAgdmFyIHRpbGVDbGFzc05hbWUgPSBuZXh0UHJvcHMudGlsZUNsYXNzTmFtZSxcbiAgICAgICAgICB0aWxlQ29udGVudCA9IG5leHRQcm9wcy50aWxlQ29udGVudDtcbiAgICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcblxuICAgICAgaWYgKHRpbGVDbGFzc05hbWUgIT09IHByZXZTdGF0ZS50aWxlQ2xhc3NOYW1lUHJvcHMpIHtcbiAgICAgICAgbmV4dFN0YXRlLnRpbGVDbGFzc05hbWUgPSBnZXRWYWx1ZShuZXh0UHJvcHMsIHRpbGVDbGFzc05hbWUpO1xuICAgICAgICBuZXh0U3RhdGUudGlsZUNsYXNzTmFtZVByb3BzID0gdGlsZUNsYXNzTmFtZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRpbGVDb250ZW50ICE9PSBwcmV2U3RhdGUudGlsZUNvbnRlbnRQcm9wcykge1xuICAgICAgICBuZXh0U3RhdGUudGlsZUNvbnRlbnQgPSBnZXRWYWx1ZShuZXh0UHJvcHMsIHRpbGVDb250ZW50KTtcbiAgICAgICAgbmV4dFN0YXRlLnRpbGVDb250ZW50UHJvcHMgPSB0aWxlQ29udGVudDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5leHRTdGF0ZTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gVGlsZTtcbn0oQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgVGlsZSBhcyBkZWZhdWx0IH07XG5UaWxlLnByb3BUeXBlcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGlsZVByb3BzKSwge30sIHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gIGZvcm1hdEFiYnI6IFByb3BUeXBlcy5mdW5jLFxuICBtYXhEYXRlVHJhbnNmb3JtOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBtaW5EYXRlVHJhbnNmb3JtOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59KTsiLCJmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXREZWNhZGVTdGFydCwgZ2V0RGVjYWRlRW5kIH0gZnJvbSAnQHdvanRla21hai9kYXRlLXV0aWxzJztcbmltcG9ydCBUaWxlIGZyb20gJy4uL1RpbGUnO1xuaW1wb3J0IHsgZ2V0RGVjYWRlTGFiZWwgfSBmcm9tICcuLi9zaGFyZWQvZGF0ZXMnO1xuaW1wb3J0IHsgZm9ybWF0WWVhciBhcyBkZWZhdWx0Rm9ybWF0WWVhciB9IGZyb20gJy4uL3NoYXJlZC9kYXRlRm9ybWF0dGVyJztcbmltcG9ydCB7IHRpbGVQcm9wcyB9IGZyb20gJy4uL3NoYXJlZC9wcm9wVHlwZXMnO1xudmFyIGNsYXNzTmFtZSA9ICdyZWFjdC1jYWxlbmRhcl9fY2VudHVyeS12aWV3X19kZWNhZGVzX19kZWNhZGUnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGVjYWRlKF9yZWYpIHtcbiAgdmFyIGNsYXNzZXMgPSBfcmVmLmNsYXNzZXMsXG4gICAgICBfcmVmJGZvcm1hdFllYXIgPSBfcmVmLmZvcm1hdFllYXIsXG4gICAgICBmb3JtYXRZZWFyID0gX3JlZiRmb3JtYXRZZWFyID09PSB2b2lkIDAgPyBkZWZhdWx0Rm9ybWF0WWVhciA6IF9yZWYkZm9ybWF0WWVhcixcbiAgICAgIG90aGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgW1wiY2xhc3Nlc1wiLCBcImZvcm1hdFllYXJcIl0pO1xuXG4gIHZhciBkYXRlID0gb3RoZXJQcm9wcy5kYXRlLFxuICAgICAgbG9jYWxlID0gb3RoZXJQcm9wcy5sb2NhbGU7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUaWxlLCBfZXh0ZW5kcyh7fSwgb3RoZXJQcm9wcywge1xuICAgIGNsYXNzZXM6IFtdLmNvbmNhdChjbGFzc2VzLCBjbGFzc05hbWUpLFxuICAgIG1heERhdGVUcmFuc2Zvcm06IGdldERlY2FkZUVuZCxcbiAgICBtaW5EYXRlVHJhbnNmb3JtOiBnZXREZWNhZGVTdGFydCxcbiAgICB2aWV3OiBcImNlbnR1cnlcIlxuICB9KSwgZ2V0RGVjYWRlTGFiZWwobG9jYWxlLCBmb3JtYXRZZWFyLCBkYXRlKSk7XG59XG5EZWNhZGUucHJvcFR5cGVzID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0aWxlUHJvcHMpLCB7fSwge1xuICBmb3JtYXRZZWFyOiBQcm9wVHlwZXMuZnVuY1xufSk7IiwiZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXREZWNhZGVTdGFydCB9IGZyb20gJ0B3b2p0ZWttYWovZGF0ZS11dGlscyc7XG5pbXBvcnQgVGlsZUdyb3VwIGZyb20gJy4uL1RpbGVHcm91cCc7XG5pbXBvcnQgRGVjYWRlIGZyb20gJy4vRGVjYWRlJztcbmltcG9ydCB7IGdldEJlZ2luT2ZDZW50dXJ5WWVhciB9IGZyb20gJy4uL3NoYXJlZC9kYXRlcyc7XG5pbXBvcnQgeyB0aWxlR3JvdXBQcm9wcyB9IGZyb20gJy4uL3NoYXJlZC9wcm9wVHlwZXMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGVjYWRlcyhwcm9wcykge1xuICB2YXIgYWN0aXZlU3RhcnREYXRlID0gcHJvcHMuYWN0aXZlU3RhcnREYXRlO1xuICB2YXIgc3RhcnQgPSBnZXRCZWdpbk9mQ2VudHVyeVllYXIoYWN0aXZlU3RhcnREYXRlKTtcbiAgdmFyIGVuZCA9IHN0YXJ0ICsgOTk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUaWxlR3JvdXAsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGNsYXNzTmFtZTogXCJyZWFjdC1jYWxlbmRhcl9fY2VudHVyeS12aWV3X19kZWNhZGVzXCIsXG4gICAgZGF0ZVRyYW5zZm9ybTogZ2V0RGVjYWRlU3RhcnQsXG4gICAgZGF0ZVR5cGU6IFwiZGVjYWRlXCIsXG4gICAgZW5kOiBlbmQsXG4gICAgc3RhcnQ6IHN0YXJ0LFxuICAgIHN0ZXA6IDEwLFxuICAgIHRpbGU6IERlY2FkZVxuICB9KSk7XG59XG5EZWNhZGVzLnByb3BUeXBlcyA9IF9vYmplY3RTcHJlYWQoe30sIHRpbGVHcm91cFByb3BzKTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IERlY2FkZXMgZnJvbSAnLi9DZW50dXJ5Vmlldy9EZWNhZGVzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENlbnR1cnlWaWV3KHByb3BzKSB7XG4gIGZ1bmN0aW9uIHJlbmRlckRlY2FkZXMoKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KERlY2FkZXMsIHByb3BzKTtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcInJlYWN0LWNhbGVuZGFyX19jZW50dXJ5LXZpZXdcIlxuICB9LCByZW5kZXJEZWNhZGVzKCkpO1xufSIsImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpOyB2YXIga2V5LCBpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc291cmNlU3ltYm9sS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZVN5bWJvbEtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlU3ltYm9sS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoc291cmNlLCBrZXkpKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGdldFllYXJTdGFydCwgZ2V0WWVhckVuZCB9IGZyb20gJ0B3b2p0ZWttYWovZGF0ZS11dGlscyc7XG5pbXBvcnQgVGlsZSBmcm9tICcuLi9UaWxlJztcbmltcG9ydCB7IGZvcm1hdFllYXIgYXMgZGVmYXVsdEZvcm1hdFllYXIgfSBmcm9tICcuLi9zaGFyZWQvZGF0ZUZvcm1hdHRlcic7XG5pbXBvcnQgeyB0aWxlUHJvcHMgfSBmcm9tICcuLi9zaGFyZWQvcHJvcFR5cGVzJztcbnZhciBjbGFzc05hbWUgPSAncmVhY3QtY2FsZW5kYXJfX2RlY2FkZS12aWV3X195ZWFyc19feWVhcic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBZZWFyKF9yZWYpIHtcbiAgdmFyIGNsYXNzZXMgPSBfcmVmLmNsYXNzZXMsXG4gICAgICBfcmVmJGZvcm1hdFllYXIgPSBfcmVmLmZvcm1hdFllYXIsXG4gICAgICBmb3JtYXRZZWFyID0gX3JlZiRmb3JtYXRZZWFyID09PSB2b2lkIDAgPyBkZWZhdWx0Rm9ybWF0WWVhciA6IF9yZWYkZm9ybWF0WWVhcixcbiAgICAgIG90aGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgW1wiY2xhc3Nlc1wiLCBcImZvcm1hdFllYXJcIl0pO1xuXG4gIHZhciBkYXRlID0gb3RoZXJQcm9wcy5kYXRlLFxuICAgICAgbG9jYWxlID0gb3RoZXJQcm9wcy5sb2NhbGU7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUaWxlLCBfZXh0ZW5kcyh7fSwgb3RoZXJQcm9wcywge1xuICAgIGNsYXNzZXM6IFtdLmNvbmNhdChjbGFzc2VzLCBjbGFzc05hbWUpLFxuICAgIG1heERhdGVUcmFuc2Zvcm06IGdldFllYXJFbmQsXG4gICAgbWluRGF0ZVRyYW5zZm9ybTogZ2V0WWVhclN0YXJ0LFxuICAgIHZpZXc6IFwiZGVjYWRlXCJcbiAgfSksIGZvcm1hdFllYXIobG9jYWxlLCBkYXRlKSk7XG59XG5ZZWFyLnByb3BUeXBlcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGlsZVByb3BzKSwge30sIHtcbiAgZm9ybWF0WWVhcjogUHJvcFR5cGVzLmZ1bmNcbn0pOyIsImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRpbGVHcm91cCBmcm9tICcuLi9UaWxlR3JvdXAnO1xuaW1wb3J0IFllYXIgZnJvbSAnLi9ZZWFyJztcbmltcG9ydCB7IGdldEJlZ2luT2ZEZWNhZGVZZWFyIH0gZnJvbSAnLi4vc2hhcmVkL2RhdGVzJztcbmltcG9ydCB7IHRpbGVHcm91cFByb3BzIH0gZnJvbSAnLi4vc2hhcmVkL3Byb3BUeXBlcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBZZWFycyhwcm9wcykge1xuICB2YXIgYWN0aXZlU3RhcnREYXRlID0gcHJvcHMuYWN0aXZlU3RhcnREYXRlO1xuICB2YXIgc3RhcnQgPSBnZXRCZWdpbk9mRGVjYWRlWWVhcihhY3RpdmVTdGFydERhdGUpO1xuICB2YXIgZW5kID0gc3RhcnQgKyA5O1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGlsZUdyb3VwLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBjbGFzc05hbWU6IFwicmVhY3QtY2FsZW5kYXJfX2RlY2FkZS12aWV3X195ZWFyc1wiLFxuICAgIGRhdGVUcmFuc2Zvcm06IGZ1bmN0aW9uIGRhdGVUcmFuc2Zvcm0oeWVhcikge1xuICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgZGF0ZS5zZXRGdWxsWWVhcih5ZWFyLCAwLCAxKTtcbiAgICAgIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9LFxuICAgIGRhdGVUeXBlOiBcInllYXJcIixcbiAgICBlbmQ6IGVuZCxcbiAgICBzdGFydDogc3RhcnQsXG4gICAgdGlsZTogWWVhclxuICB9KSk7XG59XG5ZZWFycy5wcm9wVHlwZXMgPSBfb2JqZWN0U3ByZWFkKHt9LCB0aWxlR3JvdXBQcm9wcyk7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBZZWFycyBmcm9tICcuL0RlY2FkZVZpZXcvWWVhcnMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGVjYWRlVmlldyhwcm9wcykge1xuICBmdW5jdGlvbiByZW5kZXJZZWFycygpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoWWVhcnMsIHByb3BzKTtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcInJlYWN0LWNhbGVuZGFyX19kZWNhZGUtdmlld1wiXG4gIH0sIHJlbmRlclllYXJzKCkpO1xufSIsImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpOyB2YXIga2V5LCBpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc291cmNlU3ltYm9sS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZVN5bWJvbEtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlU3ltYm9sS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoc291cmNlLCBrZXkpKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGdldE1vbnRoU3RhcnQsIGdldE1vbnRoRW5kIH0gZnJvbSAnQHdvanRla21hai9kYXRlLXV0aWxzJztcbmltcG9ydCBUaWxlIGZyb20gJy4uL1RpbGUnO1xuaW1wb3J0IHsgZm9ybWF0TW9udGggYXMgZGVmYXVsdEZvcm1hdE1vbnRoLCBmb3JtYXRNb250aFllYXIgYXMgZGVmYXVsdEZvcm1hdE1vbnRoWWVhciB9IGZyb20gJy4uL3NoYXJlZC9kYXRlRm9ybWF0dGVyJztcbmltcG9ydCB7IHRpbGVQcm9wcyB9IGZyb20gJy4uL3NoYXJlZC9wcm9wVHlwZXMnO1xudmFyIGNsYXNzTmFtZSA9ICdyZWFjdC1jYWxlbmRhcl9feWVhci12aWV3X19tb250aHNfX21vbnRoJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vbnRoKF9yZWYpIHtcbiAgdmFyIGNsYXNzZXMgPSBfcmVmLmNsYXNzZXMsXG4gICAgICBfcmVmJGZvcm1hdE1vbnRoID0gX3JlZi5mb3JtYXRNb250aCxcbiAgICAgIGZvcm1hdE1vbnRoID0gX3JlZiRmb3JtYXRNb250aCA9PT0gdm9pZCAwID8gZGVmYXVsdEZvcm1hdE1vbnRoIDogX3JlZiRmb3JtYXRNb250aCxcbiAgICAgIF9yZWYkZm9ybWF0TW9udGhZZWFyID0gX3JlZi5mb3JtYXRNb250aFllYXIsXG4gICAgICBmb3JtYXRNb250aFllYXIgPSBfcmVmJGZvcm1hdE1vbnRoWWVhciA9PT0gdm9pZCAwID8gZGVmYXVsdEZvcm1hdE1vbnRoWWVhciA6IF9yZWYkZm9ybWF0TW9udGhZZWFyLFxuICAgICAgb3RoZXJQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbXCJjbGFzc2VzXCIsIFwiZm9ybWF0TW9udGhcIiwgXCJmb3JtYXRNb250aFllYXJcIl0pO1xuXG4gIHZhciBkYXRlID0gb3RoZXJQcm9wcy5kYXRlLFxuICAgICAgbG9jYWxlID0gb3RoZXJQcm9wcy5sb2NhbGU7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUaWxlLCBfZXh0ZW5kcyh7fSwgb3RoZXJQcm9wcywge1xuICAgIGNsYXNzZXM6IFtdLmNvbmNhdChjbGFzc2VzLCBjbGFzc05hbWUpLFxuICAgIGZvcm1hdEFiYnI6IGZvcm1hdE1vbnRoWWVhcixcbiAgICBtYXhEYXRlVHJhbnNmb3JtOiBnZXRNb250aEVuZCxcbiAgICBtaW5EYXRlVHJhbnNmb3JtOiBnZXRNb250aFN0YXJ0LFxuICAgIHZpZXc6IFwieWVhclwiXG4gIH0pLCBmb3JtYXRNb250aChsb2NhbGUsIGRhdGUpKTtcbn1cbk1vbnRoLnByb3BUeXBlcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGlsZVByb3BzKSwge30sIHtcbiAgZm9ybWF0TW9udGg6IFByb3BUeXBlcy5mdW5jLFxuICBmb3JtYXRNb250aFllYXI6IFByb3BUeXBlcy5mdW5jXG59KTsiLCJmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXRZZWFyIH0gZnJvbSAnQHdvanRla21hai9kYXRlLXV0aWxzJztcbmltcG9ydCBUaWxlR3JvdXAgZnJvbSAnLi4vVGlsZUdyb3VwJztcbmltcG9ydCBNb250aCBmcm9tICcuL01vbnRoJztcbmltcG9ydCB7IHRpbGVHcm91cFByb3BzIH0gZnJvbSAnLi4vc2hhcmVkL3Byb3BUeXBlcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNb250aHMocHJvcHMpIHtcbiAgdmFyIGFjdGl2ZVN0YXJ0RGF0ZSA9IHByb3BzLmFjdGl2ZVN0YXJ0RGF0ZTtcbiAgdmFyIHN0YXJ0ID0gMDtcbiAgdmFyIGVuZCA9IDExO1xuICB2YXIgeWVhciA9IGdldFllYXIoYWN0aXZlU3RhcnREYXRlKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRpbGVHcm91cCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgY2xhc3NOYW1lOiBcInJlYWN0LWNhbGVuZGFyX195ZWFyLXZpZXdfX21vbnRoc1wiLFxuICAgIGRhdGVUcmFuc2Zvcm06IGZ1bmN0aW9uIGRhdGVUcmFuc2Zvcm0obW9udGhJbmRleCkge1xuICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgZGF0ZS5zZXRGdWxsWWVhcih5ZWFyLCBtb250aEluZGV4LCAxKTtcbiAgICAgIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9LFxuICAgIGRhdGVUeXBlOiBcIm1vbnRoXCIsXG4gICAgZW5kOiBlbmQsXG4gICAgc3RhcnQ6IHN0YXJ0LFxuICAgIHRpbGU6IE1vbnRoXG4gIH0pKTtcbn1cbk1vbnRocy5wcm9wVHlwZXMgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRpbGVHcm91cFByb3BzKSwge30sIHtcbiAgbG9jYWxlOiBQcm9wVHlwZXMuc3RyaW5nXG59KTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1vbnRocyBmcm9tICcuL1llYXJWaWV3L01vbnRocyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBZZWFyVmlldyhwcm9wcykge1xuICBmdW5jdGlvbiByZW5kZXJNb250aHMoKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE1vbnRocywgcHJvcHMpO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwicmVhY3QtY2FsZW5kYXJfX3llYXItdmlld1wiXG4gIH0sIHJlbmRlck1vbnRocygpKTtcbn0iLCJmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXREYXlTdGFydCwgZ2V0RGF5RW5kIH0gZnJvbSAnQHdvanRla21hai9kYXRlLXV0aWxzJztcbmltcG9ydCBUaWxlIGZyb20gJy4uL1RpbGUnO1xuaW1wb3J0IHsgaXNXZWVrZW5kIH0gZnJvbSAnLi4vc2hhcmVkL2RhdGVzJztcbmltcG9ydCB7IGZvcm1hdERheSBhcyBkZWZhdWx0Rm9ybWF0RGF5LCBmb3JtYXRMb25nRGF0ZSBhcyBkZWZhdWx0Rm9ybWF0TG9uZ0RhdGUgfSBmcm9tICcuLi9zaGFyZWQvZGF0ZUZvcm1hdHRlcic7XG5pbXBvcnQgeyB0aWxlUHJvcHMgfSBmcm9tICcuLi9zaGFyZWQvcHJvcFR5cGVzJztcbnZhciBjbGFzc05hbWUgPSAncmVhY3QtY2FsZW5kYXJfX21vbnRoLXZpZXdfX2RheXNfX2RheSc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEYXkoX3JlZikge1xuICB2YXIgX3JlZiRmb3JtYXREYXkgPSBfcmVmLmZvcm1hdERheSxcbiAgICAgIGZvcm1hdERheSA9IF9yZWYkZm9ybWF0RGF5ID09PSB2b2lkIDAgPyBkZWZhdWx0Rm9ybWF0RGF5IDogX3JlZiRmb3JtYXREYXksXG4gICAgICBfcmVmJGZvcm1hdExvbmdEYXRlID0gX3JlZi5mb3JtYXRMb25nRGF0ZSxcbiAgICAgIGZvcm1hdExvbmdEYXRlID0gX3JlZiRmb3JtYXRMb25nRGF0ZSA9PT0gdm9pZCAwID8gZGVmYXVsdEZvcm1hdExvbmdEYXRlIDogX3JlZiRmb3JtYXRMb25nRGF0ZSxcbiAgICAgIGNhbGVuZGFyVHlwZSA9IF9yZWYuY2FsZW5kYXJUeXBlLFxuICAgICAgY2xhc3NlcyA9IF9yZWYuY2xhc3NlcyxcbiAgICAgIGN1cnJlbnRNb250aEluZGV4ID0gX3JlZi5jdXJyZW50TW9udGhJbmRleCxcbiAgICAgIG90aGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgW1wiZm9ybWF0RGF5XCIsIFwiZm9ybWF0TG9uZ0RhdGVcIiwgXCJjYWxlbmRhclR5cGVcIiwgXCJjbGFzc2VzXCIsIFwiY3VycmVudE1vbnRoSW5kZXhcIl0pO1xuXG4gIHZhciBkYXRlID0gb3RoZXJQcm9wcy5kYXRlLFxuICAgICAgbG9jYWxlID0gb3RoZXJQcm9wcy5sb2NhbGU7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUaWxlLCBfZXh0ZW5kcyh7fSwgb3RoZXJQcm9wcywge1xuICAgIGNsYXNzZXM6IFtdLmNvbmNhdChjbGFzc2VzLCBjbGFzc05hbWUsIGlzV2Vla2VuZChkYXRlLCBjYWxlbmRhclR5cGUpID8gXCJcIi5jb25jYXQoY2xhc3NOYW1lLCBcIi0td2Vla2VuZFwiKSA6IG51bGwsIGRhdGUuZ2V0TW9udGgoKSAhPT0gY3VycmVudE1vbnRoSW5kZXggPyBcIlwiLmNvbmNhdChjbGFzc05hbWUsIFwiLS1uZWlnaGJvcmluZ01vbnRoXCIpIDogbnVsbCksXG4gICAgZm9ybWF0QWJicjogZm9ybWF0TG9uZ0RhdGUsXG4gICAgbWF4RGF0ZVRyYW5zZm9ybTogZ2V0RGF5RW5kLFxuICAgIG1pbkRhdGVUcmFuc2Zvcm06IGdldERheVN0YXJ0LFxuICAgIHZpZXc6IFwibW9udGhcIlxuICB9KSwgZm9ybWF0RGF5KGxvY2FsZSwgZGF0ZSkpO1xufVxuRGF5LnByb3BUeXBlcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGlsZVByb3BzKSwge30sIHtcbiAgY3VycmVudE1vbnRoSW5kZXg6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgZm9ybWF0RGF5OiBQcm9wVHlwZXMuZnVuYyxcbiAgZm9ybWF0TG9uZ0RhdGU6IFByb3BUeXBlcy5mdW5jXG59KTsiLCJmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXRZZWFyLCBnZXRNb250aCwgZ2V0RGF5c0luTW9udGggfSBmcm9tICdAd29qdGVrbWFqL2RhdGUtdXRpbHMnO1xuaW1wb3J0IFRpbGVHcm91cCBmcm9tICcuLi9UaWxlR3JvdXAnO1xuaW1wb3J0IERheSBmcm9tICcuL0RheSc7XG5pbXBvcnQgeyBnZXREYXlPZldlZWsgfSBmcm9tICcuLi9zaGFyZWQvZGF0ZXMnO1xuaW1wb3J0IHsgaXNDYWxlbmRhclR5cGUsIHRpbGVHcm91cFByb3BzIH0gZnJvbSAnLi4vc2hhcmVkL3Byb3BUeXBlcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEYXlzKHByb3BzKSB7XG4gIHZhciBhY3RpdmVTdGFydERhdGUgPSBwcm9wcy5hY3RpdmVTdGFydERhdGUsXG4gICAgICBjYWxlbmRhclR5cGUgPSBwcm9wcy5jYWxlbmRhclR5cGU7XG5cbiAgdmFyIHNob3dGaXhlZE51bWJlck9mV2Vla3MgPSBwcm9wcy5zaG93Rml4ZWROdW1iZXJPZldlZWtzLFxuICAgICAgc2hvd05laWdoYm9yaW5nTW9udGggPSBwcm9wcy5zaG93TmVpZ2hib3JpbmdNb250aCxcbiAgICAgIG90aGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIFtcInNob3dGaXhlZE51bWJlck9mV2Vla3NcIiwgXCJzaG93TmVpZ2hib3JpbmdNb250aFwiXSk7XG5cbiAgdmFyIHllYXIgPSBnZXRZZWFyKGFjdGl2ZVN0YXJ0RGF0ZSk7XG4gIHZhciBtb250aEluZGV4ID0gZ2V0TW9udGgoYWN0aXZlU3RhcnREYXRlKTtcbiAgdmFyIGhhc0ZpeGVkTnVtYmVyT2ZXZWVrcyA9IHNob3dGaXhlZE51bWJlck9mV2Vla3MgfHwgc2hvd05laWdoYm9yaW5nTW9udGg7XG4gIHZhciBkYXlPZldlZWsgPSBnZXREYXlPZldlZWsoYWN0aXZlU3RhcnREYXRlLCBjYWxlbmRhclR5cGUpO1xuICB2YXIgb2Zmc2V0ID0gaGFzRml4ZWROdW1iZXJPZldlZWtzID8gMCA6IGRheU9mV2VlaztcbiAgLyoqXG4gICAqIERlZmluZXMgb24gd2hpY2ggZGF5IG9mIHRoZSBtb250aCB0aGUgZ3JpZCBzaGFsbCBzdGFydC4gSWYgd2Ugc2ltcGx5IHNob3cgY3VycmVudFxuICAgKiBtb250aCwgd2Ugb2J2aW91c2x5IHN0YXJ0IG9uIGRheSBvbmUsIGJ1dCBpZiBzaG93TmVpZ2hib3JpbmdNb250aCBpcyBzZXQgdG9cbiAgICogdHJ1ZSwgd2UgbmVlZCB0byBmaW5kIHRoZSBiZWdpbm5pbmcgb2YgdGhlIHdlZWsgdGhlIGZpcnN0IGRheSBvZiB0aGUgbW9udGggaXMgaW4uXG4gICAqL1xuXG4gIHZhciBzdGFydCA9IChoYXNGaXhlZE51bWJlck9mV2Vla3MgPyAtZGF5T2ZXZWVrIDogMCkgKyAxO1xuICAvKipcbiAgICogRGVmaW5lcyBvbiB3aGljaCBkYXkgb2YgdGhlIG1vbnRoIHRoZSBncmlkIHNoYWxsIGVuZC4gSWYgd2Ugc2ltcGx5IHNob3cgY3VycmVudFxuICAgKiBtb250aCwgd2UgbmVlZCB0byBzdG9wIG9uIHRoZSBsYXN0IGRheSBvZiB0aGUgbW9udGgsIGJ1dCBpZiBzaG93TmVpZ2hib3JpbmdNb250aFxuICAgKiBpcyBzZXQgdG8gdHJ1ZSwgd2UgbmVlZCB0byBmaW5kIHRoZSBlbmQgb2YgdGhlIHdlZWsgdGhlIGxhc3QgZGF5IG9mIHRoZSBtb250aCBpcyBpbi5cbiAgICovXG5cbiAgdmFyIGVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoc2hvd0ZpeGVkTnVtYmVyT2ZXZWVrcykge1xuICAgICAgLy8gQWx3YXlzIHNob3cgNiB3ZWVrc1xuICAgICAgcmV0dXJuIHN0YXJ0ICsgNiAqIDcgLSAxO1xuICAgIH1cblxuICAgIHZhciBkYXlzSW5Nb250aCA9IGdldERheXNJbk1vbnRoKGFjdGl2ZVN0YXJ0RGF0ZSk7XG5cbiAgICBpZiAoc2hvd05laWdoYm9yaW5nTW9udGgpIHtcbiAgICAgIHZhciBhY3RpdmVFbmREYXRlID0gbmV3IERhdGUoKTtcbiAgICAgIGFjdGl2ZUVuZERhdGUuc2V0RnVsbFllYXIoeWVhciwgbW9udGhJbmRleCwgZGF5c0luTW9udGgpO1xuICAgICAgYWN0aXZlRW5kRGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgICAgIHZhciBkYXlzVW50aWxFbmRPZlRoZVdlZWsgPSA3IC0gZ2V0RGF5T2ZXZWVrKGFjdGl2ZUVuZERhdGUsIGNhbGVuZGFyVHlwZSkgLSAxO1xuICAgICAgcmV0dXJuIGRheXNJbk1vbnRoICsgZGF5c1VudGlsRW5kT2ZUaGVXZWVrO1xuICAgIH1cblxuICAgIHJldHVybiBkYXlzSW5Nb250aDtcbiAgfSgpO1xuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUaWxlR3JvdXAsIF9leHRlbmRzKHt9LCBvdGhlclByb3BzLCB7XG4gICAgY2xhc3NOYW1lOiBcInJlYWN0LWNhbGVuZGFyX19tb250aC12aWV3X19kYXlzXCIsXG4gICAgY291bnQ6IDcsXG4gICAgY3VycmVudE1vbnRoSW5kZXg6IG1vbnRoSW5kZXgsXG4gICAgZGF0ZVRyYW5zZm9ybTogZnVuY3Rpb24gZGF0ZVRyYW5zZm9ybShkYXkpIHtcbiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTtcbiAgICAgIGRhdGUuc2V0RnVsbFllYXIoeWVhciwgbW9udGhJbmRleCwgZGF5KTtcbiAgICAgIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9LFxuICAgIGRhdGVUeXBlOiBcImRheVwiLFxuICAgIGVuZDogZW5kLFxuICAgIG9mZnNldDogb2Zmc2V0LFxuICAgIHN0YXJ0OiBzdGFydCxcbiAgICB0aWxlOiBEYXlcbiAgfSkpO1xufVxuRGF5cy5wcm9wVHlwZXMgPSBfb2JqZWN0U3ByZWFkKHtcbiAgY2FsZW5kYXJUeXBlOiBpc0NhbGVuZGFyVHlwZS5pc1JlcXVpcmVkLFxuICBzaG93Rml4ZWROdW1iZXJPZldlZWtzOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2hvd05laWdoYm9yaW5nTW9udGg6IFByb3BUeXBlcy5ib29sXG59LCB0aWxlR3JvdXBQcm9wcyk7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXRZZWFyLCBnZXRNb250aCwgZ2V0TW9udGhTdGFydCB9IGZyb20gJ0B3b2p0ZWttYWovZGF0ZS11dGlscyc7XG5pbXBvcnQgRmxleCBmcm9tICcuLi9GbGV4JztcbmltcG9ydCB7IGdldERheU9mV2VlayB9IGZyb20gJy4uL3NoYXJlZC9kYXRlcyc7XG5pbXBvcnQgeyBmb3JtYXRXZWVrZGF5LCBmb3JtYXRTaG9ydFdlZWtkYXkgYXMgZGVmYXVsdEZvcm1hdFNob3J0V2Vla2RheSB9IGZyb20gJy4uL3NoYXJlZC9kYXRlRm9ybWF0dGVyJztcbmltcG9ydCB7IGlzQ2FsZW5kYXJUeXBlIH0gZnJvbSAnLi4vc2hhcmVkL3Byb3BUeXBlcyc7XG52YXIgY2xhc3NOYW1lID0gJ3JlYWN0LWNhbGVuZGFyX19tb250aC12aWV3X193ZWVrZGF5cyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBXZWVrZGF5cyhwcm9wcykge1xuICB2YXIgY2FsZW5kYXJUeXBlID0gcHJvcHMuY2FsZW5kYXJUeXBlLFxuICAgICAgX3Byb3BzJGZvcm1hdFNob3J0V2VlID0gcHJvcHMuZm9ybWF0U2hvcnRXZWVrZGF5LFxuICAgICAgZm9ybWF0U2hvcnRXZWVrZGF5ID0gX3Byb3BzJGZvcm1hdFNob3J0V2VlID09PSB2b2lkIDAgPyBkZWZhdWx0Rm9ybWF0U2hvcnRXZWVrZGF5IDogX3Byb3BzJGZvcm1hdFNob3J0V2VlLFxuICAgICAgbG9jYWxlID0gcHJvcHMubG9jYWxlLFxuICAgICAgb25Nb3VzZUxlYXZlID0gcHJvcHMub25Nb3VzZUxlYXZlO1xuICB2YXIgYW55RGF0ZSA9IG5ldyBEYXRlKCk7XG4gIHZhciBiZWdpbk9mTW9udGggPSBnZXRNb250aFN0YXJ0KGFueURhdGUpO1xuICB2YXIgeWVhciA9IGdldFllYXIoYmVnaW5PZk1vbnRoKTtcbiAgdmFyIG1vbnRoSW5kZXggPSBnZXRNb250aChiZWdpbk9mTW9udGgpO1xuICB2YXIgd2Vla2RheXMgPSBbXTtcblxuICBmb3IgKHZhciB3ZWVrZGF5ID0gMTsgd2Vla2RheSA8PSA3OyB3ZWVrZGF5ICs9IDEpIHtcbiAgICB2YXIgd2Vla2RheURhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aEluZGV4LCB3ZWVrZGF5IC0gZ2V0RGF5T2ZXZWVrKGJlZ2luT2ZNb250aCwgY2FsZW5kYXJUeXBlKSk7XG4gICAgdmFyIGFiYnIgPSBmb3JtYXRXZWVrZGF5KGxvY2FsZSwgd2Vla2RheURhdGUpO1xuICAgIHdlZWtkYXlzLnB1c2goIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGtleTogd2Vla2RheSxcbiAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQoY2xhc3NOYW1lLCBcIl9fd2Vla2RheVwiKVxuICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYWJiclwiLCB7XG4gICAgICBcImFyaWEtbGFiZWxcIjogYWJicixcbiAgICAgIHRpdGxlOiBhYmJyXG4gICAgfSwgZm9ybWF0U2hvcnRXZWVrZGF5KGxvY2FsZSwgd2Vla2RheURhdGUpLnJlcGxhY2UoJy4nLCAnJykpKSk7XG4gIH1cblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRmxleCwge1xuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgIGNvdW50OiA3LFxuICAgIG9uRm9jdXM6IG9uTW91c2VMZWF2ZSxcbiAgICBvbk1vdXNlT3Zlcjogb25Nb3VzZUxlYXZlXG4gIH0sIHdlZWtkYXlzKTtcbn1cbldlZWtkYXlzLnByb3BUeXBlcyA9IHtcbiAgY2FsZW5kYXJUeXBlOiBpc0NhbGVuZGFyVHlwZS5pc1JlcXVpcmVkLFxuICBmb3JtYXRTaG9ydFdlZWtkYXk6IFByb3BUeXBlcy5mdW5jLFxuICBsb2NhbGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG9uTW91c2VMZWF2ZTogUHJvcFR5cGVzLmZ1bmNcbn07IiwiZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBXZWVrTnVtYmVyKF9yZWYpIHtcbiAgdmFyIGRhdGUgPSBfcmVmLmRhdGUsXG4gICAgICBvbkNsaWNrV2Vla051bWJlciA9IF9yZWYub25DbGlja1dlZWtOdW1iZXIsXG4gICAgICB3ZWVrTnVtYmVyID0gX3JlZi53ZWVrTnVtYmVyO1xuICB2YXIgcHJvcHMgPSB7XG4gICAgY2xhc3NOYW1lOiAncmVhY3QtY2FsZW5kYXJfX3RpbGUnLFxuICAgIHN0eWxlOiB7XG4gICAgICBmbGV4R3JvdzogMVxuICAgIH1cbiAgfTtcbiAgdmFyIGNoaWxkcmVuID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIHdlZWtOdW1iZXIpO1xuICByZXR1cm4gb25DbGlja1dlZWtOdW1iZXIgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICByZXR1cm4gb25DbGlja1dlZWtOdW1iZXIod2Vla051bWJlciwgZGF0ZSwgZXZlbnQpO1xuICAgIH0sXG4gICAgdHlwZTogXCJidXR0b25cIlxuICB9KSwgY2hpbGRyZW4pIDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgcHJvcHMsIGNoaWxkcmVuKTtcbn1cbldlZWtOdW1iZXIucHJvcFR5cGVzID0ge1xuICBkYXRlOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKS5pc1JlcXVpcmVkLFxuICBvbkNsaWNrV2Vla051bWJlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIHdlZWtOdW1iZXI6IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWRcbn07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXRZZWFyLCBnZXRNb250aCwgZ2V0RGF0ZSwgZ2V0RGF5c0luTW9udGggfSBmcm9tICdAd29qdGVrbWFqL2RhdGUtdXRpbHMnO1xuaW1wb3J0IFdlZWtOdW1iZXIgZnJvbSAnLi9XZWVrTnVtYmVyJztcbmltcG9ydCBGbGV4IGZyb20gJy4uL0ZsZXgnO1xuaW1wb3J0IHsgZ2V0QmVnaW5PZldlZWssIGdldERheU9mV2VlaywgZ2V0V2Vla051bWJlciB9IGZyb20gJy4uL3NoYXJlZC9kYXRlcyc7XG5pbXBvcnQgeyBpc0NhbGVuZGFyVHlwZSB9IGZyb20gJy4uL3NoYXJlZC9wcm9wVHlwZXMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gV2Vla051bWJlcnMocHJvcHMpIHtcbiAgdmFyIGFjdGl2ZVN0YXJ0RGF0ZSA9IHByb3BzLmFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgIGNhbGVuZGFyVHlwZSA9IHByb3BzLmNhbGVuZGFyVHlwZSxcbiAgICAgIG9uQ2xpY2tXZWVrTnVtYmVyID0gcHJvcHMub25DbGlja1dlZWtOdW1iZXIsXG4gICAgICBvbk1vdXNlTGVhdmUgPSBwcm9wcy5vbk1vdXNlTGVhdmUsXG4gICAgICBzaG93Rml4ZWROdW1iZXJPZldlZWtzID0gcHJvcHMuc2hvd0ZpeGVkTnVtYmVyT2ZXZWVrcztcblxuICB2YXIgbnVtYmVyT2ZXZWVrcyA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoc2hvd0ZpeGVkTnVtYmVyT2ZXZWVrcykge1xuICAgICAgcmV0dXJuIDY7XG4gICAgfVxuXG4gICAgdmFyIG51bWJlck9mRGF5cyA9IGdldERheXNJbk1vbnRoKGFjdGl2ZVN0YXJ0RGF0ZSk7XG4gICAgdmFyIHN0YXJ0V2Vla2RheSA9IGdldERheU9mV2VlayhhY3RpdmVTdGFydERhdGUsIGNhbGVuZGFyVHlwZSk7XG4gICAgdmFyIGRheXMgPSBudW1iZXJPZkRheXMgLSAoNyAtIHN0YXJ0V2Vla2RheSk7XG4gICAgcmV0dXJuIDEgKyBNYXRoLmNlaWwoZGF5cyAvIDcpO1xuICB9KCk7XG5cbiAgdmFyIGRhdGVzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB5ZWFyID0gZ2V0WWVhcihhY3RpdmVTdGFydERhdGUpO1xuICAgIHZhciBtb250aEluZGV4ID0gZ2V0TW9udGgoYWN0aXZlU3RhcnREYXRlKTtcbiAgICB2YXIgZGF5ID0gZ2V0RGF0ZShhY3RpdmVTdGFydERhdGUpO1xuICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBudW1iZXJPZldlZWtzOyBpbmRleCArPSAxKSB7XG4gICAgICByZXN1bHQucHVzaChnZXRCZWdpbk9mV2VlayhuZXcgRGF0ZSh5ZWFyLCBtb250aEluZGV4LCBkYXkgKyBpbmRleCAqIDcpLCBjYWxlbmRhclR5cGUpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9KCk7XG5cbiAgdmFyIHdlZWtOdW1iZXJzID0gZGF0ZXMubWFwKGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgcmV0dXJuIGdldFdlZWtOdW1iZXIoZGF0ZSwgY2FsZW5kYXJUeXBlKTtcbiAgfSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChGbGV4LCB7XG4gICAgY2xhc3NOYW1lOiBcInJlYWN0LWNhbGVuZGFyX19tb250aC12aWV3X193ZWVrTnVtYmVyc1wiLFxuICAgIGNvdW50OiBudW1iZXJPZldlZWtzLFxuICAgIGRpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICBvbkZvY3VzOiBvbk1vdXNlTGVhdmUsXG4gICAgb25Nb3VzZU92ZXI6IG9uTW91c2VMZWF2ZSxcbiAgICBzdHlsZToge1xuICAgICAgZmxleEJhc2lzOiAnY2FsYygxMDAlICogKDEgLyA4KScsXG4gICAgICBmbGV4U2hyaW5rOiAwXG4gICAgfVxuICB9LCB3ZWVrTnVtYmVycy5tYXAoZnVuY3Rpb24gKHdlZWtOdW1iZXIsIHdlZWtJbmRleCkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChXZWVrTnVtYmVyLCB7XG4gICAgICBrZXk6IHdlZWtOdW1iZXIsXG4gICAgICBkYXRlOiBkYXRlc1t3ZWVrSW5kZXhdLFxuICAgICAgb25DbGlja1dlZWtOdW1iZXI6IG9uQ2xpY2tXZWVrTnVtYmVyLFxuICAgICAgd2Vla051bWJlcjogd2Vla051bWJlclxuICAgIH0pO1xuICB9KSk7XG59XG5XZWVrTnVtYmVycy5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2ZVN0YXJ0RGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgY2FsZW5kYXJUeXBlOiBpc0NhbGVuZGFyVHlwZS5pc1JlcXVpcmVkLFxuICBvbkNsaWNrV2Vla051bWJlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uTW91c2VMZWF2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIHNob3dGaXhlZE51bWJlck9mV2Vla3M6IFByb3BUeXBlcy5ib29sXG59OyIsImZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7IHZhciBrZXksIGk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlU3ltYm9sS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IG1lcmdlQ2xhc3NOYW1lcyBmcm9tICdtZXJnZS1jbGFzcy1uYW1lcyc7XG5pbXBvcnQgRGF5cyBmcm9tICcuL01vbnRoVmlldy9EYXlzJztcbmltcG9ydCBXZWVrZGF5cyBmcm9tICcuL01vbnRoVmlldy9XZWVrZGF5cyc7XG5pbXBvcnQgV2Vla051bWJlcnMgZnJvbSAnLi9Nb250aFZpZXcvV2Vla051bWJlcnMnO1xuaW1wb3J0IHsgQ0FMRU5EQVJfVFlQRVMsIENBTEVOREFSX1RZUEVfTE9DQUxFUyB9IGZyb20gJy4vc2hhcmVkL2NvbnN0JztcbmltcG9ydCB7IGlzQ2FsZW5kYXJUeXBlIH0gZnJvbSAnLi9zaGFyZWQvcHJvcFR5cGVzJztcblxuZnVuY3Rpb24gZ2V0Q2FsZW5kYXJUeXBlRnJvbUxvY2FsZShsb2NhbGUpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKENBTEVOREFSX1RZUEVfTE9DQUxFUykuZmluZChmdW5jdGlvbiAoY2FsZW5kYXJUeXBlKSB7XG4gICAgcmV0dXJuIENBTEVOREFSX1RZUEVfTE9DQUxFU1tjYWxlbmRhclR5cGVdLmluY2x1ZGVzKGxvY2FsZSk7XG4gIH0pIHx8IENBTEVOREFSX1RZUEVTLklTT184NjAxO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNb250aFZpZXcocHJvcHMpIHtcbiAgdmFyIGFjdGl2ZVN0YXJ0RGF0ZSA9IHByb3BzLmFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgIGxvY2FsZSA9IHByb3BzLmxvY2FsZSxcbiAgICAgIG9uTW91c2VMZWF2ZSA9IHByb3BzLm9uTW91c2VMZWF2ZSxcbiAgICAgIHNob3dGaXhlZE51bWJlck9mV2Vla3MgPSBwcm9wcy5zaG93Rml4ZWROdW1iZXJPZldlZWtzO1xuXG4gIHZhciBfcHJvcHMkY2FsZW5kYXJUeXBlID0gcHJvcHMuY2FsZW5kYXJUeXBlLFxuICAgICAgY2FsZW5kYXJUeXBlID0gX3Byb3BzJGNhbGVuZGFyVHlwZSA9PT0gdm9pZCAwID8gZ2V0Q2FsZW5kYXJUeXBlRnJvbUxvY2FsZShsb2NhbGUpIDogX3Byb3BzJGNhbGVuZGFyVHlwZSxcbiAgICAgIGZvcm1hdFNob3J0V2Vla2RheSA9IHByb3BzLmZvcm1hdFNob3J0V2Vla2RheSxcbiAgICAgIG9uQ2xpY2tXZWVrTnVtYmVyID0gcHJvcHMub25DbGlja1dlZWtOdW1iZXIsXG4gICAgICBzaG93V2Vla051bWJlcnMgPSBwcm9wcy5zaG93V2Vla051bWJlcnMsXG4gICAgICBjaGlsZFByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHByb3BzLCBbXCJjYWxlbmRhclR5cGVcIiwgXCJmb3JtYXRTaG9ydFdlZWtkYXlcIiwgXCJvbkNsaWNrV2Vla051bWJlclwiLCBcInNob3dXZWVrTnVtYmVyc1wiXSk7XG5cbiAgZnVuY3Rpb24gcmVuZGVyV2Vla2RheXMoKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFdlZWtkYXlzLCB7XG4gICAgICBjYWxlbmRhclR5cGU6IGNhbGVuZGFyVHlwZSxcbiAgICAgIGZvcm1hdFNob3J0V2Vla2RheTogZm9ybWF0U2hvcnRXZWVrZGF5LFxuICAgICAgbG9jYWxlOiBsb2NhbGUsXG4gICAgICBvbk1vdXNlTGVhdmU6IG9uTW91c2VMZWF2ZVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVuZGVyV2Vla051bWJlcnMoKSB7XG4gICAgaWYgKCFzaG93V2Vla051bWJlcnMpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChXZWVrTnVtYmVycywge1xuICAgICAgYWN0aXZlU3RhcnREYXRlOiBhY3RpdmVTdGFydERhdGUsXG4gICAgICBjYWxlbmRhclR5cGU6IGNhbGVuZGFyVHlwZSxcbiAgICAgIG9uQ2xpY2tXZWVrTnVtYmVyOiBvbkNsaWNrV2Vla051bWJlcixcbiAgICAgIG9uTW91c2VMZWF2ZTogb25Nb3VzZUxlYXZlLFxuICAgICAgc2hvd0ZpeGVkTnVtYmVyT2ZXZWVrczogc2hvd0ZpeGVkTnVtYmVyT2ZXZWVrc1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVuZGVyRGF5cygpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRGF5cywgX2V4dGVuZHMoe1xuICAgICAgY2FsZW5kYXJUeXBlOiBjYWxlbmRhclR5cGVcbiAgICB9LCBjaGlsZFByb3BzKSk7XG4gIH1cblxuICB2YXIgY2xhc3NOYW1lID0gJ3JlYWN0LWNhbGVuZGFyX19tb250aC12aWV3JztcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IG1lcmdlQ2xhc3NOYW1lcyhjbGFzc05hbWUsIHNob3dXZWVrTnVtYmVycyA/IFwiXCIuY29uY2F0KGNsYXNzTmFtZSwgXCItLXdlZWtOdW1iZXJzXCIpIDogJycpXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBzdHlsZToge1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgYWxpZ25JdGVtczogJ2ZsZXgtZW5kJ1xuICAgIH1cbiAgfSwgcmVuZGVyV2Vla051bWJlcnMoKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIHN0eWxlOiB7XG4gICAgICBmbGV4R3JvdzogMSxcbiAgICAgIHdpZHRoOiAnMTAwJSdcbiAgICB9XG4gIH0sIHJlbmRlcldlZWtkYXlzKCksIHJlbmRlckRheXMoKSkpKTtcbn1cbk1vbnRoVmlldy5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2ZVN0YXJ0RGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgY2FsZW5kYXJUeXBlOiBpc0NhbGVuZGFyVHlwZSxcbiAgZm9ybWF0U2hvcnRXZWVrZGF5OiBQcm9wVHlwZXMuZnVuYyxcbiAgbG9jYWxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBvbkNsaWNrV2Vla051bWJlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uTW91c2VMZWF2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIHNob3dGaXhlZE51bWJlck9mV2Vla3M6IFByb3BUeXBlcy5ib29sLFxuICBzaG93V2Vla051bWJlcnM6IFByb3BUeXBlcy5ib29sXG59OyIsImZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7IHZhciBrZXksIGk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlU3ltYm9sS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgbWVyZ2VDbGFzc05hbWVzIGZyb20gJ21lcmdlLWNsYXNzLW5hbWVzJztcbmltcG9ydCBOYXZpZ2F0aW9uIGZyb20gJy4vQ2FsZW5kYXIvTmF2aWdhdGlvbic7XG5pbXBvcnQgQ2VudHVyeVZpZXcgZnJvbSAnLi9DZW50dXJ5Vmlldyc7XG5pbXBvcnQgRGVjYWRlVmlldyBmcm9tICcuL0RlY2FkZVZpZXcnO1xuaW1wb3J0IFllYXJWaWV3IGZyb20gJy4vWWVhclZpZXcnO1xuaW1wb3J0IE1vbnRoVmlldyBmcm9tICcuL01vbnRoVmlldyc7XG5pbXBvcnQgeyBnZXRCZWdpbiwgZ2V0QmVnaW5OZXh0LCBnZXRFbmQsIGdldFZhbHVlUmFuZ2UgfSBmcm9tICcuL3NoYXJlZC9kYXRlcyc7XG5pbXBvcnQgeyBpc0NhbGVuZGFyVHlwZSwgaXNDbGFzc05hbWUsIGlzTWF4RGF0ZSwgaXNNaW5EYXRlLCBpc1JlZiwgaXNWYWx1ZSwgaXNWaWV3IH0gZnJvbSAnLi9zaGFyZWQvcHJvcFR5cGVzJztcbmltcG9ydCB7IGJldHdlZW4gfSBmcm9tICcuL3NoYXJlZC91dGlscyc7XG52YXIgZGVmYXVsdE1pbkRhdGUgPSBuZXcgRGF0ZSgpO1xuZGVmYXVsdE1pbkRhdGUuc2V0RnVsbFllYXIoMSwgMCwgMSk7XG5kZWZhdWx0TWluRGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbnZhciBkZWZhdWx0TWF4RGF0ZSA9IG5ldyBEYXRlKDguNjRlMTUpO1xudmFyIGJhc2VDbGFzc05hbWUgPSAncmVhY3QtY2FsZW5kYXInO1xudmFyIGFsbFZpZXdzID0gWydjZW50dXJ5JywgJ2RlY2FkZScsICd5ZWFyJywgJ21vbnRoJ107XG52YXIgYWxsVmFsdWVUeXBlcyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoYWxsVmlld3Muc2xpY2UoMSkpLCBbJ2RheSddKTtcblxuZnVuY3Rpb24gdG9EYXRlKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gbmV3IERhdGUodmFsdWUpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHZpZXdzIGFycmF5IHdpdGggZGlzYWxsb3dlZCB2YWx1ZXMgY3V0IG9mZi5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdldExpbWl0ZWRWaWV3cyhtaW5EZXRhaWwsIG1heERldGFpbCkge1xuICByZXR1cm4gYWxsVmlld3Muc2xpY2UoYWxsVmlld3MuaW5kZXhPZihtaW5EZXRhaWwpLCBhbGxWaWV3cy5pbmRleE9mKG1heERldGFpbCkgKyAxKTtcbn1cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIGEgZ2l2ZW4gdmlldyBpcyBhbGxvd2VkIHdpdGggY3VycmVudGx5IGFwcGxpZWQgc2V0dGluZ3MuXG4gKi9cblxuXG5mdW5jdGlvbiBpc1ZpZXdBbGxvd2VkKHZpZXcsIG1pbkRldGFpbCwgbWF4RGV0YWlsKSB7XG4gIHZhciB2aWV3cyA9IGdldExpbWl0ZWRWaWV3cyhtaW5EZXRhaWwsIG1heERldGFpbCk7XG4gIHJldHVybiB2aWV3cy5pbmRleE9mKHZpZXcpICE9PSAtMTtcbn1cbi8qKlxuICogR2V0cyBlaXRoZXIgcHJvdmlkZWQgdmlldyBpZiBhbGxvd2VkIGJ5IG1pbkRldGFpbCBhbmQgbWF4RGV0YWlsLCBvciBnZXRzXG4gKiB0aGUgZGVmYXVsdCB2aWV3IGlmIG5vdCBhbGxvd2VkLlxuICovXG5cblxuZnVuY3Rpb24gZ2V0Vmlldyh2aWV3LCBtaW5EZXRhaWwsIG1heERldGFpbCkge1xuICBpZiAoaXNWaWV3QWxsb3dlZCh2aWV3LCBtaW5EZXRhaWwsIG1heERldGFpbCkpIHtcbiAgICByZXR1cm4gdmlldztcbiAgfVxuXG4gIHJldHVybiBtYXhEZXRhaWw7XG59XG4vKipcbiAqIFJldHVybnMgdmFsdWUgdHlwZSB0aGF0IGNhbiBiZSByZXR1cm5lZCB3aXRoIGN1cnJlbnRseSBhcHBsaWVkIHNldHRpbmdzLlxuICovXG5cblxuZnVuY3Rpb24gZ2V0VmFsdWVUeXBlKG1heERldGFpbCkge1xuICByZXR1cm4gYWxsVmFsdWVUeXBlc1thbGxWaWV3cy5pbmRleE9mKG1heERldGFpbCldO1xufVxuXG5mdW5jdGlvbiBnZXRWYWx1ZSh2YWx1ZSwgaW5kZXgpIHtcbiAgaWYgKCF2YWx1ZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIHJhd1ZhbHVlID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUubGVuZ3RoID09PSAyID8gdmFsdWVbaW5kZXhdIDogdmFsdWU7XG5cbiAgaWYgKCFyYXdWYWx1ZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIHZhbHVlRGF0ZSA9IHRvRGF0ZShyYXdWYWx1ZSk7XG5cbiAgaWYgKGlzTmFOKHZhbHVlRGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBkYXRlOiBcIi5jb25jYXQodmFsdWUpKTtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZURhdGU7XG59XG5cbmZ1bmN0aW9uIGdldERldGFpbFZhbHVlKF9yZWYsIGluZGV4KSB7XG4gIHZhciB2YWx1ZSA9IF9yZWYudmFsdWUsXG4gICAgICBtaW5EYXRlID0gX3JlZi5taW5EYXRlLFxuICAgICAgbWF4RGF0ZSA9IF9yZWYubWF4RGF0ZSxcbiAgICAgIG1heERldGFpbCA9IF9yZWYubWF4RGV0YWlsO1xuICB2YXIgdmFsdWVQaWVjZSA9IGdldFZhbHVlKHZhbHVlLCBpbmRleCk7XG5cbiAgaWYgKCF2YWx1ZVBpZWNlKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgdmFsdWVUeXBlID0gZ2V0VmFsdWVUeXBlKG1heERldGFpbCk7XG4gIHZhciBkZXRhaWxWYWx1ZUZyb20gPSBbZ2V0QmVnaW4sIGdldEVuZF1baW5kZXhdKHZhbHVlVHlwZSwgdmFsdWVQaWVjZSk7XG4gIHJldHVybiBiZXR3ZWVuKGRldGFpbFZhbHVlRnJvbSwgbWluRGF0ZSwgbWF4RGF0ZSk7XG59XG5cbnZhciBnZXREZXRhaWxWYWx1ZUZyb20gPSBmdW5jdGlvbiBnZXREZXRhaWxWYWx1ZUZyb20oYXJncykge1xuICByZXR1cm4gZ2V0RGV0YWlsVmFsdWUoYXJncywgMCk7XG59O1xuXG52YXIgZ2V0RGV0YWlsVmFsdWVUbyA9IGZ1bmN0aW9uIGdldERldGFpbFZhbHVlVG8oYXJncykge1xuICByZXR1cm4gZ2V0RGV0YWlsVmFsdWUoYXJncywgMSk7XG59O1xuXG52YXIgZ2V0RGV0YWlsVmFsdWVBcnJheSA9IGZ1bmN0aW9uIGdldERldGFpbFZhbHVlQXJyYXkoYXJncykge1xuICB2YXIgdmFsdWUgPSBhcmdzLnZhbHVlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBbZ2V0RGV0YWlsVmFsdWVGcm9tLCBnZXREZXRhaWxWYWx1ZVRvXS5tYXAoZnVuY3Rpb24gKGZuKSB7XG4gICAgcmV0dXJuIGZuKGFyZ3MpO1xuICB9KTtcbn07XG5cbmZ1bmN0aW9uIGdldEFjdGl2ZVN0YXJ0RGF0ZShwcm9wcykge1xuICB2YXIgbWF4RGF0ZSA9IHByb3BzLm1heERhdGUsXG4gICAgICBtYXhEZXRhaWwgPSBwcm9wcy5tYXhEZXRhaWwsXG4gICAgICBtaW5EYXRlID0gcHJvcHMubWluRGF0ZSxcbiAgICAgIG1pbkRldGFpbCA9IHByb3BzLm1pbkRldGFpbCxcbiAgICAgIHZhbHVlID0gcHJvcHMudmFsdWUsXG4gICAgICB2aWV3ID0gcHJvcHMudmlldztcbiAgdmFyIHJhbmdlVHlwZSA9IGdldFZpZXcodmlldywgbWluRGV0YWlsLCBtYXhEZXRhaWwpO1xuICB2YXIgdmFsdWVGcm9tID0gZ2V0RGV0YWlsVmFsdWVGcm9tKHtcbiAgICB2YWx1ZTogdmFsdWUsXG4gICAgbWluRGF0ZTogbWluRGF0ZSxcbiAgICBtYXhEYXRlOiBtYXhEYXRlLFxuICAgIG1heERldGFpbDogbWF4RGV0YWlsXG4gIH0pIHx8IG5ldyBEYXRlKCk7XG4gIHJldHVybiBnZXRCZWdpbihyYW5nZVR5cGUsIHZhbHVlRnJvbSk7XG59XG5cbmZ1bmN0aW9uIGdldEluaXRpYWxBY3RpdmVTdGFydERhdGUocHJvcHMpIHtcbiAgdmFyIGFjdGl2ZVN0YXJ0RGF0ZSA9IHByb3BzLmFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgIGRlZmF1bHRBY3RpdmVTdGFydERhdGUgPSBwcm9wcy5kZWZhdWx0QWN0aXZlU3RhcnREYXRlLFxuICAgICAgZGVmYXVsdFZhbHVlID0gcHJvcHMuZGVmYXVsdFZhbHVlLFxuICAgICAgZGVmYXVsdFZpZXcgPSBwcm9wcy5kZWZhdWx0VmlldyxcbiAgICAgIG1heERldGFpbCA9IHByb3BzLm1heERldGFpbCxcbiAgICAgIG1pbkRldGFpbCA9IHByb3BzLm1pbkRldGFpbCxcbiAgICAgIHZhbHVlID0gcHJvcHMudmFsdWUsXG4gICAgICB2aWV3ID0gcHJvcHMudmlldyxcbiAgICAgIG90aGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIFtcImFjdGl2ZVN0YXJ0RGF0ZVwiLCBcImRlZmF1bHRBY3RpdmVTdGFydERhdGVcIiwgXCJkZWZhdWx0VmFsdWVcIiwgXCJkZWZhdWx0Vmlld1wiLCBcIm1heERldGFpbFwiLCBcIm1pbkRldGFpbFwiLCBcInZhbHVlXCIsIFwidmlld1wiXSk7XG5cbiAgdmFyIHJhbmdlVHlwZSA9IGdldFZpZXcodmlldywgbWluRGV0YWlsLCBtYXhEZXRhaWwpO1xuICB2YXIgdmFsdWVGcm9tID0gYWN0aXZlU3RhcnREYXRlIHx8IGRlZmF1bHRBY3RpdmVTdGFydERhdGU7XG5cbiAgaWYgKHZhbHVlRnJvbSkge1xuICAgIHJldHVybiBnZXRCZWdpbihyYW5nZVR5cGUsIHZhbHVlRnJvbSk7XG4gIH1cblxuICByZXR1cm4gZ2V0QWN0aXZlU3RhcnREYXRlKF9vYmplY3RTcHJlYWQoe1xuICAgIG1heERldGFpbDogbWF4RGV0YWlsLFxuICAgIG1pbkRldGFpbDogbWluRGV0YWlsLFxuICAgIHZhbHVlOiB2YWx1ZSB8fCBkZWZhdWx0VmFsdWUsXG4gICAgdmlldzogdmlldyB8fCBkZWZhdWx0Vmlld1xuICB9LCBvdGhlclByb3BzKSk7XG59XG5cbnZhciBnZXRJc1NpbmdsZVZhbHVlID0gZnVuY3Rpb24gZ2V0SXNTaW5nbGVWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgJiYgW10uY29uY2F0KHZhbHVlKS5sZW5ndGggPT09IDE7XG59O1xuXG52YXIgQ2FsZW5kYXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKENhbGVuZGFyLCBfQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKENhbGVuZGFyKTtcblxuICBmdW5jdGlvbiBDYWxlbmRhcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2FsZW5kYXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIF9hcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgX2FyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfc3VwZXIuY2FsbC5hcHBseShfc3VwZXIsIFt0aGlzXS5jb25jYXQoX2FyZ3MpKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJzdGF0ZVwiLCB7XG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9kZXN0cnVjdHVyaW5nLWFzc2lnbm1lbnQgKi9cbiAgICAgIGFjdGl2ZVN0YXJ0RGF0ZTogX3RoaXMucHJvcHMuZGVmYXVsdEFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgIHZhbHVlOiBfdGhpcy5wcm9wcy5kZWZhdWx0VmFsdWUsXG4gICAgICB2aWV3OiBfdGhpcy5wcm9wcy5kZWZhdWx0Vmlld1xuICAgICAgLyogZXNsaW50LWVuYWJsZSByZWFjdC9kZXN0cnVjdHVyaW5nLWFzc2lnbm1lbnQgKi9cblxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNldFN0YXRlQW5kQ2FsbENhbGxiYWNrc1wiLCBmdW5jdGlvbiAobmV4dFN0YXRlLCBldmVudCwgY2FsbGJhY2spIHtcbiAgICAgIHZhciBfYXNzZXJ0VGhpc0luaXRpYWxpemUgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSxcbiAgICAgICAgICBwcmV2aW91c0FjdGl2ZVN0YXJ0RGF0ZSA9IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZS5hY3RpdmVTdGFydERhdGUsXG4gICAgICAgICAgcHJldmlvdXNWaWV3ID0gX2Fzc2VydFRoaXNJbml0aWFsaXplLnZpZXc7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGFsbG93UGFydGlhbFJhbmdlID0gX3RoaXMkcHJvcHMuYWxsb3dQYXJ0aWFsUmFuZ2UsXG4gICAgICAgICAgb25BY3RpdmVTdGFydERhdGVDaGFuZ2UgPSBfdGhpcyRwcm9wcy5vbkFjdGl2ZVN0YXJ0RGF0ZUNoYW5nZSxcbiAgICAgICAgICBvbkNoYW5nZSA9IF90aGlzJHByb3BzLm9uQ2hhbmdlLFxuICAgICAgICAgIG9uVmlld0NoYW5nZSA9IF90aGlzJHByb3BzLm9uVmlld0NoYW5nZSxcbiAgICAgICAgICBzZWxlY3RSYW5nZSA9IF90aGlzJHByb3BzLnNlbGVjdFJhbmdlO1xuICAgICAgdmFyIHByZXZBcmdzID0ge1xuICAgICAgICBhY3RpdmVTdGFydERhdGU6IHByZXZpb3VzQWN0aXZlU3RhcnREYXRlLFxuICAgICAgICB2aWV3OiBwcmV2aW91c1ZpZXdcbiAgICAgIH07XG5cbiAgICAgIF90aGlzLnNldFN0YXRlKG5leHRTdGF0ZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IHtcbiAgICAgICAgICBhY3RpdmVTdGFydERhdGU6IG5leHRTdGF0ZS5hY3RpdmVTdGFydERhdGUgfHwgX3RoaXMuYWN0aXZlU3RhcnREYXRlLFxuICAgICAgICAgIHZhbHVlOiBuZXh0U3RhdGUudmFsdWUgfHwgX3RoaXMudmFsdWUsXG4gICAgICAgICAgdmlldzogbmV4dFN0YXRlLnZpZXcgfHwgX3RoaXMudmlld1xuICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIHNob3VsZFVwZGF0ZShrZXkpIHtcbiAgICAgICAgICByZXR1cm4gKC8vIEtleSBtdXN0IGV4aXN0LCBhbmTigKZcbiAgICAgICAgICAgIGtleSBpbiBuZXh0U3RhdGUgJiYgKCAvLyDigKZrZXkgY2hhbmdlZCBmcm9tIHVuZGVmaW5lZCB0byBkZWZpbmVkIG9yIHRoZSBvdGhlciB3YXkgYXJvdW5kLCBvcuKAplxuICAgICAgICAgICAgX3R5cGVvZihuZXh0U3RhdGVba2V5XSkgIT09IF90eXBlb2YocHJldkFyZ3Nba2V5XSkgLy8g4oCmdmFsdWUgY2hhbmdlZC5cbiAgICAgICAgICAgIHx8IChuZXh0U3RhdGVba2V5XSBpbnN0YW5jZW9mIERhdGUgPyBuZXh0U3RhdGVba2V5XS5nZXRUaW1lKCkgIT09IHByZXZBcmdzW2tleV0uZ2V0VGltZSgpIDogbmV4dFN0YXRlW2tleV0gIT09IHByZXZBcmdzW2tleV0pKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc2hvdWxkVXBkYXRlKCdhY3RpdmVTdGFydERhdGUnKSkge1xuICAgICAgICAgIGlmIChvbkFjdGl2ZVN0YXJ0RGF0ZUNoYW5nZSkgb25BY3RpdmVTdGFydERhdGVDaGFuZ2UoYXJncyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc2hvdWxkVXBkYXRlKCd2aWV3JykpIHtcbiAgICAgICAgICBpZiAob25WaWV3Q2hhbmdlKSBvblZpZXdDaGFuZ2UoYXJncyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc2hvdWxkVXBkYXRlKCd2YWx1ZScpKSB7XG4gICAgICAgICAgaWYgKG9uQ2hhbmdlKSB7XG4gICAgICAgICAgICBpZiAoc2VsZWN0UmFuZ2UpIHtcbiAgICAgICAgICAgICAgdmFyIGlzU2luZ2xlVmFsdWUgPSBnZXRJc1NpbmdsZVZhbHVlKG5leHRTdGF0ZS52YWx1ZSk7XG5cbiAgICAgICAgICAgICAgaWYgKCFpc1NpbmdsZVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgb25DaGFuZ2UobmV4dFN0YXRlLnZhbHVlLCBldmVudCk7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoYWxsb3dQYXJ0aWFsUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICBvbkNoYW5nZShbbmV4dFN0YXRlLnZhbHVlXSwgZXZlbnQpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBvbkNoYW5nZShuZXh0U3RhdGUudmFsdWUsIGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKGFyZ3MpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2V0QWN0aXZlU3RhcnREYXRlXCIsIGZ1bmN0aW9uIChhY3RpdmVTdGFydERhdGUpIHtcbiAgICAgIF90aGlzLnNldFN0YXRlQW5kQ2FsbENhbGxiYWNrcyh7XG4gICAgICAgIGFjdGl2ZVN0YXJ0RGF0ZTogYWN0aXZlU3RhcnREYXRlXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJkcmlsbERvd25cIiwgZnVuY3Rpb24gKG5leHRBY3RpdmVTdGFydERhdGUsIGV2ZW50KSB7XG4gICAgICBpZiAoIV90aGlzLmRyaWxsRG93bkF2YWlsYWJsZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIF90aGlzLm9uQ2xpY2tUaWxlKG5leHRBY3RpdmVTdGFydERhdGUsIGV2ZW50KTtcblxuICAgICAgdmFyIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZTIgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSxcbiAgICAgICAgICB2aWV3ID0gX2Fzc2VydFRoaXNJbml0aWFsaXplMi52aWV3LFxuICAgICAgICAgIHZpZXdzID0gX2Fzc2VydFRoaXNJbml0aWFsaXplMi52aWV3cztcblxuICAgICAgdmFyIG9uRHJpbGxEb3duID0gX3RoaXMucHJvcHMub25EcmlsbERvd247XG4gICAgICB2YXIgbmV4dFZpZXcgPSB2aWV3c1t2aWV3cy5pbmRleE9mKHZpZXcpICsgMV07XG5cbiAgICAgIF90aGlzLnNldFN0YXRlQW5kQ2FsbENhbGxiYWNrcyh7XG4gICAgICAgIGFjdGl2ZVN0YXJ0RGF0ZTogbmV4dEFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgICAgdmlldzogbmV4dFZpZXdcbiAgICAgIH0sIHVuZGVmaW5lZCwgb25EcmlsbERvd24pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImRyaWxsVXBcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCFfdGhpcy5kcmlsbFVwQXZhaWxhYmxlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZTMgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSxcbiAgICAgICAgICBhY3RpdmVTdGFydERhdGUgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemUzLmFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgICAgICB2aWV3ID0gX2Fzc2VydFRoaXNJbml0aWFsaXplMy52aWV3LFxuICAgICAgICAgIHZpZXdzID0gX2Fzc2VydFRoaXNJbml0aWFsaXplMy52aWV3cztcblxuICAgICAgdmFyIG9uRHJpbGxVcCA9IF90aGlzLnByb3BzLm9uRHJpbGxVcDtcbiAgICAgIHZhciBuZXh0VmlldyA9IHZpZXdzW3ZpZXdzLmluZGV4T2YodmlldykgLSAxXTtcbiAgICAgIHZhciBuZXh0QWN0aXZlU3RhcnREYXRlID0gZ2V0QmVnaW4obmV4dFZpZXcsIGFjdGl2ZVN0YXJ0RGF0ZSk7XG5cbiAgICAgIF90aGlzLnNldFN0YXRlQW5kQ2FsbENhbGxiYWNrcyh7XG4gICAgICAgIGFjdGl2ZVN0YXJ0RGF0ZTogbmV4dEFjdGl2ZVN0YXJ0RGF0ZSxcbiAgICAgICAgdmlldzogbmV4dFZpZXdcbiAgICAgIH0sIHVuZGVmaW5lZCwgb25EcmlsbFVwKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJvbkNoYW5nZVwiLCBmdW5jdGlvbiAodmFsdWUsIGV2ZW50KSB7XG4gICAgICB2YXIgc2VsZWN0UmFuZ2UgPSBfdGhpcy5wcm9wcy5zZWxlY3RSYW5nZTtcblxuICAgICAgX3RoaXMub25DbGlja1RpbGUodmFsdWUsIGV2ZW50KTtcblxuICAgICAgdmFyIG5leHRWYWx1ZTtcblxuICAgICAgaWYgKHNlbGVjdFJhbmdlKSB7XG4gICAgICAgIC8vIFJhbmdlIHNlbGVjdGlvbiB0dXJuZWQgb25cbiAgICAgICAgdmFyIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZTQgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSxcbiAgICAgICAgICAgIHByZXZpb3VzVmFsdWUgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemU0LnZhbHVlLFxuICAgICAgICAgICAgdmFsdWVUeXBlID0gX2Fzc2VydFRoaXNJbml0aWFsaXplNC52YWx1ZVR5cGU7XG5cbiAgICAgICAgaWYgKCFnZXRJc1NpbmdsZVZhbHVlKHByZXZpb3VzVmFsdWUpKSB7XG4gICAgICAgICAgLy8gVmFsdWUgaGFzIDAgb3IgMiBlbGVtZW50cyAtIGVpdGhlciB3YXkgd2UncmUgc3RhcnRpbmcgYSBuZXcgYXJyYXlcbiAgICAgICAgICAvLyBGaXJzdCB2YWx1ZVxuICAgICAgICAgIG5leHRWYWx1ZSA9IGdldEJlZ2luKHZhbHVlVHlwZSwgdmFsdWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFNlY29uZCB2YWx1ZVxuICAgICAgICAgIG5leHRWYWx1ZSA9IGdldFZhbHVlUmFuZ2UodmFsdWVUeXBlLCBwcmV2aW91c1ZhbHVlLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJhbmdlIHNlbGVjdGlvbiB0dXJuZWQgb2ZmXG4gICAgICAgIG5leHRWYWx1ZSA9IF90aGlzLmdldFByb2Nlc3NlZFZhbHVlKHZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIG5leHRBY3RpdmVTdGFydERhdGUgPSBnZXRBY3RpdmVTdGFydERhdGUoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBfdGhpcy5wcm9wcyksIHt9LCB7XG4gICAgICAgIHZhbHVlOiBuZXh0VmFsdWVcbiAgICAgIH0pKTtcbiAgICAgIGV2ZW50LnBlcnNpc3QoKTtcblxuICAgICAgX3RoaXMuc2V0U3RhdGVBbmRDYWxsQ2FsbGJhY2tzKHtcbiAgICAgICAgYWN0aXZlU3RhcnREYXRlOiBuZXh0QWN0aXZlU3RhcnREYXRlLFxuICAgICAgICB2YWx1ZTogbmV4dFZhbHVlXG4gICAgICB9LCBldmVudCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwib25DbGlja1RpbGVcIiwgZnVuY3Rpb24gKHZhbHVlLCBldmVudCkge1xuICAgICAgdmFyIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZTUgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSxcbiAgICAgICAgICB2aWV3ID0gX2Fzc2VydFRoaXNJbml0aWFsaXplNS52aWV3O1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgb25DbGlja0RheSA9IF90aGlzJHByb3BzMi5vbkNsaWNrRGF5LFxuICAgICAgICAgIG9uQ2xpY2tEZWNhZGUgPSBfdGhpcyRwcm9wczIub25DbGlja0RlY2FkZSxcbiAgICAgICAgICBvbkNsaWNrTW9udGggPSBfdGhpcyRwcm9wczIub25DbGlja01vbnRoLFxuICAgICAgICAgIG9uQ2xpY2tZZWFyID0gX3RoaXMkcHJvcHMyLm9uQ2xpY2tZZWFyO1xuXG4gICAgICB2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHN3aXRjaCAodmlldykge1xuICAgICAgICAgIGNhc2UgJ2NlbnR1cnknOlxuICAgICAgICAgICAgcmV0dXJuIG9uQ2xpY2tEZWNhZGU7XG5cbiAgICAgICAgICBjYXNlICdkZWNhZGUnOlxuICAgICAgICAgICAgcmV0dXJuIG9uQ2xpY2tZZWFyO1xuXG4gICAgICAgICAgY2FzZSAneWVhcic6XG4gICAgICAgICAgICByZXR1cm4gb25DbGlja01vbnRoO1xuXG4gICAgICAgICAgY2FzZSAnbW9udGgnOlxuICAgICAgICAgICAgcmV0dXJuIG9uQ2xpY2tEYXk7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2aWV3OiBcIi5jb25jYXQodmlldywgXCIuXCIpKTtcbiAgICAgICAgfVxuICAgICAgfSgpO1xuXG4gICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKHZhbHVlLCBldmVudCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwib25Nb3VzZU92ZXJcIiwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBfdGhpcy5zZXRTdGF0ZShmdW5jdGlvbiAocHJldlN0YXRlKSB7XG4gICAgICAgIGlmIChwcmV2U3RhdGUuaG92ZXIgJiYgcHJldlN0YXRlLmhvdmVyLmdldFRpbWUoKSA9PT0gdmFsdWUuZ2V0VGltZSgpKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhvdmVyOiB2YWx1ZVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwib25Nb3VzZUxlYXZlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaG92ZXI6IG51bGxcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENhbGVuZGFyLCBbe1xuICAgIGtleTogXCJnZXRQcm9jZXNzZWRWYWx1ZVwiLFxuXG4gICAgLyoqXG4gICAgICogR2V0cyBjdXJyZW50IHZhbHVlIGluIGEgZGVzaXJlZCBmb3JtYXQuXG4gICAgICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFByb2Nlc3NlZFZhbHVlKHZhbHVlKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBtaW5EYXRlID0gX3RoaXMkcHJvcHMzLm1pbkRhdGUsXG4gICAgICAgICAgbWF4RGF0ZSA9IF90aGlzJHByb3BzMy5tYXhEYXRlLFxuICAgICAgICAgIG1heERldGFpbCA9IF90aGlzJHByb3BzMy5tYXhEZXRhaWwsXG4gICAgICAgICAgcmV0dXJuVmFsdWUgPSBfdGhpcyRwcm9wczMucmV0dXJuVmFsdWU7XG5cbiAgICAgIHZhciBwcm9jZXNzRnVuY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHN3aXRjaCAocmV0dXJuVmFsdWUpIHtcbiAgICAgICAgICBjYXNlICdzdGFydCc6XG4gICAgICAgICAgICByZXR1cm4gZ2V0RGV0YWlsVmFsdWVGcm9tO1xuXG4gICAgICAgICAgY2FzZSAnZW5kJzpcbiAgICAgICAgICAgIHJldHVybiBnZXREZXRhaWxWYWx1ZVRvO1xuXG4gICAgICAgICAgY2FzZSAncmFuZ2UnOlxuICAgICAgICAgICAgcmV0dXJuIGdldERldGFpbFZhbHVlQXJyYXk7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHJldHVyblZhbHVlLicpO1xuICAgICAgICB9XG4gICAgICB9KCk7XG5cbiAgICAgIHJldHVybiBwcm9jZXNzRnVuY3Rpb24oe1xuICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgIG1pbkRhdGU6IG1pbkRhdGUsXG4gICAgICAgIG1heERhdGU6IG1heERhdGUsXG4gICAgICAgIG1heERldGFpbDogbWF4RGV0YWlsXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyQ29udGVudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJDb250ZW50KG5leHQpIHtcbiAgICAgIHZhciBjdXJyZW50QWN0aXZlU3RhcnREYXRlID0gdGhpcy5hY3RpdmVTdGFydERhdGUsXG4gICAgICAgICAgb25Nb3VzZU92ZXIgPSB0aGlzLm9uTW91c2VPdmVyLFxuICAgICAgICAgIHZhbHVlVHlwZSA9IHRoaXMudmFsdWVUeXBlLFxuICAgICAgICAgIHZhbHVlID0gdGhpcy52YWx1ZSxcbiAgICAgICAgICB2aWV3ID0gdGhpcy52aWV3O1xuICAgICAgdmFyIF90aGlzJHByb3BzNCA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgY2FsZW5kYXJUeXBlID0gX3RoaXMkcHJvcHM0LmNhbGVuZGFyVHlwZSxcbiAgICAgICAgICBsb2NhbGUgPSBfdGhpcyRwcm9wczQubG9jYWxlLFxuICAgICAgICAgIG1heERhdGUgPSBfdGhpcyRwcm9wczQubWF4RGF0ZSxcbiAgICAgICAgICBtaW5EYXRlID0gX3RoaXMkcHJvcHM0Lm1pbkRhdGUsXG4gICAgICAgICAgc2VsZWN0UmFuZ2UgPSBfdGhpcyRwcm9wczQuc2VsZWN0UmFuZ2UsXG4gICAgICAgICAgdGlsZUNsYXNzTmFtZSA9IF90aGlzJHByb3BzNC50aWxlQ2xhc3NOYW1lLFxuICAgICAgICAgIHRpbGVDb250ZW50ID0gX3RoaXMkcHJvcHM0LnRpbGVDb250ZW50LFxuICAgICAgICAgIHRpbGVEaXNhYmxlZCA9IF90aGlzJHByb3BzNC50aWxlRGlzYWJsZWQ7XG4gICAgICB2YXIgaG92ZXIgPSB0aGlzLmhvdmVyO1xuICAgICAgdmFyIGFjdGl2ZVN0YXJ0RGF0ZSA9IG5leHQgPyBnZXRCZWdpbk5leHQodmlldywgY3VycmVudEFjdGl2ZVN0YXJ0RGF0ZSkgOiBnZXRCZWdpbih2aWV3LCBjdXJyZW50QWN0aXZlU3RhcnREYXRlKTtcbiAgICAgIHZhciBvbkNsaWNrID0gdGhpcy5kcmlsbERvd25BdmFpbGFibGUgPyB0aGlzLmRyaWxsRG93biA6IHRoaXMub25DaGFuZ2U7XG4gICAgICB2YXIgY29tbW9uUHJvcHMgPSB7XG4gICAgICAgIGFjdGl2ZVN0YXJ0RGF0ZTogYWN0aXZlU3RhcnREYXRlLFxuICAgICAgICBob3ZlcjogaG92ZXIsXG4gICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICBtYXhEYXRlOiBtYXhEYXRlLFxuICAgICAgICBtaW5EYXRlOiBtaW5EYXRlLFxuICAgICAgICBvbkNsaWNrOiBvbkNsaWNrLFxuICAgICAgICBvbk1vdXNlT3Zlcjogc2VsZWN0UmFuZ2UgPyBvbk1vdXNlT3ZlciA6IG51bGwsXG4gICAgICAgIHRpbGVDbGFzc05hbWU6IHRpbGVDbGFzc05hbWUsXG4gICAgICAgIHRpbGVDb250ZW50OiB0aWxlQ29udGVudCxcbiAgICAgICAgdGlsZURpc2FibGVkOiB0aWxlRGlzYWJsZWQsXG4gICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgdmFsdWVUeXBlOiB2YWx1ZVR5cGVcbiAgICAgIH07XG5cbiAgICAgIHN3aXRjaCAodmlldykge1xuICAgICAgICBjYXNlICdjZW50dXJ5JzpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB2YXIgZm9ybWF0WWVhciA9IHRoaXMucHJvcHMuZm9ybWF0WWVhcjtcbiAgICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDZW50dXJ5VmlldywgX2V4dGVuZHMoe1xuICAgICAgICAgICAgICBmb3JtYXRZZWFyOiBmb3JtYXRZZWFyXG4gICAgICAgICAgICB9LCBjb21tb25Qcm9wcykpO1xuICAgICAgICAgIH1cblxuICAgICAgICBjYXNlICdkZWNhZGUnOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHZhciBfZm9ybWF0WWVhciA9IHRoaXMucHJvcHMuZm9ybWF0WWVhcjtcbiAgICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChEZWNhZGVWaWV3LCBfZXh0ZW5kcyh7XG4gICAgICAgICAgICAgIGZvcm1hdFllYXI6IF9mb3JtYXRZZWFyXG4gICAgICAgICAgICB9LCBjb21tb25Qcm9wcykpO1xuICAgICAgICAgIH1cblxuICAgICAgICBjYXNlICd5ZWFyJzpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB2YXIgX3RoaXMkcHJvcHM1ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICAgICAgICBmb3JtYXRNb250aCA9IF90aGlzJHByb3BzNS5mb3JtYXRNb250aCxcbiAgICAgICAgICAgICAgICBmb3JtYXRNb250aFllYXIgPSBfdGhpcyRwcm9wczUuZm9ybWF0TW9udGhZZWFyO1xuICAgICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFllYXJWaWV3LCBfZXh0ZW5kcyh7XG4gICAgICAgICAgICAgIGZvcm1hdE1vbnRoOiBmb3JtYXRNb250aCxcbiAgICAgICAgICAgICAgZm9ybWF0TW9udGhZZWFyOiBmb3JtYXRNb250aFllYXJcbiAgICAgICAgICAgIH0sIGNvbW1vblByb3BzKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgIGNhc2UgJ21vbnRoJzpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB2YXIgX3RoaXMkcHJvcHM2ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICAgICAgICBmb3JtYXREYXkgPSBfdGhpcyRwcm9wczYuZm9ybWF0RGF5LFxuICAgICAgICAgICAgICAgIGZvcm1hdExvbmdEYXRlID0gX3RoaXMkcHJvcHM2LmZvcm1hdExvbmdEYXRlLFxuICAgICAgICAgICAgICAgIGZvcm1hdFNob3J0V2Vla2RheSA9IF90aGlzJHByb3BzNi5mb3JtYXRTaG9ydFdlZWtkYXksXG4gICAgICAgICAgICAgICAgb25DbGlja1dlZWtOdW1iZXIgPSBfdGhpcyRwcm9wczYub25DbGlja1dlZWtOdW1iZXIsXG4gICAgICAgICAgICAgICAgc2hvd0RvdWJsZVZpZXcgPSBfdGhpcyRwcm9wczYuc2hvd0RvdWJsZVZpZXcsXG4gICAgICAgICAgICAgICAgc2hvd0ZpeGVkTnVtYmVyT2ZXZWVrcyA9IF90aGlzJHByb3BzNi5zaG93Rml4ZWROdW1iZXJPZldlZWtzLFxuICAgICAgICAgICAgICAgIHNob3dOZWlnaGJvcmluZ01vbnRoID0gX3RoaXMkcHJvcHM2LnNob3dOZWlnaGJvcmluZ01vbnRoLFxuICAgICAgICAgICAgICAgIHNob3dXZWVrTnVtYmVycyA9IF90aGlzJHByb3BzNi5zaG93V2Vla051bWJlcnM7XG4gICAgICAgICAgICB2YXIgb25Nb3VzZUxlYXZlID0gdGhpcy5vbk1vdXNlTGVhdmU7XG4gICAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTW9udGhWaWV3LCBfZXh0ZW5kcyh7XG4gICAgICAgICAgICAgIGNhbGVuZGFyVHlwZTogY2FsZW5kYXJUeXBlLFxuICAgICAgICAgICAgICBmb3JtYXREYXk6IGZvcm1hdERheSxcbiAgICAgICAgICAgICAgZm9ybWF0TG9uZ0RhdGU6IGZvcm1hdExvbmdEYXRlLFxuICAgICAgICAgICAgICBmb3JtYXRTaG9ydFdlZWtkYXk6IGZvcm1hdFNob3J0V2Vla2RheSxcbiAgICAgICAgICAgICAgb25DbGlja1dlZWtOdW1iZXI6IG9uQ2xpY2tXZWVrTnVtYmVyLFxuICAgICAgICAgICAgICBvbk1vdXNlTGVhdmU6IHNlbGVjdFJhbmdlID8gb25Nb3VzZUxlYXZlIDogbnVsbCxcbiAgICAgICAgICAgICAgc2hvd0ZpeGVkTnVtYmVyT2ZXZWVrczogc2hvd0ZpeGVkTnVtYmVyT2ZXZWVrcyB8fCBzaG93RG91YmxlVmlldyxcbiAgICAgICAgICAgICAgc2hvd05laWdoYm9yaW5nTW9udGg6IHNob3dOZWlnaGJvcmluZ01vbnRoLFxuICAgICAgICAgICAgICBzaG93V2Vla051bWJlcnM6IHNob3dXZWVrTnVtYmVyc1xuICAgICAgICAgICAgfSwgY29tbW9uUHJvcHMpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHZpZXc6IFwiLmNvbmNhdCh2aWV3LCBcIi5cIikpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJOYXZpZ2F0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlck5hdmlnYXRpb24oKSB7XG4gICAgICB2YXIgc2hvd05hdmlnYXRpb24gPSB0aGlzLnByb3BzLnNob3dOYXZpZ2F0aW9uO1xuXG4gICAgICBpZiAoIXNob3dOYXZpZ2F0aW9uKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgYWN0aXZlU3RhcnREYXRlID0gdGhpcy5hY3RpdmVTdGFydERhdGUsXG4gICAgICAgICAgdmlldyA9IHRoaXMudmlldyxcbiAgICAgICAgICB2aWV3cyA9IHRoaXMudmlld3M7XG4gICAgICB2YXIgX3RoaXMkcHJvcHM3ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBmb3JtYXRNb250aFllYXIgPSBfdGhpcyRwcm9wczcuZm9ybWF0TW9udGhZZWFyLFxuICAgICAgICAgIGZvcm1hdFllYXIgPSBfdGhpcyRwcm9wczcuZm9ybWF0WWVhcixcbiAgICAgICAgICBsb2NhbGUgPSBfdGhpcyRwcm9wczcubG9jYWxlLFxuICAgICAgICAgIG1heERhdGUgPSBfdGhpcyRwcm9wczcubWF4RGF0ZSxcbiAgICAgICAgICBtaW5EYXRlID0gX3RoaXMkcHJvcHM3Lm1pbkRhdGUsXG4gICAgICAgICAgbmF2aWdhdGlvbkFyaWFMYWJlbCA9IF90aGlzJHByb3BzNy5uYXZpZ2F0aW9uQXJpYUxhYmVsLFxuICAgICAgICAgIG5hdmlnYXRpb25MYWJlbCA9IF90aGlzJHByb3BzNy5uYXZpZ2F0aW9uTGFiZWwsXG4gICAgICAgICAgbmV4dDJBcmlhTGFiZWwgPSBfdGhpcyRwcm9wczcubmV4dDJBcmlhTGFiZWwsXG4gICAgICAgICAgbmV4dDJMYWJlbCA9IF90aGlzJHByb3BzNy5uZXh0MkxhYmVsLFxuICAgICAgICAgIG5leHRBcmlhTGFiZWwgPSBfdGhpcyRwcm9wczcubmV4dEFyaWFMYWJlbCxcbiAgICAgICAgICBuZXh0TGFiZWwgPSBfdGhpcyRwcm9wczcubmV4dExhYmVsLFxuICAgICAgICAgIHByZXYyQXJpYUxhYmVsID0gX3RoaXMkcHJvcHM3LnByZXYyQXJpYUxhYmVsLFxuICAgICAgICAgIHByZXYyTGFiZWwgPSBfdGhpcyRwcm9wczcucHJldjJMYWJlbCxcbiAgICAgICAgICBwcmV2QXJpYUxhYmVsID0gX3RoaXMkcHJvcHM3LnByZXZBcmlhTGFiZWwsXG4gICAgICAgICAgcHJldkxhYmVsID0gX3RoaXMkcHJvcHM3LnByZXZMYWJlbCxcbiAgICAgICAgICBzaG93RG91YmxlVmlldyA9IF90aGlzJHByb3BzNy5zaG93RG91YmxlVmlldztcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChOYXZpZ2F0aW9uLCB7XG4gICAgICAgIGFjdGl2ZVN0YXJ0RGF0ZTogYWN0aXZlU3RhcnREYXRlLFxuICAgICAgICBkcmlsbFVwOiB0aGlzLmRyaWxsVXAsXG4gICAgICAgIGZvcm1hdE1vbnRoWWVhcjogZm9ybWF0TW9udGhZZWFyLFxuICAgICAgICBmb3JtYXRZZWFyOiBmb3JtYXRZZWFyLFxuICAgICAgICBsb2NhbGU6IGxvY2FsZSxcbiAgICAgICAgbWF4RGF0ZTogbWF4RGF0ZSxcbiAgICAgICAgbWluRGF0ZTogbWluRGF0ZSxcbiAgICAgICAgbmF2aWdhdGlvbkFyaWFMYWJlbDogbmF2aWdhdGlvbkFyaWFMYWJlbCxcbiAgICAgICAgbmF2aWdhdGlvbkxhYmVsOiBuYXZpZ2F0aW9uTGFiZWwsXG4gICAgICAgIG5leHQyQXJpYUxhYmVsOiBuZXh0MkFyaWFMYWJlbCxcbiAgICAgICAgbmV4dDJMYWJlbDogbmV4dDJMYWJlbCxcbiAgICAgICAgbmV4dEFyaWFMYWJlbDogbmV4dEFyaWFMYWJlbCxcbiAgICAgICAgbmV4dExhYmVsOiBuZXh0TGFiZWwsXG4gICAgICAgIHByZXYyQXJpYUxhYmVsOiBwcmV2MkFyaWFMYWJlbCxcbiAgICAgICAgcHJldjJMYWJlbDogcHJldjJMYWJlbCxcbiAgICAgICAgcHJldkFyaWFMYWJlbDogcHJldkFyaWFMYWJlbCxcbiAgICAgICAgcHJldkxhYmVsOiBwcmV2TGFiZWwsXG4gICAgICAgIHNldEFjdGl2ZVN0YXJ0RGF0ZTogdGhpcy5zZXRBY3RpdmVTdGFydERhdGUsXG4gICAgICAgIHNob3dEb3VibGVWaWV3OiBzaG93RG91YmxlVmlldyxcbiAgICAgICAgdmlldzogdmlldyxcbiAgICAgICAgdmlld3M6IHZpZXdzXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczggPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGNsYXNzTmFtZSA9IF90aGlzJHByb3BzOC5jbGFzc05hbWUsXG4gICAgICAgICAgaW5wdXRSZWYgPSBfdGhpcyRwcm9wczguaW5wdXRSZWYsXG4gICAgICAgICAgc2VsZWN0UmFuZ2UgPSBfdGhpcyRwcm9wczguc2VsZWN0UmFuZ2UsXG4gICAgICAgICAgc2hvd0RvdWJsZVZpZXcgPSBfdGhpcyRwcm9wczguc2hvd0RvdWJsZVZpZXc7XG4gICAgICB2YXIgb25Nb3VzZUxlYXZlID0gdGhpcy5vbk1vdXNlTGVhdmUsXG4gICAgICAgICAgdmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgICAgdmFyIHZhbHVlQXJyYXkgPSBbXS5jb25jYXQodmFsdWUpO1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBtZXJnZUNsYXNzTmFtZXMoYmFzZUNsYXNzTmFtZSwgc2VsZWN0UmFuZ2UgJiYgdmFsdWVBcnJheS5sZW5ndGggPT09IDEgJiYgXCJcIi5jb25jYXQoYmFzZUNsYXNzTmFtZSwgXCItLXNlbGVjdFJhbmdlXCIpLCBzaG93RG91YmxlVmlldyAmJiBcIlwiLmNvbmNhdChiYXNlQ2xhc3NOYW1lLCBcIi0tZG91YmxlVmlld1wiKSwgY2xhc3NOYW1lKSxcbiAgICAgICAgcmVmOiBpbnB1dFJlZlxuICAgICAgfSwgdGhpcy5yZW5kZXJOYXZpZ2F0aW9uKCksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChiYXNlQ2xhc3NOYW1lLCBcIl9fdmlld0NvbnRhaW5lclwiKSxcbiAgICAgICAgb25CbHVyOiBzZWxlY3RSYW5nZSA/IG9uTW91c2VMZWF2ZSA6IG51bGwsXG4gICAgICAgIG9uTW91c2VMZWF2ZTogc2VsZWN0UmFuZ2UgPyBvbk1vdXNlTGVhdmUgOiBudWxsXG4gICAgICB9LCB0aGlzLnJlbmRlckNvbnRlbnQoKSwgc2hvd0RvdWJsZVZpZXcgJiYgdGhpcy5yZW5kZXJDb250ZW50KHRydWUpKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImFjdGl2ZVN0YXJ0RGF0ZVwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIGFjdGl2ZVN0YXJ0RGF0ZVByb3BzID0gdGhpcy5wcm9wcy5hY3RpdmVTdGFydERhdGU7XG4gICAgICB2YXIgYWN0aXZlU3RhcnREYXRlU3RhdGUgPSB0aGlzLnN0YXRlLmFjdGl2ZVN0YXJ0RGF0ZTtcbiAgICAgIHJldHVybiBhY3RpdmVTdGFydERhdGVQcm9wcyB8fCBhY3RpdmVTdGFydERhdGVTdGF0ZSB8fCBnZXRJbml0aWFsQWN0aXZlU3RhcnREYXRlKHRoaXMucHJvcHMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ2YWx1ZVwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzOSA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgc2VsZWN0UmFuZ2UgPSBfdGhpcyRwcm9wczkuc2VsZWN0UmFuZ2UsXG4gICAgICAgICAgdmFsdWVQcm9wcyA9IF90aGlzJHByb3BzOS52YWx1ZTtcbiAgICAgIHZhciB2YWx1ZVN0YXRlID0gdGhpcy5zdGF0ZS52YWx1ZTsgLy8gSW4gdGhlIG1pZGRsZSBvZiByYW5nZSBzZWxlY3Rpb24sIHVzZSB2YWx1ZSBmcm9tIHN0YXRlXG5cbiAgICAgIGlmIChzZWxlY3RSYW5nZSAmJiBnZXRJc1NpbmdsZVZhbHVlKHZhbHVlU3RhdGUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZVN0YXRlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdmFsdWVQcm9wcyAhPT0gdW5kZWZpbmVkID8gdmFsdWVQcm9wcyA6IHZhbHVlU3RhdGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInZhbHVlVHlwZVwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIG1heERldGFpbCA9IHRoaXMucHJvcHMubWF4RGV0YWlsO1xuICAgICAgcmV0dXJuIGdldFZhbHVlVHlwZShtYXhEZXRhaWwpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ2aWV3XCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMxMCA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgbWluRGV0YWlsID0gX3RoaXMkcHJvcHMxMC5taW5EZXRhaWwsXG4gICAgICAgICAgbWF4RGV0YWlsID0gX3RoaXMkcHJvcHMxMC5tYXhEZXRhaWwsXG4gICAgICAgICAgdmlld1Byb3BzID0gX3RoaXMkcHJvcHMxMC52aWV3O1xuICAgICAgdmFyIHZpZXdTdGF0ZSA9IHRoaXMuc3RhdGUudmlldztcbiAgICAgIHJldHVybiBnZXRWaWV3KHZpZXdQcm9wcyB8fCB2aWV3U3RhdGUsIG1pbkRldGFpbCwgbWF4RGV0YWlsKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidmlld3NcIixcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczExID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBtaW5EZXRhaWwgPSBfdGhpcyRwcm9wczExLm1pbkRldGFpbCxcbiAgICAgICAgICBtYXhEZXRhaWwgPSBfdGhpcyRwcm9wczExLm1heERldGFpbDtcbiAgICAgIHJldHVybiBnZXRMaW1pdGVkVmlld3MobWluRGV0YWlsLCBtYXhEZXRhaWwpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJob3ZlclwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIHNlbGVjdFJhbmdlID0gdGhpcy5wcm9wcy5zZWxlY3RSYW5nZTtcbiAgICAgIHZhciBob3ZlciA9IHRoaXMuc3RhdGUuaG92ZXI7XG4gICAgICByZXR1cm4gc2VsZWN0UmFuZ2UgPyBob3ZlciA6IG51bGw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRyaWxsRG93bkF2YWlsYWJsZVwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIHZpZXcgPSB0aGlzLnZpZXcsXG4gICAgICAgICAgdmlld3MgPSB0aGlzLnZpZXdzO1xuICAgICAgcmV0dXJuIHZpZXdzLmluZGV4T2YodmlldykgPCB2aWV3cy5sZW5ndGggLSAxO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkcmlsbFVwQXZhaWxhYmxlXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICB2YXIgdmlldyA9IHRoaXMudmlldyxcbiAgICAgICAgICB2aWV3cyA9IHRoaXMudmlld3M7XG4gICAgICByZXR1cm4gdmlld3MuaW5kZXhPZih2aWV3KSA+IDA7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENhbGVuZGFyO1xufShDb21wb25lbnQpO1xuXG5leHBvcnQgeyBDYWxlbmRhciBhcyBkZWZhdWx0IH07XG5DYWxlbmRhci5kZWZhdWx0UHJvcHMgPSB7XG4gIG1heERhdGU6IGRlZmF1bHRNYXhEYXRlLFxuICBtYXhEZXRhaWw6ICdtb250aCcsXG4gIG1pbkRhdGU6IGRlZmF1bHRNaW5EYXRlLFxuICBtaW5EZXRhaWw6ICdjZW50dXJ5JyxcbiAgcmV0dXJuVmFsdWU6ICdzdGFydCcsXG4gIHNob3dOYXZpZ2F0aW9uOiB0cnVlLFxuICBzaG93TmVpZ2hib3JpbmdNb250aDogdHJ1ZVxufTtcbnZhciBpc0FjdGl2ZVN0YXJ0RGF0ZSA9IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpO1xudmFyIGlzTG9vc2VWYWx1ZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIGlzVmFsdWVdKTtcbkNhbGVuZGFyLnByb3BUeXBlcyA9IHtcbiAgYWN0aXZlU3RhcnREYXRlOiBpc0FjdGl2ZVN0YXJ0RGF0ZSxcbiAgYWxsb3dQYXJ0aWFsUmFuZ2U6IFByb3BUeXBlcy5ib29sLFxuICBjYWxlbmRhclR5cGU6IGlzQ2FsZW5kYXJUeXBlLFxuICBjbGFzc05hbWU6IGlzQ2xhc3NOYW1lLFxuICBkZWZhdWx0QWN0aXZlU3RhcnREYXRlOiBpc0FjdGl2ZVN0YXJ0RGF0ZSxcbiAgZGVmYXVsdFZhbHVlOiBpc0xvb3NlVmFsdWUsXG4gIGRlZmF1bHRWaWV3OiBpc1ZpZXcsXG4gIGZvcm1hdERheTogUHJvcFR5cGVzLmZ1bmMsXG4gIGZvcm1hdExvbmdEYXRlOiBQcm9wVHlwZXMuZnVuYyxcbiAgZm9ybWF0TW9udGg6IFByb3BUeXBlcy5mdW5jLFxuICBmb3JtYXRNb250aFllYXI6IFByb3BUeXBlcy5mdW5jLFxuICBmb3JtYXRTaG9ydFdlZWtkYXk6IFByb3BUeXBlcy5mdW5jLFxuICBmb3JtYXRZZWFyOiBQcm9wVHlwZXMuZnVuYyxcbiAgaW5wdXRSZWY6IGlzUmVmLFxuICBsb2NhbGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG1heERhdGU6IGlzTWF4RGF0ZSxcbiAgbWF4RGV0YWlsOiBQcm9wVHlwZXMub25lT2YoYWxsVmlld3MpLFxuICBtaW5EYXRlOiBpc01pbkRhdGUsXG4gIG1pbkRldGFpbDogUHJvcFR5cGVzLm9uZU9mKGFsbFZpZXdzKSxcbiAgbmF2aWdhdGlvbkFyaWFMYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbmF2aWdhdGlvbkxhYmVsOiBQcm9wVHlwZXMuZnVuYyxcbiAgbmV4dDJBcmlhTGFiZWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG5leHQyTGFiZWw6IFByb3BUeXBlcy5ub2RlLFxuICBuZXh0QXJpYUxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBuZXh0TGFiZWw6IFByb3BUeXBlcy5ub2RlLFxuICBvbkFjdGl2ZVN0YXJ0RGF0ZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25DbGlja0RheTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uQ2xpY2tEZWNhZGU6IFByb3BUeXBlcy5mdW5jLFxuICBvbkNsaWNrTW9udGg6IFByb3BUeXBlcy5mdW5jLFxuICBvbkNsaWNrV2Vla051bWJlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uQ2xpY2tZZWFyOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25EcmlsbERvd246IFByb3BUeXBlcy5mdW5jLFxuICBvbkRyaWxsVXA6IFByb3BUeXBlcy5mdW5jLFxuICBvblZpZXdDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICBwcmV2MkFyaWFMYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcHJldjJMYWJlbDogUHJvcFR5cGVzLm5vZGUsXG4gIHByZXZBcmlhTGFiZWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHByZXZMYWJlbDogUHJvcFR5cGVzLm5vZGUsXG4gIHJldHVyblZhbHVlOiBQcm9wVHlwZXMub25lT2YoWydzdGFydCcsICdlbmQnLCAncmFuZ2UnXSksXG4gIHNlbGVjdFJhbmdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2hvd0RvdWJsZVZpZXc6IFByb3BUeXBlcy5ib29sLFxuICBzaG93Rml4ZWROdW1iZXJPZldlZWtzOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2hvd05hdmlnYXRpb246IFByb3BUeXBlcy5ib29sLFxuICBzaG93TmVpZ2hib3JpbmdNb250aDogUHJvcFR5cGVzLmJvb2wsXG4gIHNob3dXZWVrTnVtYmVyczogUHJvcFR5cGVzLmJvb2wsXG4gIHRpbGVDbGFzc05hbWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBpc0NsYXNzTmFtZV0pLFxuICB0aWxlQ29udGVudDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gIHRpbGVEaXNhYmxlZDogUHJvcFR5cGVzLmZ1bmMsXG4gIHZhbHVlOiBpc0xvb3NlVmFsdWUsXG4gIHZpZXc6IGlzVmlld1xufTsiLCJpbXBvcnQgQ2FsZW5kYXIgZnJvbSAnLi9DYWxlbmRhcic7XG5pbXBvcnQgQ2VudHVyeVZpZXcgZnJvbSAnLi9DZW50dXJ5Vmlldyc7XG5pbXBvcnQgRGVjYWRlVmlldyBmcm9tICcuL0RlY2FkZVZpZXcnO1xuaW1wb3J0IFllYXJWaWV3IGZyb20gJy4vWWVhclZpZXcnO1xuaW1wb3J0IE1vbnRoVmlldyBmcm9tICcuL01vbnRoVmlldyc7XG5leHBvcnQgZGVmYXVsdCBDYWxlbmRhcjtcbmV4cG9ydCB7IENhbGVuZGFyLCBDZW50dXJ5VmlldywgRGVjYWRlVmlldywgWWVhclZpZXcsIE1vbnRoVmlldyB9OyIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDYWxlbmRhciBmcm9tICdyZWFjdC1jYWxlbmRhcic7XG5cbmZ1bmN0aW9uIFJlc2VydmF0aW9uKCkge1xuXG4gICAgY29uc3QgW2RhdGUsIHNldERhdGVdID0gdXNlU3RhdGUobmV3IERhdGUoKSk7XG4gICAgY29uc3QgW3BpY2tlZERhdGUsIHNldFBpY2tlZERhdGVdID0gdXNlU3RhdGUoW10pO1xuICAgIGNvbnN0IFtyZXNlcnZhdGlvblBhZ2UsIHNldFJlc2VydmF0aW9uUGFnZV0gPSB1c2VTdGF0ZSgnbWVudScpO1xuXG4gICAgY29uc3Qgb25DaGFuZ2UgPSAoZGF0ZSkgPT4ge1xuICAgICAgICBzZXREYXRlKGRhdGUpO1xuICAgICAgICBjb25zdCBkYXRlQXJyYXkgPSBkYXRlLnRvU3RyaW5nKCkuc3BsaXQoJyAnKTtcbiAgICAgICAgY29uc3QgZGF0ZUFycmF5Rm9yRGlzcGxheSA9IFtdO1xuICAgICAgICBkYXRlQXJyYXlGb3JEaXNwbGF5LnB1c2goZGF0ZUFycmF5WzNdKTtcbiAgICAgICAgZGF0ZUFycmF5Rm9yRGlzcGxheS5wdXNoKGRhdGVBcnJheVsxXSk7XG4gICAgICAgIGRhdGVBcnJheUZvckRpc3BsYXkucHVzaChkYXRlQXJyYXlbMl0pO1xuICAgICAgICBkYXRlQXJyYXlGb3JEaXNwbGF5LnB1c2goZGF0ZUFycmF5WzBdKTtcbiAgICAgICAgc2V0UGlja2VkRGF0ZShkYXRlQXJyYXlGb3JEaXNwbGF5KTtcbiAgICB9XG5cbiAgICBjb25zdCBkaXNhYmxlUGFzdERhdGVzID0gKHsgYWN0aXZlU3RhcnREYXRlLCBkYXRlLCB2aWV3IH0pID0+IHtcblxuICAgICAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGNvbnN0IHllc3RlcmRheSA9IG5ldyBEYXRlKHRvZGF5KTtcbiAgICAgICAgeWVzdGVyZGF5LnNldERhdGUoeWVzdGVyZGF5LmdldERhdGUoKSAtIDEpO1xuICAgICAgICB0b2RheS50b0RhdGVTdHJpbmcoKTtcbiAgICAgICAgeWVzdGVyZGF5LnRvRGF0ZVN0cmluZygpO1xuICAgICAgICByZXR1cm4geWVzdGVyZGF5ID49IGRhdGU7XG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc2VydmF0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJlc2VydmF0aW9uJyk7XG4gICAgICAgIHJlc2VydmF0aW9uLnN0eWxlLnJpZ2h0ID0gJy0zMDAwcHgnO1xuICAgICAgICBzZXRSZXNlcnZhdGlvblBhZ2UoJ21lbnUnKTtcbiAgICB9XG5cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyZXNlcnZhdGlvbic+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY2xvc2UnIG9uQ2xpY2s9e2hhbmRsZUNsaWNrfT4mIzIxNTs8L2Rpdj5cbiAgICAgICAgICAgIDxuYXY+XG4gICAgICAgICAgICAgICAgPGRpdiBvbkNsaWNrPXsoKSA9PiB7IHNldFJlc2VydmF0aW9uUGFnZSgnbWVudScpfX0+PHA+REFURTwvcD48L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9eygpID0+IHsgc2V0UmVzZXJ2YXRpb25QYWdlKCd0aW1lJykgfX0+PHA+VElNRTwvcD48L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9eygpID0+IHsgc2V0UmVzZXJ2YXRpb25QYWdlKCdwZW9wbGUnKSB9fT48cD5TSVpFPC9wPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgb25DbGljaz17KCkgPT4geyBzZXRSZXNlcnZhdGlvblBhZ2UoJ2luZm8nKSB9fT48cD5JTkZPPC9wPjwvZGl2PlxuICAgICAgICAgICAgPC9uYXY+XG4gICAgICAgICAgICB7IHJlc2VydmF0aW9uUGFnZSA9PT0gJ21lbnUnIHx8IG51bGwgfHwgJycgfHwgdW5kZWZpbmVkID9cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyZXNlcnZhdGlvbi1jb250YWluZXInPlxuICAgICAgICAgICAgICAgICAgICA8Q2FsZW5kYXIgb25DaGFuZ2U9e29uQ2hhbmdlfSB2YWx1ZT17ZGF0ZX0gdGlsZURpc2FibGVkPXtkaXNhYmxlUGFzdERhdGVzfS8+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3Jlc2VydmF0aW9uLWRhdGUnPjwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgOiByZXNlcnZhdGlvblBhZ2UgPT09ICd0aW1lJyA/XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyZXNlcnZhdGlvbi1jb250YWluZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3Jlc2VydmF0aW9uLXN1Yi1jb250YWluZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0aW1lJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+TFVOQ0g8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4xMjowMCBQTTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+MTowMCBQTTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+MjowMCBQTTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RpbWUnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5ESU5ORVI8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT42OjAwIFBNPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT43OjAwIFBNPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT44OjAwIFBNPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA6IHJlc2VydmF0aW9uUGFnZSA9PT0gJ3Blb3BsZScgP1xuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3Jlc2VydmF0aW9uLWNvbnRhaW5lcic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3Jlc2VydmF0aW9uLXN1Yi1jb250YWluZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nc2l6ZSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5QQVJUWSBTSVpFPC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4xIC0gMiBwZW9wbGU8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4zIC0gNCBwZW9wbGU8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT41IC0gNiBwZW9wbGU8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5vdmVyIDYgcGVvcGxlPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDogcmVzZXJ2YXRpb25QYWdlID09PSAnaW5mbycgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyZXNlcnZhdGlvbi1jb250YWluZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBhY3Rpb249Jyc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgbmFtZT0naW5mbycgaWQ9J2luZm8nIGNvbHM9JzUwJyByb3dzPScxMCcgcGxhY2Vob2xkZXI9J1BsZWFzZSBsZXQgdXMga25vdyBpZiB5b3UgaGF2ZSBhZGRpdGlvbmFsIHJlcXVlc3RzLic+PC90ZXh0YXJlYT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA6PD48Lz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb25maXJtLWNvbnRhaW5lcic+XG4gICAgICAgICAgICAgICAgPHA+WU9VUiBSRVNFUlZBVElPTjoge3BpY2tlZERhdGVbMF19L3twaWNrZWREYXRlWzFdfS97cGlja2VkRGF0ZVsyXX0oe3BpY2tlZERhdGVbM119KTwvcD5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT0ncmVzZXJ2YXRpb24tYm90dG9uJz5DT05GSVJNPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZXNlcnZhdGlvbjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IExvZ28gZnJvbSAnLi9pbWFnZXMvc2FjaGFsLnBuZyc7XG5pbXBvcnQgTWVudSBmcm9tICcuL01lbnUnO1xuaW1wb3J0IFJlc2VydmF0aW9uIGZyb20gJy4vUmVzZXJ2YXRpb24nO1xuXG5mdW5jdGlvbiBNYWluKCkge1xuXG5cblxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwibWFpbi1zZWN0aW9uXCI+XG5cbiAgICAgICAgICAgIDxNZW51IC8+XG4gICAgICAgICAgICA8UmVzZXJ2YXRpb24gLz5cbiAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPVwibG9nb1wiIHNyYz17TG9nb30gLz5cblxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBNYWluOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmZ1bmN0aW9uIEZvb3RlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8Zm9vdGVyPjxwPkNyZWF0ZWQgYnkgSm9uZ2d1IEpha2UgQmFlazwvcD48L2Zvb3Rlcj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvb3RlcjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBBbmltYXRpb24oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlyZWZseVwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXJlZmx5XCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpcmVmbHlcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlyZWZseVwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXJlZmx5XCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpcmVmbHlcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlyZWZseVwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXJlZmx5XCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpcmVmbHlcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlyZWZseVwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXJlZmx5XCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpcmVmbHlcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlyZWZseVwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXJlZmx5XCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpcmVmbHlcIj48L2Rpdj5cbiAgICAgICAgPC8+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBBbmltYXRpb247IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjI5N2MyYWE2ZjA5M2I0NzVmOGMxMjY0NzNhMGQxM2FhLmpwZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIzNjhkOWUzMDg0ZDljZmVlMDA4YjA5MGE0NmJjYjEwOS5qcGdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiODUzNjQ2NDVmYmEzNWRmMTUxNGQ3MDk0NTU4NGJiZTIuanBnXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjdjYzM3MDRkMTU2MDY0MGJjMmE4MWY4NmM2NjYxZTBhLmpwZ1wiOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciwgUm91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW1wb3J0IEhlYWRlciBmcm9tICcuL0hlYWRlcic7XG5pbXBvcnQgTmF2IGZyb20gJy4vTmF2JztcbmltcG9ydCBBZG1pbiBmcm9tICcuL0FkbWluJztcbmltcG9ydCBNYWluIGZyb20gJy4vTWFpbic7XG5pbXBvcnQgRm9vdGVyIGZyb20gJy4vRm9vdGVyJztcbmltcG9ydCBBbmltYXRpb24gZnJvbSAnLi9BbmltYXRpb24nO1xuaW1wb3J0IEJhY2tncm91bmQxIGZyb20gJy4vaW1hZ2VzL2JhY2tncm91bmQxLmpwZyc7XG5pbXBvcnQgQmFja2dyb3VuZDIgZnJvbSAnLi9pbWFnZXMvYmFja2dyb3VuZDIuanBnJztcbmltcG9ydCBCYWNrZ3JvdW5kMyBmcm9tICcuL2ltYWdlcy9iYWNrZ3JvdW5kMy5qcGcnO1xuaW1wb3J0IEJhY2tncm91bmQ0IGZyb20gJy4vaW1hZ2VzL2JhY2tncm91bmQ0LmpwZyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBBcHAoKSB7XG5cbiAgICByZXR1cm4gKFxuICAgICAgIDxSb3V0ZXI+XG4gICAgICAgICAgICA8SGVhZGVyIC8+XG4gICAgICAgICAgIDxtYWluPlxuICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPSdiYWNrZ3JvdW5kMScgc3JjPXtCYWNrZ3JvdW5kMX0gYWx0PVwiXCIgLz5cbiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT0nYmFja2dyb3VuZDInIHNyYz17QmFja2dyb3VuZDJ9IGFsdD1cIlwiIC8+XG4gICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9J2JhY2tncm91bmQzJyBzcmM9e0JhY2tncm91bmQzfSBhbHQ9XCJcIiAvPlxuICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPSdiYWNrZ3JvdW5kNCcgc3JjPXtCYWNrZ3JvdW5kNH0gYWx0PVwiXCIgLz5cbiAgICAgICAgICAgICAgICA8TmF2IC8+XG4gICAgICAgICAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvXCIgcmVuZGVyPXtNYWlufSAvPlxuICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL2FkbWluXCIgY29tcG9uZW50PXtBZG1pbn0gLz5cbiAgICAgICAgICAgICAgICA8QW5pbWF0aW9uIC8+XG4gICAgICAgICAgIDwvbWFpbj5cbiAgICAgICAgICAgIDxGb290ZXIgLz5cbiAgICAgICA8L1JvdXRlcj5cbiAgICApO1xufSIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4ubGVzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB7IEFwcCB9IGZyb20gJy4vQXBwJztcbmltcG9ydCBcIi4vc3R5bGUvbWFpbi5sZXNzXCI7XG5cbmNvbnN0IGFwcEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpO1xuXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgYXBwRWxlbWVudCk7Il0sInNvdXJjZVJvb3QiOiIifQ==